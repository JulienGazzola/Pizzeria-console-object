11:30:59.291 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				null
11:31:02.849 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Aurevoir ☹
14:17:40.107 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				null
14:25:59.879 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Aurevoir ☹
14:28:41.806 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Aurevoir ☹
14:30:31.446 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Aurevoir ☹
14:31:10.898 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:34:59.516 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:35:01.763 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Aurevoir ☹
14:35:05.545 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:35:06.652 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:35:29.189 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:35:31.178 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:35:43.203 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
14:35:46.499 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
14:35:50.515 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
14:35:58.068 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = La pizza existe déjà
14:35:58.070 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:35:59.915 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
14:36:05.355 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
14:36:10.403 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
14:36:30.396 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:36:33.771 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Aurevoir ☹
14:36:38.863 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:36:40.050 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:36:41.043 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Aurevoir ☹
14:43:53.002 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:43:54.555 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Liste des pizzas
14:43:54.568 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				PEP -> Pépéroni (12.5 €) : Viande 
14:43:54.568 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				MAR -> Margherita (14.0 €) : SansViande 
14:43:54.568 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				REIN -> La Reine (11.5 €) : Viande 
14:43:54.568 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				FRO -> La 4 fromages (12.0 €) : SansViande 
14:43:54.568 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				CAN -> La cannibale (12.5 €) : Viande 
14:43:54.569 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				SAV -> La savoyarde (13.0 €) : Viande 
14:43:54.569 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				ORI -> L'orientale (13.5 €) : Viande 
14:43:54.569 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				IND -> L'indienne (14.0 €) : Viande 
14:43:54.569 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:44:00.993 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
14:44:05.937 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
14:44:07.048 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
14:44:08.217 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de la pizza
14:44:11.906 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
14:44:11.908 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:44:13.552 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Liste des pizzas
14:44:13.553 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				PEP -> Pépéroni (12.5 €) : Viande 
14:44:13.553 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				MAR -> Margherita (14.0 €) : SansViande 
14:44:13.553 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				REIN -> La Reine (11.5 €) : Viande 
14:44:13.553 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				FRO -> La 4 fromages (12.0 €) : SansViande 
14:44:13.553 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				CAN -> La cannibale (12.5 €) : Viande 
14:44:13.553 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				SAV -> La savoyarde (13.0 €) : Viande 
14:44:13.554 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				ORI -> L'orientale (13.5 €) : Viande 
14:44:13.554 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				IND -> L'indienne (14.0 €) : Viande 
14:44:13.554 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				TOTO -> toto (10.0 €) : Viande 
14:44:13.554 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:44:18.505 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Mise à jour d'une pizza
14:44:18.505 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				PEP -> Pépéroni (12.5 €)
14:44:18.506 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				MAR -> Margherita (14.0 €)
14:44:18.506 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				REIN -> La Reine (11.5 €)
14:44:18.506 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				FRO -> La 4 fromages (12.0 €)
14:44:18.506 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				CAN -> La cannibale (12.5 €)
14:44:18.506 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				SAV -> La savoyarde (13.0 €)
14:44:18.506 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				ORI -> L'orientale (13.5 €)
14:44:18.506 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				IND -> L'indienne (14.0 €)
14:44:18.506 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				TOTO -> toto (10.0 €)
14:44:18.506 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le code de la pizza à supprimer : 
14:44:21.577 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau code : 
14:44:59.736 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau nom (sans espace) : 
14:45:03.216 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau prix : 
14:45:04.785 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de pizza : 
14:45:06.360 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Error
14:45:06.360 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:45:08.337 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Liste des pizzas
14:45:08.337 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				TUTU -> tutu (10.0 €) : Viande 
14:45:08.337 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				MAR -> Margherita (14.0 €) : SansViande 
14:45:08.337 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				REIN -> La Reine (11.5 €) : Viande 
14:45:08.337 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				FRO -> La 4 fromages (12.0 €) : SansViande 
14:45:08.337 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				CAN -> La cannibale (12.5 €) : Viande 
14:45:08.338 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				SAV -> La savoyarde (13.0 €) : Viande 
14:45:08.338 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				ORI -> L'orientale (13.5 €) : Viande 
14:45:08.338 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				IND -> L'indienne (14.0 €) : Viande 
14:45:08.338 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				TOTO -> toto (10.0 €) : Viande 
14:45:08.338 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:45:37.009 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Suppression d'une pizza
14:45:37.009 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				TUTU -> tutu (10.0 €)
14:45:37.009 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				MAR -> Margherita (14.0 €)
14:45:37.009 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				REIN -> La Reine (11.5 €)
14:45:37.009 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				FRO -> La 4 fromages (12.0 €)
14:45:37.010 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				CAN -> La cannibale (12.5 €)
14:45:37.010 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				SAV -> La savoyarde (13.0 €)
14:45:37.010 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				ORI -> L'orientale (13.5 €)
14:45:37.010 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				IND -> L'indienne (14.0 €)
14:45:37.010 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				TOTO -> toto (10.0 €)
14:45:37.010 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez choisir le code de la pizza à supprimer
14:45:43.136 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:45:45.552 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Liste des pizzas
14:45:45.552 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				MAR -> Margherita (14.0 €) : SansViande 
14:45:45.552 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				REIN -> La Reine (11.5 €) : Viande 
14:45:45.553 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				FRO -> La 4 fromages (12.0 €) : SansViande 
14:45:45.553 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				CAN -> La cannibale (12.5 €) : Viande 
14:45:45.553 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				SAV -> La savoyarde (13.0 €) : Viande 
14:45:45.553 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				ORI -> L'orientale (13.5 €) : Viande 
14:45:45.553 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				IND -> L'indienne (14.0 €) : Viande 
14:45:45.553 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				TOTO -> toto (10.0 €) : Viande 
14:45:45.553 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:45:49.433 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Aurevoir ☹
17:16:06.511 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
17:38:10.505 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
17:42:25.386 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
17:43:25.841 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
17:43:36.313 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
17:43:38.682 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
17:43:42.490 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de la pizza
17:43:48.486 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
09:52:49.380 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
10:07:56.723 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
10:08:13.919 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
10:08:15.902 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
10:08:17.254 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de la pizza
10:08:21.876 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
10:35:10.502 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Mise à jour d'une pizza
10:35:10.505 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le code de la pizza à modifier : 
10:35:20.680 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau code : 
10:35:29.160 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau nom (sans espace) : 
10:35:30.287 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau prix : 
10:35:31.735 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de pizza : 
10:35:37.122 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ce code n'existe pas
10:38:03.802 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Mise à jour d'une pizza
10:38:03.805 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le code de la pizza à modifier : 
10:38:07.607 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau code : 
10:38:16.551 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau nom (sans espace) : 
10:38:18.703 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau prix : 
10:38:20.114 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de pizza : 
10:43:10.309 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Mise à jour d'une pizza
10:43:10.312 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le code de la pizza à modifier : 
10:43:36.966 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
10:44:26.311 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
10:44:29.396 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
11:02:23.716 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
11:02:23.720 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
11:02:23.720 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
11:03:31.680 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
11:03:31.685 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
11:03:31.685 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
11:03:31.686 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de la pizza
11:03:31.703 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
11:05:56.253 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
11:05:56.257 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
11:05:56.258 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
11:05:56.259 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de la pizza
11:05:56.267 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
11:06:27.438 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
11:06:27.441 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
11:06:27.442 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
11:06:27.442 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de la pizza
11:06:27.449 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
11:06:46.672 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
11:06:46.676 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
11:06:46.676 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
11:06:46.676 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de la pizza
11:06:46.682 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
11:08:17.674 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Mise à jour d'une pizza
11:08:17.678 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le code de la pizza à modifier : 
11:08:17.679 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau code : 
11:08:17.679 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau nom (sans espace) : 
11:08:17.679 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau prix : 
11:09:33.405 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Mise à jour d'une pizza
11:09:33.408 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le code de la pizza à modifier : 
11:09:33.408 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau code : 
11:09:33.408 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau nom (sans espace) : 
11:09:33.409 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau prix : 
11:10:54.274 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Mise à jour d'une pizza
11:10:54.276 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le code de la pizza à modifier : 
11:10:54.277 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau code : 
11:10:54.277 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau nom (sans espace) : 
11:10:54.277 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau prix : 
11:10:54.277 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de pizza : 
11:11:11.308 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Mise à jour d'une pizza
11:11:11.311 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le code de la pizza à modifier : 
11:11:11.312 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau code : 
11:11:11.312 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau nom (sans espace) : 
11:11:11.312 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nouveau prix : 
11:11:11.313 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de pizza : 
11:17:12.882 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Suppression d'une pizza
11:17:12.885 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez choisir le code de la pizza à supprimer
11:17:49.945 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Suppression d'une pizza
11:17:49.947 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez choisir le code de la pizza à supprimer
11:18:51.361 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
11:18:51.364 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
11:18:51.364 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
11:18:51.364 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de la pizza
11:18:51.372 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
11:20:57.810 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
11:20:57.812 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
11:20:57.812 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
11:20:57.812 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de la pizza
11:20:57.820 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
11:24:02.740 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
11:24:02.743 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
11:24:02.743 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
11:24:02.743 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de la pizza
11:24:02.751 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
11:24:56.389 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
11:24:56.391 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
11:24:56.392 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
11:24:56.392 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de la pizza
11:25:19.601 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
11:25:19.604 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
11:25:19.604 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
11:25:19.604 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de la pizza
11:25:19.610 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
11:28:53.514 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
11:28:53.517 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
11:28:53.518 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
11:28:53.518 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de la pizza
11:28:53.526 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
11:28:53.530 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
11:28:53.531 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
11:28:53.531 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
11:28:53.531 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de la pizza
11:28:53.532 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
11:30:12.192 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
11:30:12.194 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
11:30:12.194 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
11:30:12.195 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de la pizza
11:30:12.203 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
11:30:12.207 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Ajout d'une nouvelle pizza
Veuillez saisir le code : 
11:30:12.207 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le nom (sans espace) : 
11:30:12.207 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir le prix : 
11:30:12.207 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Veuillez saisir la catégorie de la pizza
11:30:12.207 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
11:44:22.728 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
11:44:25.548 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Liste des pizzas
11:44:25.679 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				PEP -> Pépéroni (12.5 €) : Viande 
11:44:25.679 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				MAR -> Margherita (14.0 €) : SansViande 
11:44:25.679 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				REIN -> La Reine (11.5 €) : Viande 
11:44:25.679 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				FRO -> La 4 fromages (12.0 €) : SansViande 
11:44:25.679 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				CAN -> La cannibale (12.5 €) : Viande 
11:44:25.679 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				SAV -> La savoyarde (13.0 €) : Viande 
11:44:25.679 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				ORI -> L'orientale (13.5 €) : Viande 
11:44:25.679 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				IND -> L'indienne (14.0 €) : Viande 
11:44:25.679 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
11:44:29.192 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Aurevoir ☹
11:44:57.671 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Could not connect: Access denied for user ''@'localhost' to database 'pizzadb'
11:45:45.771 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Could not connect: Access denied for user ''@'localhost' to database 'pizzadb'
11:49:58.368 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Could not connect: Access denied for user ''@'localhost' to database 'pizzadb'
11:51:03.062 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Could not connect: Access denied for user ''@'localhost' to database 'pizzadb'
11:52:48.841 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Could not connect: Access denied for user ''@'localhost' to database 'pizzadb'
11:52:57.895 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Could not connect: Access denied for user ''@'localhost' to database 'pizzadb'
11:56:33.723 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Could not connect: Access denied for user ''@'localhost' to database 'pizzadb'
12:01:16.089 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Could not connect: Access denied for user ''@'localhost' to database 'pizzadb'
12:01:56.493 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Could not connect: Access denied for user ''@'localhost' to database 'pizzadb'
12:06:03.063 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Could not connect: Access denied for user ''@'localhost' to database 'pizzadb'
12:07:20.065 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Could not connect: Access denied for user ''@'localhost' to database 'pizzadb'
12:09:32.243 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Could not connect: Access denied for user ''@'localhost' to database 'pizzadb'
12:10:44.766 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = No such column :NAME
12:10:44.782 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
12:10:49.802 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Liste des pizzas
12:10:49.802 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = null
12:10:49.802 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
12:13:11.693 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = No such column :NAME
12:13:11.774 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
12:13:16.294 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Liste des pizzas
12:13:16.309 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = null
12:13:16.309 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
12:13:50.327 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = No such column :NAME
12:13:50.343 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
12:14:04.113 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = No such column :NAME
12:14:04.128 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
12:14:53.930 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = No such column :NAME
12:14:53.945 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
12:15:18.763 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = No such column :NAME
12:15:18.763 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
12:16:22.848 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = No such column :NAME
12:16:22.867 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
12:25:31.346 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
12:25:34.856 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Liste des pizzas
12:25:34.861 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				PEP -> Pépéroni (13.0 €) : Viande 
12:25:34.861 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				MAR -> Margherita (14.0 €) : SansViande 
12:25:34.861 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				REIN -> La Reine (12.0 €) : Viande 
12:25:34.861 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
12:26:11.024 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
12:26:16.101 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Liste des pizzas
12:26:16.114 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				PEP -> Pépéroni (13.0 €) : Viande 
12:26:16.114 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				MAR -> Margherita (14.0 €) : SansViande 
12:26:16.114 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				REIN -> La Reine (12.0 €) : Viande 
12:26:16.114 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
12:26:56.134 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
12:27:57.243 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
12:30:20.240 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
12:30:50.676 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Liste des pizzas
12:30:50.703 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				PEP -> Pépéroni (13.0 €) : Viande 
12:30:50.703 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				MAR -> Margherita (14.0 €) : SansViande 
12:30:50.703 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				REIN -> La Reine (12.0 €) : Viande 
12:31:00.518 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
12:31:10.493 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				Liste des pizzas
12:31:10.495 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				PEP -> Pépéroni (13.0 €) : Viande 
12:31:10.495 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				MAR -> Margherita (14.0 €) : SansViande 
12:31:10.495 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				REIN -> La Reine (12.0 €) : Viande 
14:27:36.588 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
14:27:53.817 [main] INFO  f.p.console.PizzeriaAdminConsoleApp -
				** Pizzeria Administration **
1. Lister les pizza
2. Ajouter une nouvelle pizza
3. Mette à jour une pizza
4. Supprimer une pizza
99. Sortir
14:40:00.364 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
14:40:00.370 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Duplicate entry '0' for key 'PRIMARY'
14:56:25.370 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
15:17:52.155 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
15:23:55.914 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
15:25:35.802 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
15:29:30.869 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
15:38:18.162 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
15:38:18.279 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Duplicate entry 'TOTO' for key 'CODE'
15:38:45.937 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
15:44:51.802 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
15:44:51.816 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Column count doesn't match value count at row 1
15:48:39.026 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
15:54:35.171 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
15:55:14.451 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
15:56:41.171 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error
16:20:26.444 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Error catégorie
16:21:31.713 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Mauvais nom de catégorie : VIANDE | POISSON | SANS_VIANDE
16:46:20.603 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Ce code n'existe pas
16:48:31.874 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Ce code n'existe pas
16:49:15.434 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = Ce code n'existe pas
17:12:38.305 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = La pizza existe déjà
17:15:35.423 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = La pizza existe déjà
17:18:10.659 [main] DEBUG fr.pizzeria.logger.AppService -
				Traitement 1 : param = La pizza existe déjà
16:32:00.327 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
16:32:00.373 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
16:32:00.375 [main] INFO  o.h.j.b.i.PersistenceXmlParser -
				HHH000318: Could not find any META-INF/persistence.xml file in the classpath
16:32:00.376 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 0 persistence units; checking each
16:32:00.376 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Found no matching persistence units
16:37:35.194 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
16:37:35.236 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
16:37:35.238 [main] INFO  o.h.j.b.i.PersistenceXmlParser -
				HHH000318: Could not find any META-INF/persistence.xml file in the classpath
16:37:35.238 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 0 persistence units; checking each
16:37:35.238 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Found no matching persistence units
16:41:25.682 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
16:41:25.728 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
16:41:25.729 [main] INFO  o.h.j.b.i.PersistenceXmlParser -
				HHH000318: Could not find any META-INF/persistence.xml file in the classpath
16:41:25.730 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 0 persistence units; checking each
16:41:25.730 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Found no matching persistence units
16:43:57.361 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
16:43:57.402 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
16:43:57.403 [main] INFO  o.h.j.b.i.PersistenceXmlParser -
				HHH000318: Could not find any META-INF/persistence.xml file in the classpath
16:43:57.404 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 0 persistence units; checking each
16:43:57.404 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Found no matching persistence units
16:44:47.319 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
16:44:47.363 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
16:44:47.365 [main] INFO  o.h.j.b.i.PersistenceXmlParser -
				HHH000318: Could not find any META-INF/persistence.xml file in the classpath
16:44:47.366 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 0 persistence units; checking each
16:44:47.366 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Found no matching persistence units
16:45:15.537 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
16:45:15.584 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
16:45:15.632 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
16:45:15.632 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pizza]
16:45:15.634 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
16:45:15.646 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY9/Documents/Pizzeria-console-object/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mariadb://localhost:3306/pizzadb
		hibernate.archive.autodetection: 
		hibernate.show_sql: true
		javax.persistence.schema-generation.database.action: drop-and-create
		javax.persistence.jdbc.user: root]
16:45:15.657 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
16:45:15.660 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
16:45:15.669 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
16:45:15.670 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
16:45:15.723 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
16:45:15.724 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
16:45:15.725 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
16:45:15.735 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
16:45:15.755 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
16:45:15.763 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
16:45:15.876 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
16:45:15.876 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
16:45:15.876 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37e547da
16:45:15.877 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15761df8
16:45:15.878 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@71c8becc
16:45:15.879 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@3bd40a57
16:45:15.880 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
16:45:15.881 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
16:45:15.881 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78047b92
16:45:15.882 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@4387b79e
16:45:15.883 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@4387b79e
16:45:15.883 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4387b79e
16:45:15.884 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
16:45:15.885 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
16:45:15.885 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@add0edd
16:45:15.886 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@1d76aeea
16:45:15.886 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@1d76aeea
16:45:15.886 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d76aeea
16:45:15.887 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
16:45:15.887 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
16:45:15.887 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@197d671
16:45:15.889 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
16:45:15.889 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
16:45:15.889 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7995092a
16:45:15.891 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
16:45:15.891 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
16:45:15.891 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23f7d05d
16:45:15.893 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f1302d6
16:45:15.894 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f1302d6
16:45:15.895 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@184cf7cf
16:45:15.895 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@184cf7cf
16:45:15.896 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@38c5cc4c
16:45:15.896 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@38c5cc4c
16:45:15.897 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ec756bd
16:45:15.898 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d121db3
16:45:15.899 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@12d4bf7e
16:45:15.900 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@12d4bf7e
16:45:15.901 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@2928854b
16:45:15.902 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@2928854b
16:45:15.903 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@124c278f
16:45:15.903 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@124c278f
16:45:15.904 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@229d10bd
16:45:15.904 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@229d10bd
16:45:15.904 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@229d10bd
16:45:15.906 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4ccb53
16:45:15.906 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@45b9a632
16:45:15.907 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@45b9a632
16:45:15.907 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@45b9a632
16:45:15.907 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b26e945
16:45:15.909 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@3c9d0b9d
16:45:15.909 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c9d0b9d
16:45:15.909 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@d4342c2
16:45:15.910 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d4342c2
16:45:15.910 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@12b0404f
16:45:15.910 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12b0404f
16:45:15.911 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@647fd8ce
16:45:15.911 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@647fd8ce
16:45:15.912 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1677d1
16:45:15.913 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1677d1
16:45:15.913 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e316c74
16:45:15.914 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@7f010382
16:45:15.914 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@7f010382
16:45:15.914 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@7f010382
16:45:15.915 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f0f1111
16:45:15.915 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f0f1111
16:45:15.915 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f0f1111
16:45:15.916 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@5ccddd20
16:45:15.917 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@59d016c9
16:45:15.917 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@59d016c9
16:45:15.917 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@59d016c9
16:45:15.918 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48aaecc3
16:45:15.918 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48aaecc3
16:45:15.918 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48aaecc3
16:45:15.919 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@5c909414
16:45:15.919 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@78e117e3
16:45:15.922 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@bef2d72
16:45:15.922 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bef2d72
16:45:15.922 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fe7aac8
16:45:15.924 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@63021689
16:45:15.925 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@63021689
16:45:15.927 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@a9cd3b1
16:45:15.927 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a9cd3b1
16:45:15.928 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9225652
16:45:15.928 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6580cfdd
16:45:15.929 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@48ae9b55
16:45:15.931 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@1817d444
16:45:15.931 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1817d444
16:45:15.931 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@31368b99
16:45:15.931 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1725dc0f
16:45:15.931 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3911c2a7
16:45:15.931 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4ac3c60d
16:45:15.932 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4facf68f
16:45:15.932 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76508ed1
16:45:15.932 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41e36e46
16:45:15.932 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15c43bd9
16:45:15.940 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
16:45:15.945 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mariadb://localhost:3306/pizzadb]
16:45:15.945 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=root}
16:45:15.945 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
16:45:15.947 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
16:45:15.947 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
16:45:15.992 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
16:45:15.993 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
16:45:15.993 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
16:45:16.003 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
16:45:16.018 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
16:45:16.035 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
16:45:16.056 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@5609159b
16:45:16.056 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5609159b
16:45:16.077 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@3943a2be
16:45:16.077 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3943a2be
16:45:16.078 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
16:45:16.078 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
16:45:16.079 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
16:45:16.079 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
16:45:16.081 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
16:45:16.081 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
16:45:16.082 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
16:45:16.082 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
16:45:16.083 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
16:45:16.084 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
16:45:16.088 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
16:45:16.089 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
16:45:16.157 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
16:45:16.157 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
16:45:16.158 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
16:45:16.158 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
16:45:16.159 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
16:45:16.160 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
16:45:16.161 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
16:45:16.162 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:45:16.164 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
16:45:16.165 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
16:45:16.166 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
16:45:16.166 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
16:45:16.167 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:45:16.168 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
16:45:16.194 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
16:45:16.234 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
16:45:16.234 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
16:45:16.235 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
16:45:16.235 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
16:45:16.235 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
16:45:16.235 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
16:45:16.235 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
16:45:16.235 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
16:45:16.235 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
16:45:16.235 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
16:45:16.235 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
16:45:16.235 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
16:45:16.235 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
16:45:16.235 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
16:45:16.236 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
16:45:16.236 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
16:45:16.236 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
16:45:16.236 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
16:45:16.236 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
16:45:16.236 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
16:45:16.236 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
16:45:16.236 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
16:45:16.236 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@5b247367
16:45:16.236 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
16:45:16.236 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
16:45:16.236 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
16:45:16.236 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
16:45:16.237 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
16:45:16.237 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
16:45:16.237 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
16:45:16.237 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
16:45:16.237 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
16:45:16.237 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
16:45:16.237 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
16:45:16.237 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
16:45:16.237 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
16:45:16.272 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
16:45:16.273 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_161\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@29f7cefd, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY9\Documents\Pizzeria-console-object, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_161\lib\endorsed, java.io.tmpdir=C:\Users\ETY9\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mariadb://localhost:3306/pizzadb, java.library.path=C:\Program Files\Java\jre1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_161/bin/server;C:/Program Files/Java/jre1.8.0_161/bin;C:/Program Files/Java/jre1.8.0_161/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Users\ETY9\AppData\Local\Microsoft\WindowsApps;C:\Users\ETY9\AppData\Local\atom\bin;C:\Program Files\Maven\apache-maven-3.5.3\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_161\bin;;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY9, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=ETY9, java.class.path=C:\Users\ETY9\Documents\Pizzeria-console-object\target\classes;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.junit_4.12.0.v201504281640\junit.jar;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.hamcrest.core_1.3.0.v201303031735.jar;C:\Users\ETY9\.m2\repository\commons-io\commons-io\2.6\commons-io-2.6.jar;C:\Users\ETY9\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY9\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\ETY9\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY9\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY9\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY9\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY9\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY9\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY9\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY9\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-java8\5.1.0.Final\hibernate-java8-5.1.0.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_161, hibernate.connection.url=jdbc:mariadb://localhost:3306/pizzadb, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jre1.8.0_161\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_161\lib\resources.jar;C:\Program Files\Java\jre1.8.0_161\lib\rt.jar;C:\Program Files\Java\jre1.8.0_161\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_161\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_161\lib\jce.jar;C:\Program Files\Java\jre1.8.0_161\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_161\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_161\classes, java.vendor=Oracle Corporation, javax.persistence.schema-generation.database.action=drop-and-create, hibernate.archive.autodetection=, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
16:45:16.282 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
16:45:16.285 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
16:45:16.302 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
16:45:16.318 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl -
				HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@589da3f3'
16:45:16.318 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
16:45:16.318 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
16:45:16.320 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
16:45:16.321 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
16:45:16.321 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
16:45:16.322 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4bf48f6
16:45:16.323 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: 94f5a75e-21af-4070-9a86-6fe970b668cd (<unnamed>)
16:45:16.323 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
16:45:16.347 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@68f4865
16:45:16.347 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pizza 
16:45:20.438 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
16:45:20.449 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@61544ae6
16:45:20.449 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
16:45:20.471 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: SELECT p FROM pizza p
16:45:20.476 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[IDENT] Node: 'pizza'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

16:45:20.476 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:45:20.500 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
16:45:45.990 [pool-1-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Connection pool now considered primed; min-size will be maintained
16:46:02.832 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
16:46:02.875 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
16:46:02.927 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
16:46:02.927 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pizza]
16:46:02.929 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
16:46:02.941 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY9/Documents/Pizzeria-console-object/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mariadb://localhost:3306/pizzadb
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
16:46:02.953 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
16:46:02.954 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
16:46:02.962 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
16:46:02.962 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
16:46:03.022 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
16:46:03.023 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
16:46:03.025 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
16:46:03.035 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
16:46:03.055 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
16:46:03.062 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
16:46:03.160 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
16:46:03.161 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
16:46:03.161 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37e547da
16:46:03.164 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15761df8
16:46:03.166 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@71c8becc
16:46:03.167 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@3bd40a57
16:46:03.168 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
16:46:03.169 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
16:46:03.169 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78047b92
16:46:03.170 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@4387b79e
16:46:03.170 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@4387b79e
16:46:03.170 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4387b79e
16:46:03.171 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
16:46:03.171 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
16:46:03.171 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@add0edd
16:46:03.173 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@1d76aeea
16:46:03.174 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@1d76aeea
16:46:03.174 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d76aeea
16:46:03.176 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
16:46:03.176 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
16:46:03.176 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@197d671
16:46:03.177 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
16:46:03.178 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
16:46:03.178 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7995092a
16:46:03.179 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
16:46:03.179 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
16:46:03.179 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23f7d05d
16:46:03.181 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f1302d6
16:46:03.182 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f1302d6
16:46:03.183 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@184cf7cf
16:46:03.183 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@184cf7cf
16:46:03.184 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@38c5cc4c
16:46:03.184 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@38c5cc4c
16:46:03.185 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ec756bd
16:46:03.186 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d121db3
16:46:03.187 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@12d4bf7e
16:46:03.187 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@12d4bf7e
16:46:03.189 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@2928854b
16:46:03.189 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@2928854b
16:46:03.191 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@124c278f
16:46:03.191 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@124c278f
16:46:03.193 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@229d10bd
16:46:03.193 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@229d10bd
16:46:03.193 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@229d10bd
16:46:03.194 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4ccb53
16:46:03.195 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@45b9a632
16:46:03.195 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@45b9a632
16:46:03.195 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@45b9a632
16:46:03.196 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b26e945
16:46:03.197 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@3c9d0b9d
16:46:03.197 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c9d0b9d
16:46:03.198 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@d4342c2
16:46:03.198 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d4342c2
16:46:03.198 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@12b0404f
16:46:03.198 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12b0404f
16:46:03.199 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@647fd8ce
16:46:03.199 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@647fd8ce
16:46:03.200 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1677d1
16:46:03.200 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1677d1
16:46:03.201 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e316c74
16:46:03.202 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@7f010382
16:46:03.202 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@7f010382
16:46:03.202 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@7f010382
16:46:03.203 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f0f1111
16:46:03.203 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f0f1111
16:46:03.203 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f0f1111
16:46:03.203 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@5ccddd20
16:46:03.204 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@59d016c9
16:46:03.204 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@59d016c9
16:46:03.204 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@59d016c9
16:46:03.205 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48aaecc3
16:46:03.205 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48aaecc3
16:46:03.206 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48aaecc3
16:46:03.206 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@5c909414
16:46:03.207 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@78e117e3
16:46:03.209 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@bef2d72
16:46:03.209 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bef2d72
16:46:03.210 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fe7aac8
16:46:03.212 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@63021689
16:46:03.212 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@63021689
16:46:03.215 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@a9cd3b1
16:46:03.215 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a9cd3b1
16:46:03.215 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9225652
16:46:03.215 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6580cfdd
16:46:03.216 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@48ae9b55
16:46:03.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@1817d444
16:46:03.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1817d444
16:46:03.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@31368b99
16:46:03.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1725dc0f
16:46:03.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3911c2a7
16:46:03.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4ac3c60d
16:46:03.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4facf68f
16:46:03.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76508ed1
16:46:03.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41e36e46
16:46:03.219 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15c43bd9
16:46:03.226 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
16:46:03.231 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mariadb://localhost:3306/pizzadb]
16:46:03.232 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=root}
16:46:03.232 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
16:46:03.234 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
16:46:03.234 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
16:46:03.276 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
16:46:03.276 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
16:46:03.276 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
16:46:03.285 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
16:46:03.297 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
16:46:03.312 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
16:46:03.329 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@5609159b
16:46:03.329 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5609159b
16:46:03.347 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@3943a2be
16:46:03.348 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3943a2be
16:46:03.349 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
16:46:03.349 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
16:46:03.350 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
16:46:03.350 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
16:46:03.351 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
16:46:03.351 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
16:46:03.352 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
16:46:03.352 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
16:46:03.352 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
16:46:03.353 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
16:46:03.355 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
16:46:03.355 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
16:46:03.412 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
16:46:03.412 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
16:46:03.413 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
16:46:03.413 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
16:46:03.413 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
16:46:03.415 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
16:46:03.415 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
16:46:03.416 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:46:03.417 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
16:46:03.417 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
16:46:03.418 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
16:46:03.418 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
16:46:03.418 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:46:03.419 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
16:46:03.449 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
16:46:03.459 [main] DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl -
				Encountered a non-categorized annotated class [fr.pizzeria.model.CategoriePizza]; ignoring
16:46:03.484 [main] DEBUG org.hibernate.cfg.AnnotationBinder -
				Binding entity from annotated class: fr.pizzeria.model.Pizza
16:46:03.502 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
16:46:03.506 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Import with entity name Pizza
16:46:03.509 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Bind entity fr.pizzeria.model.Pizza on table pizza
16:46:03.536 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=id, insertable=true, updatable=true, unique=false}
16:46:03.538 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property id with lazy=false
16:46:03.540 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:id]
16:46:03.541 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for id
16:46:03.543 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property id
16:46:03.547 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
16:46:03.553 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
16:46:03.554 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property categorie with lazy=false
16:46:03.554 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza.categoriePizza:categorie]
16:46:03.554 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for categorie
16:46:03.554 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categorie
16:46:03.554 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categoriePizza
16:46:03.555 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=code, insertable=true, updatable=true, unique=false}
16:46:03.555 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property code with lazy=false
16:46:03.555 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:code]
16:46:03.555 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for code
16:46:03.555 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property code
16:46:03.555 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=libelle, insertable=true, updatable=true, unique=false}
16:46:03.555 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property libelle with lazy=false
16:46:03.555 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:libelle]
16:46:03.555 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for libelle
16:46:03.555 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property libelle
16:46:03.556 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=prix, insertable=true, updatable=true, unique=false}
16:46:03.556 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property prix with lazy=false
16:46:03.556 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:prix]
16:46:03.556 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for prix
16:46:03.556 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property prix
16:46:03.557 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for id
16:46:03.557 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for categorie
16:46:03.557 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for code
16:46:03.557 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for libelle
16:46:03.558 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for prix
16:46:03.559 [main] DEBUG org.hibernate.mapping.PrimaryKey -
				Forcing column [id] to be non-null as it is part of the primary key for table [pizza]
16:46:03.587 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:46:03.595 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
16:46:03.597 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
16:46:03.597 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
16:46:03.597 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
16:46:03.597 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
16:46:03.597 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
16:46:03.597 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
16:46:03.597 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
16:46:03.597 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1ef6d34c
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
16:46:03.598 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
16:46:03.599 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
16:46:03.599 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
16:46:03.599 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
16:46:03.599 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
16:46:03.599 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
16:46:03.599 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
16:46:03.599 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
16:46:03.599 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
16:46:03.641 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
16:46:03.641 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_161\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e48362c, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY9\Documents\Pizzeria-console-object, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_161\lib\endorsed, java.io.tmpdir=C:\Users\ETY9\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mariadb://localhost:3306/pizzadb, java.library.path=C:\Program Files\Java\jre1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_161/bin/server;C:/Program Files/Java/jre1.8.0_161/bin;C:/Program Files/Java/jre1.8.0_161/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Users\ETY9\AppData\Local\Microsoft\WindowsApps;C:\Users\ETY9\AppData\Local\atom\bin;C:\Program Files\Maven\apache-maven-3.5.3\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_161\bin;;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY9, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=ETY9, java.class.path=C:\Users\ETY9\Documents\Pizzeria-console-object\target\classes;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.junit_4.12.0.v201504281640\junit.jar;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.hamcrest.core_1.3.0.v201303031735.jar;C:\Users\ETY9\.m2\repository\commons-io\commons-io\2.6\commons-io-2.6.jar;C:\Users\ETY9\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY9\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\ETY9\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY9\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY9\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY9\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY9\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY9\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY9\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY9\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-java8\5.1.0.Final\hibernate-java8-5.1.0.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_161, hibernate.connection.url=jdbc:mariadb://localhost:3306/pizzadb, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jre1.8.0_161\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_161\lib\resources.jar;C:\Program Files\Java\jre1.8.0_161\lib\rt.jar;C:\Program Files\Java\jre1.8.0_161\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_161\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_161\lib\jce.jar;C:\Program Files\Java\jre1.8.0_161\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_161\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_161\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
16:46:03.655 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
16:46:03.655 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
16:46:03.697 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
16:46:03.698 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
16:46:03.703 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:46:03.705 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:46:03.706 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
16:46:03.706 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
16:46:03.730 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:46:03.730 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:46:03.749 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				Static SQL for entity: fr.pizzeria.model.Pizza
16:46:03.749 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Version select: select id from pizza where id =?
16:46:03.749 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Snapshot select: select pizza_.id, pizza_.categorie as categori2_0_, pizza_.code as code3_0_, pizza_.libelle as libelle4_0_, pizza_.prix as prix5_0_ from pizza pizza_ where pizza_.id=?
16:46:03.750 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Insert 0: insert into pizza (categorie, code, libelle, prix, id) values (?, ?, ?, ?, ?)
16:46:03.750 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Update 0: update pizza set categorie=?, code=?, libelle=?, prix=? where id=?
16:46:03.750 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Delete 0: delete from pizza where id=?
16:46:03.750 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Identity insert: insert into pizza (categorie, code, libelle, prix) values (?, ?, ?, ?)
16:46:03.772 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fe1ce85]
16:46:03.773 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:03.775 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@23aa363a]
16:46:03.778 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:03.778 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:03.778 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:03.778 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:03.778 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:03.794 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:03.798 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:03.801 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [NONE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:46:03.801 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c62d71]
16:46:03.801 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:03.802 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@47f4e407]
16:46:03.802 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:03.802 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:03.802 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:03.802 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:03.802 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:03.802 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:03.803 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:03.803 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:46:03.803 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48d5f34e]
16:46:03.804 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:03.804 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6ff65192]
16:46:03.804 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:03.804 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:03.804 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:03.804 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:03.804 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:03.805 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:03.805 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:03.805 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:46:03.805 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af0df05]
16:46:03.805 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:03.805 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@acdb094]
16:46:03.806 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:03.806 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:03.806 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:03.806 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:03.806 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:03.806 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:03.806 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:03.806 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_NOWAIT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:46:03.807 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b0f373b]
16:46:03.807 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:03.807 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4b45dcb8]
16:46:03.807 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:03.807 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:03.807 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:03.807 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:03.807 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:03.807 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:03.807 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:03.808 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_SKIPLOCKED]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:46:03.808 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2072acb2]
16:46:03.808 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:03.808 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@35a9782c]
16:46:03.808 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:03.808 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:03.808 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:03.808 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:03.808 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:03.808 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:03.808 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:03.809 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [FORCE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:46:03.809 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45815ffc]
16:46:03.809 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:03.809 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@d3957fe]
16:46:03.809 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:03.809 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:03.809 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:03.809 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:03.809 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:03.809 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:03.810 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:03.810 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? lock in share mode
16:46:03.810 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@299321e2]
16:46:03.810 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:03.810 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@64ba3208]
16:46:03.810 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:03.810 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:03.810 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:03.810 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:03.810 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:03.810 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:03.811 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:03.811 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_WRITE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:46:03.811 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a6944c]
16:46:03.811 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:03.811 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6b00f608]
16:46:03.811 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:03.811 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:03.811 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:03.811 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:03.811 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:03.811 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:03.812 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:03.812 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:46:03.812 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e821657]
16:46:03.812 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:03.812 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@71cf1b07]
16:46:03.812 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:03.812 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:03.812 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:03.812 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:03.812 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:03.813 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:03.814 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:03.814 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:46:03.814 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fce136b]
16:46:03.814 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:03.814 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@43b6123e]
16:46:03.814 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:03.814 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:03.814 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:03.814 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:03.815 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:03.815 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:03.815 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:03.815 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:46:03.827 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_MERGE on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:46:03.827 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_REFRESH on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:46:03.827 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
16:46:03.830 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator -
				No actions specified; doing nothing
16:46:03.830 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
16:46:03.830 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
16:46:03.832 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
16:46:03.833 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
16:46:03.833 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
16:46:03.834 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c055c54
16:46:03.836 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: 62fe1fe4-e072-4354-b9c8-f876e7d9ac27 (<unnamed>)
16:46:03.836 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
16:46:03.889 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:46:03.889 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:46:03.889 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:46:03.899 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@476b0ae6
16:46:03.899 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pizza 
16:46:05.737 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
16:46:05.744 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@650eab8
16:46:05.744 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
16:46:05.776 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: SELECT p FROM pizza p
16:46:05.782 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[IDENT] Node: 'pizza'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

16:46:05.782 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:46:05.809 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
16:46:33.275 [pool-1-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Connection pool now considered primed; min-size will be maintained
16:46:42.212 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
16:46:42.257 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
16:46:42.309 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
16:46:42.309 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pizza]
16:46:42.310 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
16:46:42.324 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY9/Documents/Pizzeria-console-object/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mariadb://localhost:3306/pizzadb
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
16:46:42.337 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
16:46:42.338 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
16:46:42.346 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
16:46:42.347 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
16:46:42.407 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
16:46:42.408 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
16:46:42.409 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
16:46:42.419 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
16:46:42.439 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
16:46:42.447 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
16:46:42.550 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
16:46:42.550 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
16:46:42.550 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37e547da
16:46:42.552 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15761df8
16:46:42.553 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@71c8becc
16:46:42.553 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@3bd40a57
16:46:42.554 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
16:46:42.555 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
16:46:42.555 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78047b92
16:46:42.556 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@4387b79e
16:46:42.556 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@4387b79e
16:46:42.556 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4387b79e
16:46:42.558 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
16:46:42.558 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
16:46:42.558 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@add0edd
16:46:42.559 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@1d76aeea
16:46:42.559 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@1d76aeea
16:46:42.559 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d76aeea
16:46:42.561 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
16:46:42.561 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
16:46:42.561 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@197d671
16:46:42.563 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
16:46:42.563 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
16:46:42.563 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7995092a
16:46:42.564 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
16:46:42.565 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
16:46:42.565 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23f7d05d
16:46:42.567 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f1302d6
16:46:42.568 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f1302d6
16:46:42.570 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@184cf7cf
16:46:42.570 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@184cf7cf
16:46:42.571 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@38c5cc4c
16:46:42.571 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@38c5cc4c
16:46:42.572 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ec756bd
16:46:42.573 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d121db3
16:46:42.574 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@12d4bf7e
16:46:42.574 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@12d4bf7e
16:46:42.576 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@2928854b
16:46:42.577 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@2928854b
16:46:42.578 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@124c278f
16:46:42.578 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@124c278f
16:46:42.579 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@229d10bd
16:46:42.579 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@229d10bd
16:46:42.579 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@229d10bd
16:46:42.580 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4ccb53
16:46:42.582 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@45b9a632
16:46:42.582 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@45b9a632
16:46:42.582 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@45b9a632
16:46:42.583 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b26e945
16:46:42.583 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@3c9d0b9d
16:46:42.583 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c9d0b9d
16:46:42.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@d4342c2
16:46:42.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d4342c2
16:46:42.585 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@12b0404f
16:46:42.585 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12b0404f
16:46:42.586 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@647fd8ce
16:46:42.586 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@647fd8ce
16:46:42.587 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1677d1
16:46:42.587 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1677d1
16:46:42.588 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e316c74
16:46:42.589 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@7f010382
16:46:42.589 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@7f010382
16:46:42.589 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@7f010382
16:46:42.590 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f0f1111
16:46:42.590 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f0f1111
16:46:42.590 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f0f1111
16:46:42.591 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@5ccddd20
16:46:42.591 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@59d016c9
16:46:42.591 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@59d016c9
16:46:42.592 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@59d016c9
16:46:42.592 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48aaecc3
16:46:42.592 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48aaecc3
16:46:42.593 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48aaecc3
16:46:42.593 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@5c909414
16:46:42.594 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@78e117e3
16:46:42.597 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@bef2d72
16:46:42.597 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bef2d72
16:46:42.597 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fe7aac8
16:46:42.600 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@63021689
16:46:42.600 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@63021689
16:46:42.602 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@a9cd3b1
16:46:42.602 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a9cd3b1
16:46:42.603 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9225652
16:46:42.603 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6580cfdd
16:46:42.604 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@48ae9b55
16:46:42.606 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@1817d444
16:46:42.606 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1817d444
16:46:42.606 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@31368b99
16:46:42.606 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1725dc0f
16:46:42.606 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3911c2a7
16:46:42.607 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4ac3c60d
16:46:42.607 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4facf68f
16:46:42.607 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76508ed1
16:46:42.607 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41e36e46
16:46:42.607 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15c43bd9
16:46:42.614 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
16:46:42.619 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mariadb://localhost:3306/pizzadb]
16:46:42.619 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=root}
16:46:42.620 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
16:46:42.622 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
16:46:42.622 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
16:46:42.660 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
16:46:42.660 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
16:46:42.660 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
16:46:42.671 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
16:46:42.683 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
16:46:42.700 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
16:46:42.716 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@5609159b
16:46:42.716 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5609159b
16:46:42.733 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@3943a2be
16:46:42.733 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3943a2be
16:46:42.734 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
16:46:42.734 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
16:46:42.734 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
16:46:42.734 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
16:46:42.736 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
16:46:42.736 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
16:46:42.737 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
16:46:42.737 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
16:46:42.737 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
16:46:42.738 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
16:46:42.741 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
16:46:42.741 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
16:46:42.798 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
16:46:42.799 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
16:46:42.799 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
16:46:42.800 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
16:46:42.800 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
16:46:42.801 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
16:46:42.802 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
16:46:42.802 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:46:42.804 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
16:46:42.804 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
16:46:42.805 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
16:46:42.805 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
16:46:42.805 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:46:42.806 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
16:46:42.836 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
16:46:42.848 [main] DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl -
				Encountered a non-categorized annotated class [fr.pizzeria.model.CategoriePizza]; ignoring
16:46:42.876 [main] DEBUG org.hibernate.cfg.AnnotationBinder -
				Binding entity from annotated class: fr.pizzeria.model.Pizza
16:46:42.893 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
16:46:42.897 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Import with entity name Pizza
16:46:42.900 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Bind entity fr.pizzeria.model.Pizza on table pizza
16:46:42.926 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=id, insertable=true, updatable=true, unique=false}
16:46:42.929 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property id with lazy=false
16:46:42.931 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:id]
16:46:42.932 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for id
16:46:42.934 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property id
16:46:42.938 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
16:46:42.943 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
16:46:42.943 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property categorie with lazy=false
16:46:42.943 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza.categoriePizza:categorie]
16:46:42.944 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for categorie
16:46:42.944 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categorie
16:46:42.944 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categoriePizza
16:46:42.945 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=code, insertable=true, updatable=true, unique=false}
16:46:42.945 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property code with lazy=false
16:46:42.945 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:code]
16:46:42.946 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for code
16:46:42.946 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property code
16:46:42.946 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=libelle, insertable=true, updatable=true, unique=false}
16:46:42.946 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property libelle with lazy=false
16:46:42.946 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:libelle]
16:46:42.946 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for libelle
16:46:42.946 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property libelle
16:46:42.947 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=prix, insertable=true, updatable=true, unique=false}
16:46:42.947 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property prix with lazy=false
16:46:42.947 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:prix]
16:46:42.947 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for prix
16:46:42.947 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property prix
16:46:42.948 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for id
16:46:42.949 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for categorie
16:46:42.949 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for code
16:46:42.949 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for libelle
16:46:42.949 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for prix
16:46:42.950 [main] DEBUG org.hibernate.mapping.PrimaryKey -
				Forcing column [id] to be non-null as it is part of the primary key for table [pizza]
16:46:42.980 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:46:42.987 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
16:46:42.988 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
16:46:42.988 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
16:46:42.988 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
16:46:42.988 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
16:46:42.988 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
16:46:42.988 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
16:46:42.988 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
16:46:42.988 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
16:46:42.988 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
16:46:42.988 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1ef6d34c
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
16:46:42.989 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
16:46:42.990 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
16:46:42.990 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
16:46:43.031 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
16:46:43.032 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_161\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e48362c, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY9\Documents\Pizzeria-console-object, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_161\lib\endorsed, java.io.tmpdir=C:\Users\ETY9\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mariadb://localhost:3306/pizzadb, java.library.path=C:\Program Files\Java\jre1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_161/bin/server;C:/Program Files/Java/jre1.8.0_161/bin;C:/Program Files/Java/jre1.8.0_161/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Users\ETY9\AppData\Local\Microsoft\WindowsApps;C:\Users\ETY9\AppData\Local\atom\bin;C:\Program Files\Maven\apache-maven-3.5.3\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_161\bin;;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY9, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=ETY9, java.class.path=C:\Users\ETY9\Documents\Pizzeria-console-object\target\classes;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.junit_4.12.0.v201504281640\junit.jar;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.hamcrest.core_1.3.0.v201303031735.jar;C:\Users\ETY9\.m2\repository\commons-io\commons-io\2.6\commons-io-2.6.jar;C:\Users\ETY9\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY9\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\ETY9\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY9\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY9\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY9\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY9\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY9\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY9\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY9\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-java8\5.1.0.Final\hibernate-java8-5.1.0.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_161, hibernate.connection.url=jdbc:mariadb://localhost:3306/pizzadb, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jre1.8.0_161\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_161\lib\resources.jar;C:\Program Files\Java\jre1.8.0_161\lib\rt.jar;C:\Program Files\Java\jre1.8.0_161\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_161\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_161\lib\jce.jar;C:\Program Files\Java\jre1.8.0_161\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_161\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_161\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
16:46:43.041 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
16:46:43.041 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
16:46:43.078 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
16:46:43.078 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
16:46:43.083 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:46:43.087 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:46:43.088 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
16:46:43.088 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
16:46:43.112 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:46:43.112 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:46:43.126 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				Static SQL for entity: fr.pizzeria.model.Pizza
16:46:43.126 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Version select: select id from pizza where id =?
16:46:43.126 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Snapshot select: select pizza_.id, pizza_.categorie as categori2_0_, pizza_.code as code3_0_, pizza_.libelle as libelle4_0_, pizza_.prix as prix5_0_ from pizza pizza_ where pizza_.id=?
16:46:43.126 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Insert 0: insert into pizza (categorie, code, libelle, prix, id) values (?, ?, ?, ?, ?)
16:46:43.127 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Update 0: update pizza set categorie=?, code=?, libelle=?, prix=? where id=?
16:46:43.127 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Delete 0: delete from pizza where id=?
16:46:43.127 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Identity insert: insert into pizza (categorie, code, libelle, prix) values (?, ?, ?, ?)
16:46:43.147 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fe1ce85]
16:46:43.148 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:43.149 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@23aa363a]
16:46:43.152 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:43.154 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:43.154 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:43.154 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:43.154 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:43.167 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:43.171 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:43.173 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [NONE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:46:43.174 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c62d71]
16:46:43.174 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:43.174 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@47f4e407]
16:46:43.174 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:43.174 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:43.174 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:43.174 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:43.174 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:43.174 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:43.174 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:43.174 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:46:43.175 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48d5f34e]
16:46:43.175 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:43.175 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6ff65192]
16:46:43.175 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:43.175 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:43.175 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:43.175 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:43.175 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:43.175 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:43.175 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:43.176 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:46:43.176 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af0df05]
16:46:43.176 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:43.176 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@acdb094]
16:46:43.176 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:43.176 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:43.176 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:43.176 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:43.176 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:43.177 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:43.177 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:43.177 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_NOWAIT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:46:43.177 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b0f373b]
16:46:43.177 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:43.178 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4b45dcb8]
16:46:43.178 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:43.178 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:43.178 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:43.178 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:43.178 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:43.178 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:43.179 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:43.179 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_SKIPLOCKED]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:46:43.179 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2072acb2]
16:46:43.179 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:43.180 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@35a9782c]
16:46:43.180 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:43.180 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:43.180 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:43.180 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:43.180 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:43.180 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:43.181 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:43.181 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [FORCE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:46:43.181 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45815ffc]
16:46:43.182 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:43.182 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@d3957fe]
16:46:43.182 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:43.182 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:43.182 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:43.185 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:43.185 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:43.185 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:43.189 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:43.189 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? lock in share mode
16:46:43.190 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@299321e2]
16:46:43.190 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:43.190 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@64ba3208]
16:46:43.190 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:43.190 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:43.190 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:43.190 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:43.191 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:43.191 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:43.191 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:43.192 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_WRITE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:46:43.192 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a6944c]
16:46:43.192 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:43.192 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6b00f608]
16:46:43.192 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:43.192 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:43.192 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:43.192 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:43.193 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:43.193 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:43.193 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:43.193 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:46:43.193 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e821657]
16:46:43.194 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:43.194 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@71cf1b07]
16:46:43.194 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:43.194 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:43.194 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:43.194 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:43.194 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:43.194 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:43.195 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:43.195 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:46:43.196 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fce136b]
16:46:43.196 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:46:43.196 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@43b6123e]
16:46:43.196 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:46:43.196 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:46:43.196 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:46:43.196 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:46:43.196 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:46:43.196 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:46:43.197 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:46:43.197 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:46:43.210 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_MERGE on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:46:43.210 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_REFRESH on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:46:43.210 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
16:46:43.213 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator -
				No actions specified; doing nothing
16:46:43.214 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
16:46:43.214 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
16:46:43.215 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
16:46:43.216 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
16:46:43.217 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
16:46:43.218 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c055c54
16:46:43.220 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: 32b6d3e6-b125-4410-8b5f-7de436dab1ea (<unnamed>)
16:46:43.220 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
16:46:43.279 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:46:43.279 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:46:43.279 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:46:43.287 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@476b0ae6
16:46:43.287 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pizza 
16:46:45.799 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
16:46:45.808 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@650eab8
16:46:45.808 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
16:46:45.834 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: SELECT p FROM fr.pizzeria.model.Pizza p
16:46:45.842 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'fr'
       |     |  |  |  \-[IDENT] Node: 'pizzeria'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Pizza'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

16:46:45.842 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:46:45.869 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
16:46:45.886 [main] DEBUG o.h.h.internal.ast.tree.FromElement -
				FromClause{level=1} : fr.pizzeria.model.Pizza (p) -> pizza0_
16:46:45.888 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode -
				Resolved : p -> pizza0_.id
16:46:45.890 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select : finishing up [level=1, statement=select]
16:46:45.890 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				processQuery() :  ( SELECT ( {select clause} pizza0_.id ) ( FromClause{level=1} pizza pizza0_ ) )
16:46:45.898 [main] DEBUG o.h.h.i.ast.util.JoinProcessor -
				Using FROM fragment [pizza pizza0_]
16:46:45.898 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select >> end [level=1, statement=select]
16:46:45.898 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (pizza)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'pizza0_.id as id1_0_' {alias=p, className=fr.pizzeria.model.Pizza, tableAlias=pizza0_}
    |  \-[SQL_TOKEN] SqlFragment: 'pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[pizza0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'pizza pizza0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=pizza,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}

16:46:45.899 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:46:45.907 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				HQL: SELECT p FROM fr.pizzeria.model.Pizza p
16:46:45.908 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				SQL: select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
16:46:45.908 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:46:45.923 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
16:46:46.029 [main] DEBUG o.h.e.jdbc.spi.SqlExceptionHelper -
				could not extract ResultSet [n/a]
java.sql.SQLSyntaxErrorException: Unknown column 'pizza0_.libelle' in 'field list'
	at org.mariadb.jdbc.internal.SQLExceptionMapper.get(SQLExceptionMapper.java:138)
	at org.mariadb.jdbc.internal.SQLExceptionMapper.throwException(SQLExceptionMapper.java:106)
	at org.mariadb.jdbc.MySQLStatement.executeQueryEpilog(MySQLStatement.java:264)
	at org.mariadb.jdbc.MySQLStatement.execute(MySQLStatement.java:288)
	at org.mariadb.jdbc.MySQLStatement.executeQuery(MySQLStatement.java:302)
	at org.mariadb.jdbc.MySQLPreparedStatement.executeQuery(MySQLPreparedStatement.java:112)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:70)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2115)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1898)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1874)
	at org.hibernate.loader.Loader.doQuery(Loader.java:919)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:336)
	at org.hibernate.loader.Loader.doList(Loader.java:2610)
	at org.hibernate.loader.Loader.doList(Loader.java:2593)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2422)
	at org.hibernate.loader.Loader.list(Loader.java:2417)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:501)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:371)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1339)
	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:87)
	at org.hibernate.jpa.internal.QueryImpl.list(QueryImpl.java:606)
	at org.hibernate.jpa.internal.QueryImpl.getResultList(QueryImpl.java:483)
	at fr.pizzeria.dao.PizzaJpaBase.findAllPizzas(PizzaJpaBase.java:21)
	at fr.pizzeria.console.PizzeriaAdminConsoleApp.main(PizzeriaAdminConsoleApp.java:41)
Caused by: org.mariadb.jdbc.internal.common.QueryException: Unknown column 'pizza0_.libelle' in 'field list'
	at org.mariadb.jdbc.internal.mysql.MySQLProtocol.getResult(MySQLProtocol.java:942)
	at org.mariadb.jdbc.internal.mysql.MySQLProtocol.executeQuery(MySQLProtocol.java:991)
	at org.mariadb.jdbc.MySQLStatement.execute(MySQLStatement.java:281)
	... 21 common frames omitted
16:46:46.029 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper -
				SQL Error: 1054, SQLState: 42S22
16:46:46.029 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper -
				Unknown column 'pizza0_.libelle' in 'field list'
16:46:46.030 [main] DEBUG o.h.j.spi.AbstractEntityManagerImpl -
				Mark transaction for rollback
16:47:39.661 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
16:47:39.706 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
16:47:39.757 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
16:47:39.757 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pizza]
16:47:39.760 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
16:47:39.772 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY9/Documents/Pizzeria-console-object/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mariadb://localhost:3306/pizzadb
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
16:47:39.783 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
16:47:39.785 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
16:47:39.794 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
16:47:39.794 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
16:47:39.850 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
16:47:39.852 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
16:47:39.853 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
16:47:39.864 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
16:47:39.887 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
16:47:39.896 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
16:47:40.006 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
16:47:40.007 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
16:47:40.007 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37e547da
16:47:40.008 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15761df8
16:47:40.010 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@71c8becc
16:47:40.011 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@3bd40a57
16:47:40.012 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
16:47:40.012 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
16:47:40.012 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78047b92
16:47:40.013 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@4387b79e
16:47:40.013 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@4387b79e
16:47:40.013 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4387b79e
16:47:40.015 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
16:47:40.015 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
16:47:40.015 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@add0edd
16:47:40.016 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@1d76aeea
16:47:40.016 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@1d76aeea
16:47:40.016 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d76aeea
16:47:40.018 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
16:47:40.018 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
16:47:40.018 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@197d671
16:47:40.020 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
16:47:40.020 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
16:47:40.020 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7995092a
16:47:40.022 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
16:47:40.022 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
16:47:40.022 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23f7d05d
16:47:40.024 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f1302d6
16:47:40.024 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f1302d6
16:47:40.026 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@184cf7cf
16:47:40.026 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@184cf7cf
16:47:40.027 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@38c5cc4c
16:47:40.028 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@38c5cc4c
16:47:40.029 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ec756bd
16:47:40.029 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d121db3
16:47:40.030 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@12d4bf7e
16:47:40.031 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@12d4bf7e
16:47:40.032 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@2928854b
16:47:40.032 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@2928854b
16:47:40.034 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@124c278f
16:47:40.034 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@124c278f
16:47:40.035 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@229d10bd
16:47:40.035 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@229d10bd
16:47:40.035 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@229d10bd
16:47:40.036 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4ccb53
16:47:40.037 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@45b9a632
16:47:40.037 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@45b9a632
16:47:40.038 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@45b9a632
16:47:40.038 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b26e945
16:47:40.039 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@3c9d0b9d
16:47:40.039 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c9d0b9d
16:47:40.040 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@d4342c2
16:47:40.040 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d4342c2
16:47:40.040 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@12b0404f
16:47:40.041 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12b0404f
16:47:40.041 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@647fd8ce
16:47:40.042 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@647fd8ce
16:47:40.044 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1677d1
16:47:40.044 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1677d1
16:47:40.044 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e316c74
16:47:40.045 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@7f010382
16:47:40.045 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@7f010382
16:47:40.045 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@7f010382
16:47:40.046 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f0f1111
16:47:40.046 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f0f1111
16:47:40.046 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f0f1111
16:47:40.047 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@5ccddd20
16:47:40.048 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@59d016c9
16:47:40.048 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@59d016c9
16:47:40.048 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@59d016c9
16:47:40.049 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48aaecc3
16:47:40.049 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48aaecc3
16:47:40.049 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48aaecc3
16:47:40.049 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@5c909414
16:47:40.050 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@78e117e3
16:47:40.053 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@bef2d72
16:47:40.053 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bef2d72
16:47:40.053 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fe7aac8
16:47:40.055 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@63021689
16:47:40.055 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@63021689
16:47:40.057 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@a9cd3b1
16:47:40.058 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a9cd3b1
16:47:40.058 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9225652
16:47:40.058 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6580cfdd
16:47:40.059 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@48ae9b55
16:47:40.062 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@1817d444
16:47:40.062 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1817d444
16:47:40.062 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@31368b99
16:47:40.062 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1725dc0f
16:47:40.062 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3911c2a7
16:47:40.062 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4ac3c60d
16:47:40.063 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4facf68f
16:47:40.063 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76508ed1
16:47:40.063 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41e36e46
16:47:40.063 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15c43bd9
16:47:40.070 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
16:47:40.076 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mariadb://localhost:3306/pizzadb]
16:47:40.076 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=root}
16:47:40.076 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
16:47:40.078 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
16:47:40.078 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
16:47:40.115 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
16:47:40.116 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
16:47:40.116 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
16:47:40.124 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
16:47:40.136 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
16:47:40.150 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
16:47:40.169 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@5609159b
16:47:40.169 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5609159b
16:47:40.188 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@3943a2be
16:47:40.188 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3943a2be
16:47:40.189 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
16:47:40.189 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
16:47:40.189 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
16:47:40.190 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
16:47:40.191 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
16:47:40.192 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
16:47:40.193 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
16:47:40.193 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
16:47:40.193 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
16:47:40.194 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
16:47:40.197 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
16:47:40.197 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
16:47:40.254 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
16:47:40.255 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
16:47:40.256 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
16:47:40.256 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
16:47:40.257 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
16:47:40.258 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
16:47:40.259 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
16:47:40.260 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:47:40.261 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
16:47:40.261 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
16:47:40.262 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
16:47:40.262 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
16:47:40.262 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:47:40.263 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
16:47:40.295 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
16:47:40.306 [main] DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl -
				Encountered a non-categorized annotated class [fr.pizzeria.model.CategoriePizza]; ignoring
16:47:40.331 [main] DEBUG org.hibernate.cfg.AnnotationBinder -
				Binding entity from annotated class: fr.pizzeria.model.Pizza
16:47:40.347 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
16:47:40.353 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Import with entity name Pizza
16:47:40.356 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Bind entity fr.pizzeria.model.Pizza on table pizza
16:47:40.384 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=id, insertable=true, updatable=true, unique=false}
16:47:40.387 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property id with lazy=false
16:47:40.389 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:id]
16:47:40.390 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for id
16:47:40.392 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property id
16:47:40.396 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
16:47:40.400 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
16:47:40.401 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property categorie with lazy=false
16:47:40.401 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza.categoriePizza:categorie]
16:47:40.401 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for categorie
16:47:40.401 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categorie
16:47:40.401 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categoriePizza
16:47:40.402 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=code, insertable=true, updatable=true, unique=false}
16:47:40.402 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property code with lazy=false
16:47:40.402 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:code]
16:47:40.402 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for code
16:47:40.402 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property code
16:47:40.403 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=libelle, insertable=true, updatable=true, unique=false}
16:47:40.403 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property libelle with lazy=false
16:47:40.403 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:libelle]
16:47:40.403 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for libelle
16:47:40.403 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property libelle
16:47:40.403 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=prix, insertable=true, updatable=true, unique=false}
16:47:40.404 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property prix with lazy=false
16:47:40.404 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:prix]
16:47:40.404 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for prix
16:47:40.404 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property prix
16:47:40.405 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for id
16:47:40.405 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for categorie
16:47:40.405 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for code
16:47:40.405 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for libelle
16:47:40.405 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for prix
16:47:40.406 [main] DEBUG org.hibernate.mapping.PrimaryKey -
				Forcing column [id] to be non-null as it is part of the primary key for table [pizza]
16:47:40.436 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:47:40.445 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
16:47:40.446 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
16:47:40.446 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
16:47:40.446 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
16:47:40.446 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
16:47:40.446 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
16:47:40.446 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
16:47:40.446 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
16:47:40.446 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
16:47:40.446 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1ef6d34c
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
16:47:40.447 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
16:47:40.448 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
16:47:40.448 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
16:47:40.494 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
16:47:40.495 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_161\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e48362c, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY9\Documents\Pizzeria-console-object, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_161\lib\endorsed, java.io.tmpdir=C:\Users\ETY9\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mariadb://localhost:3306/pizzadb, java.library.path=C:\Program Files\Java\jre1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_161/bin/server;C:/Program Files/Java/jre1.8.0_161/bin;C:/Program Files/Java/jre1.8.0_161/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Users\ETY9\AppData\Local\Microsoft\WindowsApps;C:\Users\ETY9\AppData\Local\atom\bin;C:\Program Files\Maven\apache-maven-3.5.3\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_161\bin;;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY9, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=ETY9, java.class.path=C:\Users\ETY9\Documents\Pizzeria-console-object\target\classes;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.junit_4.12.0.v201504281640\junit.jar;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.hamcrest.core_1.3.0.v201303031735.jar;C:\Users\ETY9\.m2\repository\commons-io\commons-io\2.6\commons-io-2.6.jar;C:\Users\ETY9\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY9\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\ETY9\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY9\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY9\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY9\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY9\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY9\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY9\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY9\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-java8\5.1.0.Final\hibernate-java8-5.1.0.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_161, hibernate.connection.url=jdbc:mariadb://localhost:3306/pizzadb, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jre1.8.0_161\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_161\lib\resources.jar;C:\Program Files\Java\jre1.8.0_161\lib\rt.jar;C:\Program Files\Java\jre1.8.0_161\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_161\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_161\lib\jce.jar;C:\Program Files\Java\jre1.8.0_161\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_161\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_161\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
16:47:40.507 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
16:47:40.508 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
16:47:40.544 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
16:47:40.545 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
16:47:40.549 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:47:40.551 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:47:40.553 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
16:47:40.553 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
16:47:40.578 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:47:40.579 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:47:40.593 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				Static SQL for entity: fr.pizzeria.model.Pizza
16:47:40.593 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Version select: select id from pizza where id =?
16:47:40.593 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Snapshot select: select pizza_.id, pizza_.categorie as categori2_0_, pizza_.code as code3_0_, pizza_.libelle as libelle4_0_, pizza_.prix as prix5_0_ from pizza pizza_ where pizza_.id=?
16:47:40.593 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Insert 0: insert into pizza (categorie, code, libelle, prix, id) values (?, ?, ?, ?, ?)
16:47:40.594 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Update 0: update pizza set categorie=?, code=?, libelle=?, prix=? where id=?
16:47:40.594 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Delete 0: delete from pizza where id=?
16:47:40.594 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Identity insert: insert into pizza (categorie, code, libelle, prix) values (?, ?, ?, ?)
16:47:40.614 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fe1ce85]
16:47:40.615 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:47:40.617 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@23aa363a]
16:47:40.620 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:47:40.620 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:47:40.620 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:47:40.620 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:47:40.620 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:47:40.634 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:47:40.638 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:47:40.640 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [NONE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:47:40.640 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c62d71]
16:47:40.640 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:47:40.640 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@47f4e407]
16:47:40.641 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:47:40.641 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:47:40.641 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:47:40.641 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:47:40.641 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:47:40.641 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:47:40.641 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:47:40.641 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:47:40.641 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48d5f34e]
16:47:40.641 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:47:40.642 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6ff65192]
16:47:40.642 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:47:40.642 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:47:40.642 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:47:40.642 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:47:40.642 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:47:40.643 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:47:40.643 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:47:40.643 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:47:40.643 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af0df05]
16:47:40.643 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:47:40.643 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@acdb094]
16:47:40.643 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:47:40.643 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:47:40.643 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:47:40.643 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:47:40.643 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:47:40.644 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:47:40.644 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:47:40.644 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_NOWAIT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:47:40.644 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b0f373b]
16:47:40.644 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:47:40.644 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4b45dcb8]
16:47:40.644 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:47:40.644 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:47:40.644 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:47:40.645 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:47:40.645 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:47:40.645 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:47:40.645 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:47:40.645 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_SKIPLOCKED]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:47:40.645 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2072acb2]
16:47:40.646 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:47:40.646 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@35a9782c]
16:47:40.646 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:47:40.646 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:47:40.646 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:47:40.646 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:47:40.646 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:47:40.646 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:47:40.646 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:47:40.646 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [FORCE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:47:40.647 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45815ffc]
16:47:40.647 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:47:40.647 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@d3957fe]
16:47:40.647 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:47:40.647 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:47:40.647 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:47:40.647 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:47:40.647 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:47:40.647 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:47:40.648 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:47:40.648 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? lock in share mode
16:47:40.648 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@299321e2]
16:47:40.648 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:47:40.648 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@64ba3208]
16:47:40.648 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:47:40.648 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:47:40.648 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:47:40.648 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:47:40.649 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:47:40.649 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:47:40.649 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:47:40.649 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_WRITE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:47:40.649 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a6944c]
16:47:40.649 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:47:40.650 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6b00f608]
16:47:40.650 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:47:40.650 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:47:40.650 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:47:40.650 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:47:40.650 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:47:40.650 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:47:40.650 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:47:40.651 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:47:40.651 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e821657]
16:47:40.651 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:47:40.651 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@71cf1b07]
16:47:40.651 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:47:40.651 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:47:40.651 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:47:40.651 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:47:40.651 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:47:40.651 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:47:40.652 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:47:40.652 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:47:40.652 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fce136b]
16:47:40.652 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:47:40.652 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@43b6123e]
16:47:40.653 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:47:40.653 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:47:40.653 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:47:40.653 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:47:40.653 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:47:40.653 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:47:40.653 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:47:40.654 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:47:40.665 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_MERGE on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:47:40.665 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_REFRESH on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:47:40.665 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
16:47:40.668 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator -
				No actions specified; doing nothing
16:47:40.668 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
16:47:40.669 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
16:47:40.670 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
16:47:40.671 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
16:47:40.671 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
16:47:40.673 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c055c54
16:47:40.674 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: 76c39619-19af-46c9-9958-e934724e7e9a (<unnamed>)
16:47:40.674 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
16:47:40.729 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:47:40.729 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:47:40.730 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:47:40.737 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@476b0ae6
16:47:40.738 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pizza 
16:47:42.310 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
16:47:42.318 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@650eab8
16:47:42.318 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
16:47:42.342 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: SELECT p FROM fr.pizzeria.model.Pizza p IS NOT EMPTY
16:47:42.361 [main] ERROR o.h.hql.internal.ast.ErrorCounter -
				line 1:41: unexpected token: IS
16:47:42.363 [main] ERROR o.h.hql.internal.ast.ErrorCounter -
				line 1:41: unexpected token: IS
antlr.NoViableAltException: unexpected token: IS
	at org.hibernate.hql.internal.antlr.HqlBaseParser.fromClassOrOuterQueryPath(HqlBaseParser.java:1954)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.fromRange(HqlBaseParser.java:1481)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.fromClause(HqlBaseParser.java:1325)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectFrom(HqlBaseParser.java:1045)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.queryRule(HqlBaseParser.java:730)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectStatement(HqlBaseParser.java:323)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.statement(HqlBaseParser.java:186)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:279)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:187)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.AbstractSessionImpl.getHQLQueryPlan(AbstractSessionImpl.java:302)
	at org.hibernate.internal.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:240)
	at org.hibernate.internal.SessionImpl.createQuery(SessionImpl.java:1907)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.createQuery(AbstractEntityManagerImpl.java:305)
	at fr.pizzeria.dao.PizzaJpaBase.findAllPizzas(PizzaJpaBase.java:20)
	at fr.pizzeria.console.PizzeriaAdminConsoleApp.main(PizzeriaAdminConsoleApp.java:41)
16:47:42.367 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

16:48:04.548 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
16:48:04.593 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
16:48:04.644 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
16:48:04.668 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pizza]
16:48:04.669 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
16:48:04.681 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY9/Documents/Pizzeria-console-object/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mariadb://localhost:3306/pizzadb
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
16:48:04.693 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
16:48:04.694 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
16:48:04.702 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
16:48:04.702 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
16:48:04.763 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
16:48:04.764 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
16:48:04.765 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
16:48:04.776 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
16:48:04.797 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
16:48:04.804 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
16:48:04.904 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
16:48:04.905 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
16:48:04.905 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37e547da
16:48:04.906 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15761df8
16:48:04.907 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@71c8becc
16:48:04.907 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@3bd40a57
16:48:04.909 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
16:48:04.909 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
16:48:04.909 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78047b92
16:48:04.911 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@4387b79e
16:48:04.911 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@4387b79e
16:48:04.911 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4387b79e
16:48:04.913 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
16:48:04.913 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
16:48:04.913 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@add0edd
16:48:04.914 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@1d76aeea
16:48:04.914 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@1d76aeea
16:48:04.914 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d76aeea
16:48:04.916 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
16:48:04.916 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
16:48:04.916 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@197d671
16:48:04.917 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
16:48:04.917 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
16:48:04.918 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7995092a
16:48:04.919 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
16:48:04.919 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
16:48:04.919 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23f7d05d
16:48:04.921 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f1302d6
16:48:04.921 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f1302d6
16:48:04.922 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@184cf7cf
16:48:04.923 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@184cf7cf
16:48:04.923 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@38c5cc4c
16:48:04.923 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@38c5cc4c
16:48:04.925 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ec756bd
16:48:04.926 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d121db3
16:48:04.928 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@12d4bf7e
16:48:04.928 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@12d4bf7e
16:48:04.930 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@2928854b
16:48:04.930 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@2928854b
16:48:04.931 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@124c278f
16:48:04.931 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@124c278f
16:48:04.933 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@229d10bd
16:48:04.933 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@229d10bd
16:48:04.933 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@229d10bd
16:48:04.934 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4ccb53
16:48:04.935 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@45b9a632
16:48:04.935 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@45b9a632
16:48:04.935 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@45b9a632
16:48:04.936 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b26e945
16:48:04.937 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@3c9d0b9d
16:48:04.938 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c9d0b9d
16:48:04.938 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@d4342c2
16:48:04.939 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d4342c2
16:48:04.939 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@12b0404f
16:48:04.940 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12b0404f
16:48:04.940 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@647fd8ce
16:48:04.940 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@647fd8ce
16:48:04.942 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1677d1
16:48:04.942 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1677d1
16:48:04.942 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e316c74
16:48:04.943 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@7f010382
16:48:04.943 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@7f010382
16:48:04.943 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@7f010382
16:48:04.944 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f0f1111
16:48:04.944 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f0f1111
16:48:04.944 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f0f1111
16:48:04.945 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@5ccddd20
16:48:04.946 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@59d016c9
16:48:04.946 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@59d016c9
16:48:04.946 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@59d016c9
16:48:04.947 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48aaecc3
16:48:04.947 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48aaecc3
16:48:04.947 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48aaecc3
16:48:04.948 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@5c909414
16:48:04.948 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@78e117e3
16:48:04.951 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@bef2d72
16:48:04.951 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bef2d72
16:48:04.951 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fe7aac8
16:48:04.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@63021689
16:48:04.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@63021689
16:48:04.956 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@a9cd3b1
16:48:04.956 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a9cd3b1
16:48:04.956 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9225652
16:48:04.957 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6580cfdd
16:48:04.958 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@48ae9b55
16:48:04.960 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@1817d444
16:48:04.960 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1817d444
16:48:04.960 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@31368b99
16:48:04.961 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1725dc0f
16:48:04.961 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3911c2a7
16:48:04.961 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4ac3c60d
16:48:04.961 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4facf68f
16:48:04.961 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76508ed1
16:48:04.961 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41e36e46
16:48:04.961 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15c43bd9
16:48:04.968 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
16:48:04.973 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mariadb://localhost:3306/pizzadb]
16:48:04.974 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=root}
16:48:04.974 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
16:48:04.976 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
16:48:04.977 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
16:48:05.015 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
16:48:05.015 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
16:48:05.015 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
16:48:05.025 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
16:48:05.037 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
16:48:05.052 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
16:48:05.069 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@5609159b
16:48:05.069 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5609159b
16:48:05.087 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@3943a2be
16:48:05.087 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3943a2be
16:48:05.088 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
16:48:05.088 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
16:48:05.089 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
16:48:05.089 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
16:48:05.090 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
16:48:05.090 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
16:48:05.091 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
16:48:05.091 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
16:48:05.092 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
16:48:05.092 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
16:48:05.095 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
16:48:05.095 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
16:48:05.152 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
16:48:05.152 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
16:48:05.153 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
16:48:05.153 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
16:48:05.153 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
16:48:05.154 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
16:48:05.154 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
16:48:05.155 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:48:05.156 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
16:48:05.157 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
16:48:05.157 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
16:48:05.158 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
16:48:05.158 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:48:05.158 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
16:48:05.184 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
16:48:05.195 [main] DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl -
				Encountered a non-categorized annotated class [fr.pizzeria.model.CategoriePizza]; ignoring
16:48:05.219 [main] DEBUG org.hibernate.cfg.AnnotationBinder -
				Binding entity from annotated class: fr.pizzeria.model.Pizza
16:48:05.236 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
16:48:05.240 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Import with entity name Pizza
16:48:05.242 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Bind entity fr.pizzeria.model.Pizza on table pizza
16:48:05.271 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=id, insertable=true, updatable=true, unique=false}
16:48:05.273 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property id with lazy=false
16:48:05.275 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:id]
16:48:05.276 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for id
16:48:05.278 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property id
16:48:05.281 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
16:48:05.285 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
16:48:05.285 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property categorie with lazy=false
16:48:05.285 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza.categoriePizza:categorie]
16:48:05.286 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for categorie
16:48:05.286 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categorie
16:48:05.286 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categoriePizza
16:48:05.286 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=code, insertable=true, updatable=true, unique=false}
16:48:05.286 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property code with lazy=false
16:48:05.286 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:code]
16:48:05.287 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for code
16:48:05.287 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property code
16:48:05.287 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=libelle, insertable=true, updatable=true, unique=false}
16:48:05.287 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property libelle with lazy=false
16:48:05.287 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:libelle]
16:48:05.287 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for libelle
16:48:05.287 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property libelle
16:48:05.287 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=prix, insertable=true, updatable=true, unique=false}
16:48:05.287 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property prix with lazy=false
16:48:05.287 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:prix]
16:48:05.288 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for prix
16:48:05.288 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property prix
16:48:05.289 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for id
16:48:05.289 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for categorie
16:48:05.289 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for code
16:48:05.289 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for libelle
16:48:05.289 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for prix
16:48:05.291 [main] DEBUG org.hibernate.mapping.PrimaryKey -
				Forcing column [id] to be non-null as it is part of the primary key for table [pizza]
16:48:05.322 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:48:05.329 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
16:48:05.330 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
16:48:05.330 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
16:48:05.330 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
16:48:05.330 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
16:48:05.330 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
16:48:05.331 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
16:48:05.331 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
16:48:05.331 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
16:48:05.331 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
16:48:05.331 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
16:48:05.331 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
16:48:05.331 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
16:48:05.331 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
16:48:05.331 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
16:48:05.331 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
16:48:05.331 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
16:48:05.331 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
16:48:05.332 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
16:48:05.332 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
16:48:05.332 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
16:48:05.332 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
16:48:05.332 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1ef6d34c
16:48:05.332 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
16:48:05.332 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
16:48:05.332 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
16:48:05.332 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
16:48:05.332 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
16:48:05.332 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
16:48:05.332 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
16:48:05.332 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
16:48:05.332 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
16:48:05.332 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
16:48:05.332 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
16:48:05.332 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
16:48:05.332 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
16:48:05.372 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
16:48:05.372 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_161\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e48362c, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY9\Documents\Pizzeria-console-object, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_161\lib\endorsed, java.io.tmpdir=C:\Users\ETY9\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mariadb://localhost:3306/pizzadb, java.library.path=C:\Program Files\Java\jre1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_161/bin/server;C:/Program Files/Java/jre1.8.0_161/bin;C:/Program Files/Java/jre1.8.0_161/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Users\ETY9\AppData\Local\Microsoft\WindowsApps;C:\Users\ETY9\AppData\Local\atom\bin;C:\Program Files\Maven\apache-maven-3.5.3\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_161\bin;;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY9, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=ETY9, java.class.path=C:\Users\ETY9\Documents\Pizzeria-console-object\target\classes;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.junit_4.12.0.v201504281640\junit.jar;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.hamcrest.core_1.3.0.v201303031735.jar;C:\Users\ETY9\.m2\repository\commons-io\commons-io\2.6\commons-io-2.6.jar;C:\Users\ETY9\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY9\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\ETY9\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY9\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY9\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY9\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY9\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY9\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY9\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY9\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-java8\5.1.0.Final\hibernate-java8-5.1.0.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_161, hibernate.connection.url=jdbc:mariadb://localhost:3306/pizzadb, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jre1.8.0_161\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_161\lib\resources.jar;C:\Program Files\Java\jre1.8.0_161\lib\rt.jar;C:\Program Files\Java\jre1.8.0_161\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_161\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_161\lib\jce.jar;C:\Program Files\Java\jre1.8.0_161\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_161\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_161\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
16:48:05.385 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
16:48:05.385 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
16:48:05.438 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
16:48:05.438 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
16:48:05.445 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:48:05.448 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:48:05.450 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
16:48:05.450 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
16:48:05.492 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:48:05.493 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:48:05.509 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				Static SQL for entity: fr.pizzeria.model.Pizza
16:48:05.509 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Version select: select id from pizza where id =?
16:48:05.509 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Snapshot select: select pizza_.id, pizza_.categorie as categori2_0_, pizza_.code as code3_0_, pizza_.libelle as libelle4_0_, pizza_.prix as prix5_0_ from pizza pizza_ where pizza_.id=?
16:48:05.509 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Insert 0: insert into pizza (categorie, code, libelle, prix, id) values (?, ?, ?, ?, ?)
16:48:05.509 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Update 0: update pizza set categorie=?, code=?, libelle=?, prix=? where id=?
16:48:05.509 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Delete 0: delete from pizza where id=?
16:48:05.509 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Identity insert: insert into pizza (categorie, code, libelle, prix) values (?, ?, ?, ?)
16:48:05.542 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fe1ce85]
16:48:05.543 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:05.546 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@23aa363a]
16:48:05.551 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:05.551 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:05.551 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:05.551 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:05.552 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:05.568 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:05.572 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:05.574 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [NONE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:48:05.574 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c62d71]
16:48:05.574 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:05.574 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@47f4e407]
16:48:05.574 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:05.574 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:05.574 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:05.574 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:05.574 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:05.574 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:05.575 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:05.575 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:48:05.575 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48d5f34e]
16:48:05.575 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:05.575 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6ff65192]
16:48:05.575 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:05.575 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:05.575 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:05.575 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:05.576 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:05.576 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:05.576 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:05.576 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:48:05.576 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af0df05]
16:48:05.577 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:05.577 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@acdb094]
16:48:05.577 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:05.577 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:05.577 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:05.577 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:05.577 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:05.577 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:05.578 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:05.578 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_NOWAIT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:48:05.578 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b0f373b]
16:48:05.578 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:05.578 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4b45dcb8]
16:48:05.578 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:05.578 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:05.578 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:05.578 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:05.578 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:05.578 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:05.579 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:05.579 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_SKIPLOCKED]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:48:05.579 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2072acb2]
16:48:05.579 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:05.579 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@35a9782c]
16:48:05.579 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:05.579 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:05.579 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:05.579 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:05.579 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:05.580 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:05.580 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:05.580 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [FORCE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:48:05.580 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45815ffc]
16:48:05.580 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:05.580 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@d3957fe]
16:48:05.580 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:05.580 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:05.580 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:05.581 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:05.581 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:05.581 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:05.581 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:05.581 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? lock in share mode
16:48:05.581 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@299321e2]
16:48:05.581 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:05.581 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@64ba3208]
16:48:05.581 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:05.581 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:05.581 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:05.582 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:05.582 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:05.582 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:05.582 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:05.582 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_WRITE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:48:05.582 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a6944c]
16:48:05.582 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:05.582 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6b00f608]
16:48:05.582 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:05.582 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:05.582 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:05.582 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:05.583 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:05.583 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:05.583 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:05.583 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:48:05.584 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e821657]
16:48:05.584 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:05.584 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@71cf1b07]
16:48:05.584 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:05.584 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:05.584 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:05.584 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:05.584 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:05.585 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:05.585 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:05.585 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:48:05.585 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fce136b]
16:48:05.585 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:05.586 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@43b6123e]
16:48:05.586 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:05.586 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:05.586 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:05.586 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:05.586 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:05.586 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:05.586 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:05.586 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:48:05.599 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_MERGE on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:48:05.599 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_REFRESH on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:48:05.600 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
16:48:05.603 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator -
				No actions specified; doing nothing
16:48:05.603 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
16:48:05.603 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
16:48:05.605 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
16:48:05.606 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
16:48:05.606 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
16:48:05.607 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c055c54
16:48:05.609 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: 1008cd1c-c6c3-4395-95ed-f0ac4e671b54 (<unnamed>)
16:48:05.609 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
16:48:05.669 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:48:05.669 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:48:05.669 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:48:05.679 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@476b0ae6
16:48:05.679 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pizza 
16:48:07.499 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
16:48:07.507 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@650eab8
16:48:07.507 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
16:48:07.543 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: SELECT p FROM fr.pizzeria.model.Pizza p IF NOT EMPTY
16:48:07.547 [main] ERROR o.h.hql.internal.ast.ErrorCounter -
				line 1:41: unexpected token: IF
16:48:07.549 [main] ERROR o.h.hql.internal.ast.ErrorCounter -
				line 1:41: unexpected token: IF
antlr.NoViableAltException: unexpected token: IF
	at org.hibernate.hql.internal.antlr.HqlBaseParser.fromClassOrOuterQueryPath(HqlBaseParser.java:1954)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.fromRange(HqlBaseParser.java:1481)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.fromClause(HqlBaseParser.java:1325)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectFrom(HqlBaseParser.java:1045)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.queryRule(HqlBaseParser.java:730)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectStatement(HqlBaseParser.java:323)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.statement(HqlBaseParser.java:186)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:279)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:187)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.AbstractSessionImpl.getHQLQueryPlan(AbstractSessionImpl.java:302)
	at org.hibernate.internal.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:240)
	at org.hibernate.internal.SessionImpl.createQuery(SessionImpl.java:1907)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.createQuery(AbstractEntityManagerImpl.java:305)
	at fr.pizzeria.dao.PizzaJpaBase.findAllPizzas(PizzaJpaBase.java:20)
	at fr.pizzeria.console.PizzeriaAdminConsoleApp.main(PizzeriaAdminConsoleApp.java:41)
16:48:07.553 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

16:48:35.013 [pool-1-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Connection pool now considered primed; min-size will be maintained
16:48:45.261 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
16:48:45.304 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
16:48:45.354 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
16:48:45.354 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pizza]
16:48:45.356 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
16:48:45.367 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY9/Documents/Pizzeria-console-object/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mariadb://localhost:3306/pizzadb
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
16:48:45.379 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
16:48:45.381 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
16:48:45.388 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
16:48:45.389 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
16:48:45.448 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
16:48:45.449 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
16:48:45.450 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
16:48:45.460 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
16:48:45.479 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
16:48:45.485 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
16:48:45.593 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
16:48:45.593 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
16:48:45.593 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37e547da
16:48:45.594 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15761df8
16:48:45.595 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@71c8becc
16:48:45.596 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@3bd40a57
16:48:45.597 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
16:48:45.598 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
16:48:45.598 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78047b92
16:48:45.599 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@4387b79e
16:48:45.599 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@4387b79e
16:48:45.599 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4387b79e
16:48:45.601 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
16:48:45.601 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
16:48:45.601 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@add0edd
16:48:45.602 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@1d76aeea
16:48:45.603 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@1d76aeea
16:48:45.603 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d76aeea
16:48:45.604 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
16:48:45.605 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
16:48:45.605 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@197d671
16:48:45.607 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
16:48:45.607 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
16:48:45.607 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7995092a
16:48:45.609 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
16:48:45.609 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
16:48:45.609 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23f7d05d
16:48:45.611 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f1302d6
16:48:45.611 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f1302d6
16:48:45.613 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@184cf7cf
16:48:45.614 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@184cf7cf
16:48:45.615 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@38c5cc4c
16:48:45.615 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@38c5cc4c
16:48:45.616 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ec756bd
16:48:45.617 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d121db3
16:48:45.618 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@12d4bf7e
16:48:45.619 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@12d4bf7e
16:48:45.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@2928854b
16:48:45.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@2928854b
16:48:45.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@124c278f
16:48:45.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@124c278f
16:48:45.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@229d10bd
16:48:45.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@229d10bd
16:48:45.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@229d10bd
16:48:45.625 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4ccb53
16:48:45.625 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@45b9a632
16:48:45.626 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@45b9a632
16:48:45.626 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@45b9a632
16:48:45.626 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b26e945
16:48:45.627 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@3c9d0b9d
16:48:45.627 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c9d0b9d
16:48:45.628 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@d4342c2
16:48:45.628 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d4342c2
16:48:45.629 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@12b0404f
16:48:45.629 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12b0404f
16:48:45.630 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@647fd8ce
16:48:45.630 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@647fd8ce
16:48:45.631 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1677d1
16:48:45.631 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1677d1
16:48:45.632 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e316c74
16:48:45.633 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@7f010382
16:48:45.633 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@7f010382
16:48:45.633 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@7f010382
16:48:45.634 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f0f1111
16:48:45.634 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f0f1111
16:48:45.634 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f0f1111
16:48:45.635 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@5ccddd20
16:48:45.635 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@59d016c9
16:48:45.636 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@59d016c9
16:48:45.636 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@59d016c9
16:48:45.637 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48aaecc3
16:48:45.637 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48aaecc3
16:48:45.637 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48aaecc3
16:48:45.637 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@5c909414
16:48:45.638 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@78e117e3
16:48:45.641 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@bef2d72
16:48:45.641 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bef2d72
16:48:45.641 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fe7aac8
16:48:45.644 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@63021689
16:48:45.644 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@63021689
16:48:45.646 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@a9cd3b1
16:48:45.646 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a9cd3b1
16:48:45.646 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9225652
16:48:45.647 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6580cfdd
16:48:45.647 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@48ae9b55
16:48:45.650 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@1817d444
16:48:45.650 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1817d444
16:48:45.650 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@31368b99
16:48:45.650 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1725dc0f
16:48:45.650 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3911c2a7
16:48:45.650 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4ac3c60d
16:48:45.650 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4facf68f
16:48:45.650 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76508ed1
16:48:45.651 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41e36e46
16:48:45.651 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15c43bd9
16:48:45.658 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
16:48:45.663 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mariadb://localhost:3306/pizzadb]
16:48:45.664 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=root}
16:48:45.664 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
16:48:45.666 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
16:48:45.666 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
16:48:45.705 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
16:48:45.705 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
16:48:45.705 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
16:48:45.715 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
16:48:45.727 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
16:48:45.743 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
16:48:45.759 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@5609159b
16:48:45.759 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5609159b
16:48:45.778 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@3943a2be
16:48:45.778 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3943a2be
16:48:45.778 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
16:48:45.779 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
16:48:45.779 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
16:48:45.779 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
16:48:45.780 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
16:48:45.780 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
16:48:45.781 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
16:48:45.781 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
16:48:45.781 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
16:48:45.782 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
16:48:45.784 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
16:48:45.785 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
16:48:45.841 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
16:48:45.841 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
16:48:45.842 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
16:48:45.842 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
16:48:45.842 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
16:48:45.843 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
16:48:45.843 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
16:48:45.844 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:48:45.845 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
16:48:45.845 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
16:48:45.846 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
16:48:45.846 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
16:48:45.846 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:48:45.847 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
16:48:45.880 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
16:48:45.891 [main] DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl -
				Encountered a non-categorized annotated class [fr.pizzeria.model.CategoriePizza]; ignoring
16:48:45.915 [main] DEBUG org.hibernate.cfg.AnnotationBinder -
				Binding entity from annotated class: fr.pizzeria.model.Pizza
16:48:45.931 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
16:48:45.935 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Import with entity name Pizza
16:48:45.938 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Bind entity fr.pizzeria.model.Pizza on table pizza
16:48:45.965 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=id, insertable=true, updatable=true, unique=false}
16:48:45.967 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property id with lazy=false
16:48:45.968 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:id]
16:48:45.969 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for id
16:48:45.971 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property id
16:48:45.975 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
16:48:45.979 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
16:48:45.979 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property categorie with lazy=false
16:48:45.979 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza.categoriePizza:categorie]
16:48:45.979 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for categorie
16:48:45.979 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categorie
16:48:45.979 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categoriePizza
16:48:45.980 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=code, insertable=true, updatable=true, unique=false}
16:48:45.980 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property code with lazy=false
16:48:45.981 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:code]
16:48:45.981 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for code
16:48:45.981 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property code
16:48:45.981 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=libelle, insertable=true, updatable=true, unique=false}
16:48:45.981 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property libelle with lazy=false
16:48:45.981 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:libelle]
16:48:45.981 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for libelle
16:48:45.981 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property libelle
16:48:45.982 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=prix, insertable=true, updatable=true, unique=false}
16:48:45.982 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property prix with lazy=false
16:48:45.982 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:prix]
16:48:45.982 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for prix
16:48:45.982 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property prix
16:48:45.983 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for id
16:48:45.984 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for categorie
16:48:45.984 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for code
16:48:45.984 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for libelle
16:48:45.984 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for prix
16:48:45.985 [main] DEBUG org.hibernate.mapping.PrimaryKey -
				Forcing column [id] to be non-null as it is part of the primary key for table [pizza]
16:48:46.015 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:48:46.023 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
16:48:46.024 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
16:48:46.024 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
16:48:46.024 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
16:48:46.025 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1ef6d34c
16:48:46.026 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
16:48:46.026 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
16:48:46.026 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
16:48:46.026 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
16:48:46.026 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
16:48:46.026 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
16:48:46.026 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
16:48:46.026 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
16:48:46.026 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
16:48:46.026 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
16:48:46.026 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
16:48:46.026 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
16:48:46.026 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
16:48:46.076 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
16:48:46.076 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_161\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e48362c, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY9\Documents\Pizzeria-console-object, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_161\lib\endorsed, java.io.tmpdir=C:\Users\ETY9\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mariadb://localhost:3306/pizzadb, java.library.path=C:\Program Files\Java\jre1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_161/bin/server;C:/Program Files/Java/jre1.8.0_161/bin;C:/Program Files/Java/jre1.8.0_161/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Users\ETY9\AppData\Local\Microsoft\WindowsApps;C:\Users\ETY9\AppData\Local\atom\bin;C:\Program Files\Maven\apache-maven-3.5.3\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_161\bin;;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY9, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=ETY9, java.class.path=C:\Users\ETY9\Documents\Pizzeria-console-object\target\classes;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.junit_4.12.0.v201504281640\junit.jar;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.hamcrest.core_1.3.0.v201303031735.jar;C:\Users\ETY9\.m2\repository\commons-io\commons-io\2.6\commons-io-2.6.jar;C:\Users\ETY9\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY9\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\ETY9\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY9\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY9\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY9\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY9\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY9\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY9\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY9\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-java8\5.1.0.Final\hibernate-java8-5.1.0.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_161, hibernate.connection.url=jdbc:mariadb://localhost:3306/pizzadb, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jre1.8.0_161\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_161\lib\resources.jar;C:\Program Files\Java\jre1.8.0_161\lib\rt.jar;C:\Program Files\Java\jre1.8.0_161\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_161\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_161\lib\jce.jar;C:\Program Files\Java\jre1.8.0_161\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_161\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_161\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
16:48:46.093 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
16:48:46.093 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
16:48:46.130 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
16:48:46.130 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
16:48:46.135 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:48:46.137 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:48:46.139 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
16:48:46.139 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
16:48:46.164 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:48:46.165 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:48:46.179 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				Static SQL for entity: fr.pizzeria.model.Pizza
16:48:46.180 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Version select: select id from pizza where id =?
16:48:46.180 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Snapshot select: select pizza_.id, pizza_.categorie as categori2_0_, pizza_.code as code3_0_, pizza_.libelle as libelle4_0_, pizza_.prix as prix5_0_ from pizza pizza_ where pizza_.id=?
16:48:46.180 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Insert 0: insert into pizza (categorie, code, libelle, prix, id) values (?, ?, ?, ?, ?)
16:48:46.180 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Update 0: update pizza set categorie=?, code=?, libelle=?, prix=? where id=?
16:48:46.180 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Delete 0: delete from pizza where id=?
16:48:46.180 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Identity insert: insert into pizza (categorie, code, libelle, prix) values (?, ?, ?, ?)
16:48:46.202 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fe1ce85]
16:48:46.203 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:46.205 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@23aa363a]
16:48:46.209 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:46.209 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:46.209 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:46.209 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:46.209 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:46.221 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:46.226 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:46.228 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [NONE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:48:46.228 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c62d71]
16:48:46.228 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:46.228 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@47f4e407]
16:48:46.228 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:46.228 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:46.228 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:46.228 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:46.229 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:46.229 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:46.229 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:46.229 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:48:46.229 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48d5f34e]
16:48:46.229 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:46.229 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6ff65192]
16:48:46.229 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:46.229 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:46.229 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:46.230 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:46.230 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:46.230 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:46.230 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:46.230 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:48:46.230 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af0df05]
16:48:46.230 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:46.231 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@acdb094]
16:48:46.231 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:46.231 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:46.231 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:46.231 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:46.231 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:46.231 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:46.232 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:46.232 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_NOWAIT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:48:46.232 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b0f373b]
16:48:46.233 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:46.233 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4b45dcb8]
16:48:46.233 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:46.233 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:46.233 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:46.233 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:46.233 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:46.233 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:46.234 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:46.234 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_SKIPLOCKED]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:48:46.234 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2072acb2]
16:48:46.234 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:46.234 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@35a9782c]
16:48:46.234 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:46.234 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:46.234 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:46.234 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:46.235 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:46.235 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:46.236 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:46.236 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [FORCE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:48:46.236 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45815ffc]
16:48:46.236 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:46.237 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@d3957fe]
16:48:46.237 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:46.237 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:46.237 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:46.237 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:46.237 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:46.240 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:46.242 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:46.242 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? lock in share mode
16:48:46.242 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@299321e2]
16:48:46.242 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:46.243 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@64ba3208]
16:48:46.243 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:46.243 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:46.243 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:46.243 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:46.243 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:46.243 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:46.244 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:46.244 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_WRITE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:48:46.244 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a6944c]
16:48:46.244 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:46.245 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6b00f608]
16:48:46.245 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:46.245 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:46.245 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:46.245 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:46.245 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:46.245 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:46.246 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:46.246 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
16:48:46.246 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e821657]
16:48:46.246 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:46.247 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@71cf1b07]
16:48:46.247 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:46.247 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:46.247 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:46.247 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:46.247 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:46.247 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:46.248 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:46.248 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:48:46.249 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fce136b]
16:48:46.249 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
16:48:46.249 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@43b6123e]
16:48:46.249 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
16:48:46.249 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:46.249 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
16:48:46.249 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:46.249 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:46.250 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:46.250 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

16:48:46.250 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:48:46.264 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_MERGE on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:48:46.264 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_REFRESH on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
16:48:46.264 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
16:48:46.267 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator -
				No actions specified; doing nothing
16:48:46.267 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
16:48:46.267 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
16:48:46.269 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
16:48:46.270 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
16:48:46.270 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
16:48:46.271 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c055c54
16:48:46.273 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: 5ef2ffd7-b264-4d73-92c1-65f76b2c2225 (<unnamed>)
16:48:46.274 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
16:48:46.352 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:48:46.352 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:48:46.352 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
16:48:46.359 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@476b0ae6
16:48:46.360 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pizza 
16:48:47.978 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
16:48:47.986 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@650eab8
16:48:47.986 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
16:48:48.017 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: SELECT p FROM fr.pizzeria.model.Pizza p
16:48:48.026 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'fr'
       |     |  |  |  \-[IDENT] Node: 'pizzeria'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Pizza'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

16:48:48.026 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:48:48.058 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
16:48:48.083 [main] DEBUG o.h.h.internal.ast.tree.FromElement -
				FromClause{level=1} : fr.pizzeria.model.Pizza (p) -> pizza0_
16:48:48.084 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode -
				Resolved : p -> pizza0_.id
16:48:48.091 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select : finishing up [level=1, statement=select]
16:48:48.091 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				processQuery() :  ( SELECT ( {select clause} pizza0_.id ) ( FromClause{level=1} pizza pizza0_ ) )
16:48:48.103 [main] DEBUG o.h.h.i.ast.util.JoinProcessor -
				Using FROM fragment [pizza pizza0_]
16:48:48.103 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select >> end [level=1, statement=select]
16:48:48.104 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (pizza)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'pizza0_.id as id1_0_' {alias=p, className=fr.pizzeria.model.Pizza, tableAlias=pizza0_}
    |  \-[SQL_TOKEN] SqlFragment: 'pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[pizza0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'pizza pizza0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=pizza,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}

16:48:48.104 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:48:48.115 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				HQL: SELECT p FROM fr.pizzeria.model.Pizza p
16:48:48.116 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				SQL: select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
16:48:48.116 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:48:48.136 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
16:48:48.148 [main] DEBUG o.h.e.jdbc.spi.SqlExceptionHelper -
				could not extract ResultSet [n/a]
java.sql.SQLSyntaxErrorException: Unknown column 'pizza0_.libelle' in 'field list'
	at org.mariadb.jdbc.internal.SQLExceptionMapper.get(SQLExceptionMapper.java:138)
	at org.mariadb.jdbc.internal.SQLExceptionMapper.throwException(SQLExceptionMapper.java:106)
	at org.mariadb.jdbc.MySQLStatement.executeQueryEpilog(MySQLStatement.java:264)
	at org.mariadb.jdbc.MySQLStatement.execute(MySQLStatement.java:288)
	at org.mariadb.jdbc.MySQLStatement.executeQuery(MySQLStatement.java:302)
	at org.mariadb.jdbc.MySQLPreparedStatement.executeQuery(MySQLPreparedStatement.java:112)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:70)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2115)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1898)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1874)
	at org.hibernate.loader.Loader.doQuery(Loader.java:919)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:336)
	at org.hibernate.loader.Loader.doList(Loader.java:2610)
	at org.hibernate.loader.Loader.doList(Loader.java:2593)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2422)
	at org.hibernate.loader.Loader.list(Loader.java:2417)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:501)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:371)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1339)
	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:87)
	at org.hibernate.jpa.internal.QueryImpl.list(QueryImpl.java:606)
	at org.hibernate.jpa.internal.QueryImpl.getResultList(QueryImpl.java:483)
	at fr.pizzeria.dao.PizzaJpaBase.findAllPizzas(PizzaJpaBase.java:21)
	at fr.pizzeria.console.PizzeriaAdminConsoleApp.main(PizzeriaAdminConsoleApp.java:41)
Caused by: org.mariadb.jdbc.internal.common.QueryException: Unknown column 'pizza0_.libelle' in 'field list'
	at org.mariadb.jdbc.internal.mysql.MySQLProtocol.getResult(MySQLProtocol.java:942)
	at org.mariadb.jdbc.internal.mysql.MySQLProtocol.executeQuery(MySQLProtocol.java:991)
	at org.mariadb.jdbc.MySQLStatement.execute(MySQLStatement.java:281)
	... 21 common frames omitted
16:48:48.149 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper -
				SQL Error: 1054, SQLState: 42S22
16:48:48.149 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper -
				Unknown column 'pizza0_.libelle' in 'field list'
16:48:48.150 [main] DEBUG o.h.j.spi.AbstractEntityManagerImpl -
				Mark transaction for rollback
17:14:26.148 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
17:14:26.193 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
17:14:26.241 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
17:14:26.241 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pizza]
17:14:26.243 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
17:14:26.257 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY9/Documents/Pizzeria-console-object/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mariadb://localhost:3306/pizzadb
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
17:14:26.267 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
17:14:26.269 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
17:14:26.275 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
17:14:26.276 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
17:14:26.332 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
17:14:26.333 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
17:14:26.334 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
17:14:26.344 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
17:14:26.364 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
17:14:26.371 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
17:14:26.473 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
17:14:26.474 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
17:14:26.474 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37e547da
17:14:26.476 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15761df8
17:14:26.478 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@71c8becc
17:14:26.478 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@3bd40a57
17:14:26.480 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
17:14:26.480 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
17:14:26.480 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78047b92
17:14:26.481 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@4387b79e
17:14:26.482 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@4387b79e
17:14:26.482 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4387b79e
17:14:26.483 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
17:14:26.484 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
17:14:26.484 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@add0edd
17:14:26.485 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@1d76aeea
17:14:26.485 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@1d76aeea
17:14:26.485 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d76aeea
17:14:26.486 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
17:14:26.487 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
17:14:26.487 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@197d671
17:14:26.489 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
17:14:26.489 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
17:14:26.489 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7995092a
17:14:26.490 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
17:14:26.491 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
17:14:26.491 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23f7d05d
17:14:26.493 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f1302d6
17:14:26.493 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f1302d6
17:14:26.494 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@184cf7cf
17:14:26.494 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@184cf7cf
17:14:26.495 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@38c5cc4c
17:14:26.495 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@38c5cc4c
17:14:26.496 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ec756bd
17:14:26.497 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d121db3
17:14:26.498 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@12d4bf7e
17:14:26.499 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@12d4bf7e
17:14:26.501 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@2928854b
17:14:26.501 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@2928854b
17:14:26.502 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@124c278f
17:14:26.502 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@124c278f
17:14:26.503 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@229d10bd
17:14:26.504 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@229d10bd
17:14:26.504 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@229d10bd
17:14:26.505 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4ccb53
17:14:26.506 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@45b9a632
17:14:26.506 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@45b9a632
17:14:26.507 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@45b9a632
17:14:26.507 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b26e945
17:14:26.508 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@3c9d0b9d
17:14:26.508 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c9d0b9d
17:14:26.509 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@d4342c2
17:14:26.509 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d4342c2
17:14:26.509 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@12b0404f
17:14:26.509 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12b0404f
17:14:26.510 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@647fd8ce
17:14:26.510 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@647fd8ce
17:14:26.511 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1677d1
17:14:26.512 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1677d1
17:14:26.512 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e316c74
17:14:26.513 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@7f010382
17:14:26.513 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@7f010382
17:14:26.513 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@7f010382
17:14:26.514 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:14:26.514 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:14:26.514 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:14:26.515 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@5ccddd20
17:14:26.515 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@59d016c9
17:14:26.516 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@59d016c9
17:14:26.516 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@59d016c9
17:14:26.517 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48aaecc3
17:14:26.517 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48aaecc3
17:14:26.517 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48aaecc3
17:14:26.517 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@5c909414
17:14:26.518 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@78e117e3
17:14:26.520 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@bef2d72
17:14:26.520 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bef2d72
17:14:26.521 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fe7aac8
17:14:26.524 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@63021689
17:14:26.524 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@63021689
17:14:26.526 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@a9cd3b1
17:14:26.526 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a9cd3b1
17:14:26.526 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9225652
17:14:26.527 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6580cfdd
17:14:26.527 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@48ae9b55
17:14:26.529 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@1817d444
17:14:26.529 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1817d444
17:14:26.530 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@31368b99
17:14:26.530 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1725dc0f
17:14:26.530 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3911c2a7
17:14:26.530 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4ac3c60d
17:14:26.530 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4facf68f
17:14:26.530 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76508ed1
17:14:26.530 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41e36e46
17:14:26.530 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15c43bd9
17:14:26.537 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
17:14:26.543 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mariadb://localhost:3306/pizzadb]
17:14:26.544 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=root}
17:14:26.544 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
17:14:26.547 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
17:14:26.547 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
17:14:26.592 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
17:14:26.592 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
17:14:26.593 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
17:14:26.603 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
17:14:26.619 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
17:14:26.636 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
17:14:26.655 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@5609159b
17:14:26.655 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5609159b
17:14:26.675 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@3943a2be
17:14:26.676 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3943a2be
17:14:26.677 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
17:14:26.677 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
17:14:26.678 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
17:14:26.678 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
17:14:26.679 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
17:14:26.679 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
17:14:26.680 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
17:14:26.680 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
17:14:26.681 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
17:14:26.681 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
17:14:26.685 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
17:14:26.685 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
17:14:26.751 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
17:14:26.752 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
17:14:26.752 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
17:14:26.752 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
17:14:26.756 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
17:14:26.757 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
17:14:26.758 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
17:14:26.759 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
17:14:26.760 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
17:14:26.761 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
17:14:26.762 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
17:14:26.762 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
17:14:26.762 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
17:14:26.763 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
17:14:26.788 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
17:14:26.799 [main] DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl -
				Encountered a non-categorized annotated class [fr.pizzeria.model.CategoriePizza]; ignoring
17:14:26.821 [main] DEBUG org.hibernate.cfg.AnnotationBinder -
				Binding entity from annotated class: fr.pizzeria.model.Pizza
17:14:26.836 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
17:14:26.841 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Import with entity name Pizza
17:14:26.843 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Bind entity fr.pizzeria.model.Pizza on table pizza
17:14:26.870 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=id, insertable=true, updatable=true, unique=false}
17:14:26.873 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property id with lazy=false
17:14:26.875 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:id]
17:14:26.876 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for id
17:14:26.877 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property id
17:14:26.881 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
17:14:26.885 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
17:14:26.885 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property categorie with lazy=false
17:14:26.885 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza.categoriePizza:categorie]
17:14:26.885 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for categorie
17:14:26.885 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categorie
17:14:26.885 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categoriePizza
17:14:26.886 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=code, insertable=true, updatable=true, unique=false}
17:14:26.886 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property code with lazy=false
17:14:26.886 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:code]
17:14:26.886 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for code
17:14:26.886 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property code
17:14:26.887 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=libelle, insertable=true, updatable=true, unique=false}
17:14:26.887 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property libelle with lazy=false
17:14:26.887 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:libelle]
17:14:26.887 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for libelle
17:14:26.888 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property libelle
17:14:26.888 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=prix, insertable=true, updatable=true, unique=false}
17:14:26.888 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property prix with lazy=false
17:14:26.888 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:prix]
17:14:26.888 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for prix
17:14:26.888 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property prix
17:14:26.889 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for id
17:14:26.890 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for categorie
17:14:26.890 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for code
17:14:26.890 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for libelle
17:14:26.890 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for prix
17:14:26.891 [main] DEBUG org.hibernate.mapping.PrimaryKey -
				Forcing column [id] to be non-null as it is part of the primary key for table [pizza]
17:14:26.918 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:14:26.926 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
17:14:26.927 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
17:14:26.927 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
17:14:26.927 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
17:14:26.927 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
17:14:26.927 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
17:14:26.927 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
17:14:26.927 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
17:14:26.927 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
17:14:26.927 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
17:14:26.927 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
17:14:26.927 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
17:14:26.927 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
17:14:26.927 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
17:14:26.927 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
17:14:26.927 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1ef6d34c
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
17:14:26.928 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
17:14:26.969 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
17:14:26.969 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_161\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e48362c, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY9\Documents\Pizzeria-console-object, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_161\lib\endorsed, java.io.tmpdir=C:\Users\ETY9\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mariadb://localhost:3306/pizzadb, java.library.path=C:\Program Files\Java\jre1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_161/bin/server;C:/Program Files/Java/jre1.8.0_161/bin;C:/Program Files/Java/jre1.8.0_161/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Users\ETY9\AppData\Local\Microsoft\WindowsApps;C:\Users\ETY9\AppData\Local\atom\bin;C:\Program Files\Maven\apache-maven-3.5.3\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_161\bin;;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY9, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=ETY9, java.class.path=C:\Users\ETY9\Documents\Pizzeria-console-object\target\classes;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.junit_4.12.0.v201504281640\junit.jar;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.hamcrest.core_1.3.0.v201303031735.jar;C:\Users\ETY9\.m2\repository\commons-io\commons-io\2.6\commons-io-2.6.jar;C:\Users\ETY9\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY9\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\ETY9\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY9\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY9\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY9\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY9\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY9\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY9\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY9\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-java8\5.1.0.Final\hibernate-java8-5.1.0.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_161, hibernate.connection.url=jdbc:mariadb://localhost:3306/pizzadb, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jre1.8.0_161\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_161\lib\resources.jar;C:\Program Files\Java\jre1.8.0_161\lib\rt.jar;C:\Program Files\Java\jre1.8.0_161\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_161\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_161\lib\jce.jar;C:\Program Files\Java\jre1.8.0_161\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_161\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_161\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
17:14:26.982 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
17:14:26.982 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
17:14:27.016 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
17:14:27.017 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
17:14:27.022 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:14:27.023 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:14:27.025 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
17:14:27.025 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
17:14:27.047 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:14:27.047 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:14:27.062 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				Static SQL for entity: fr.pizzeria.model.Pizza
17:14:27.062 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Version select: select id from pizza where id =?
17:14:27.062 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Snapshot select: select pizza_.id, pizza_.categorie as categori2_0_, pizza_.code as code3_0_, pizza_.libelle as libelle4_0_, pizza_.prix as prix5_0_ from pizza pizza_ where pizza_.id=?
17:14:27.062 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Insert 0: insert into pizza (categorie, code, libelle, prix, id) values (?, ?, ?, ?, ?)
17:14:27.062 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Update 0: update pizza set categorie=?, code=?, libelle=?, prix=? where id=?
17:14:27.062 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Delete 0: delete from pizza where id=?
17:14:27.062 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Identity insert: insert into pizza (categorie, code, libelle, prix) values (?, ?, ?, ?)
17:14:27.082 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fe1ce85]
17:14:27.083 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:14:27.084 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@23aa363a]
17:14:27.088 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:14:27.088 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:14:27.088 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:14:27.088 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:14:27.088 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:14:27.099 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:14:27.102 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:14:27.104 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [NONE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:14:27.105 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c62d71]
17:14:27.105 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:14:27.105 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@47f4e407]
17:14:27.105 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:14:27.105 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:14:27.105 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:14:27.105 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:14:27.105 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:14:27.105 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:14:27.105 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:14:27.105 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:14:27.105 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48d5f34e]
17:14:27.106 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:14:27.106 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6ff65192]
17:14:27.106 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:14:27.106 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:14:27.106 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:14:27.106 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:14:27.106 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:14:27.106 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:14:27.106 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:14:27.107 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:14:27.107 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af0df05]
17:14:27.107 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:14:27.107 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@acdb094]
17:14:27.107 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:14:27.107 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:14:27.107 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:14:27.107 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:14:27.107 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:14:27.107 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:14:27.108 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:14:27.108 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_NOWAIT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:14:27.108 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b0f373b]
17:14:27.108 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:14:27.108 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4b45dcb8]
17:14:27.108 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:14:27.108 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:14:27.108 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:14:27.108 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:14:27.108 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:14:27.108 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:14:27.109 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:14:27.109 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_SKIPLOCKED]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:14:27.109 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2072acb2]
17:14:27.109 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:14:27.109 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@35a9782c]
17:14:27.109 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:14:27.109 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:14:27.109 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:14:27.109 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:14:27.109 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:14:27.110 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:14:27.110 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:14:27.110 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [FORCE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:14:27.110 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45815ffc]
17:14:27.110 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:14:27.110 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@d3957fe]
17:14:27.110 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:14:27.110 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:14:27.110 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:14:27.111 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:14:27.111 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:14:27.111 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:14:27.111 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:14:27.111 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? lock in share mode
17:14:27.111 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@299321e2]
17:14:27.111 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:14:27.111 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@64ba3208]
17:14:27.111 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:14:27.111 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:14:27.111 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:14:27.112 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:14:27.112 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:14:27.112 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:14:27.112 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:14:27.112 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_WRITE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:14:27.112 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a6944c]
17:14:27.112 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:14:27.113 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6b00f608]
17:14:27.113 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:14:27.113 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:14:27.113 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:14:27.113 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:14:27.113 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:14:27.113 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:14:27.113 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:14:27.113 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:14:27.114 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e821657]
17:14:27.114 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:14:27.114 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@71cf1b07]
17:14:27.114 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:14:27.114 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:14:27.114 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:14:27.114 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:14:27.114 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:14:27.114 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:14:27.115 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:14:27.115 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:14:27.115 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fce136b]
17:14:27.115 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:14:27.115 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@43b6123e]
17:14:27.115 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:14:27.115 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:14:27.115 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:14:27.115 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:14:27.115 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:14:27.115 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:14:27.116 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:14:27.116 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:14:27.130 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_MERGE on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:14:27.130 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_REFRESH on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:14:27.130 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
17:14:27.134 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator -
				No actions specified; doing nothing
17:14:27.134 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
17:14:27.134 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
17:14:27.136 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
17:14:27.137 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
17:14:27.137 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
17:14:27.138 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c055c54
17:14:27.140 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: 6ec18f87-442a-4a51-b2e6-eb4e11af241c (<unnamed>)
17:14:27.140 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
17:14:27.195 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:14:27.196 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:14:27.196 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:14:27.204 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@476b0ae6
17:14:27.204 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pizza 
17:14:33.524 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
17:14:33.534 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@650eab8
17:14:33.534 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
17:14:33.564 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: SELECT p FROM fr.pizzeria.model.Pizza p WHERE :test = p.CODE
17:14:33.573 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'fr'
    |  |     |  |  |  \-[IDENT] Node: 'pizzeria'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Pizza'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'test'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'p'
             \-[IDENT] Node: 'CODE'

17:14:33.573 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:14:33.600 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
17:14:33.614 [main] DEBUG o.h.h.internal.ast.tree.FromElement -
				FromClause{level=1} : fr.pizzeria.model.Pizza (p) -> pizza0_
17:14:33.615 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode -
				Resolved : p -> pizza0_.id
17:14:33.620 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode -
				Resolved : p -> pizza0_.id
17:14:56.591 [pool-1-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Connection pool now considered primed; min-size will be maintained
17:15:17.395 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
17:15:17.439 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
17:15:17.490 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
17:15:17.491 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pizza]
17:15:17.492 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
17:15:17.505 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY9/Documents/Pizzeria-console-object/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mariadb://localhost:3306/pizzadb
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
17:15:17.517 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
17:15:17.519 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
17:15:17.525 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
17:15:17.525 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
17:15:17.585 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
17:15:17.586 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
17:15:17.588 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
17:15:17.597 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
17:15:17.619 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
17:15:17.626 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
17:15:17.724 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
17:15:17.724 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
17:15:17.724 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37e547da
17:15:17.725 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15761df8
17:15:17.727 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@71c8becc
17:15:17.728 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@3bd40a57
17:15:17.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
17:15:17.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
17:15:17.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78047b92
17:15:17.732 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@4387b79e
17:15:17.732 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@4387b79e
17:15:17.732 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4387b79e
17:15:17.734 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
17:15:17.734 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
17:15:17.734 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@add0edd
17:15:17.735 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@1d76aeea
17:15:17.735 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@1d76aeea
17:15:17.735 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d76aeea
17:15:17.737 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
17:15:17.737 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
17:15:17.738 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@197d671
17:15:17.739 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
17:15:17.739 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
17:15:17.739 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7995092a
17:15:17.741 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
17:15:17.741 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
17:15:17.741 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23f7d05d
17:15:17.743 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f1302d6
17:15:17.743 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f1302d6
17:15:17.744 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@184cf7cf
17:15:17.744 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@184cf7cf
17:15:17.745 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@38c5cc4c
17:15:17.745 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@38c5cc4c
17:15:17.746 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ec756bd
17:15:17.747 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d121db3
17:15:17.748 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@12d4bf7e
17:15:17.749 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@12d4bf7e
17:15:17.751 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@2928854b
17:15:17.751 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@2928854b
17:15:17.754 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@124c278f
17:15:17.754 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@124c278f
17:15:17.756 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@229d10bd
17:15:17.756 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@229d10bd
17:15:17.757 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@229d10bd
17:15:17.758 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4ccb53
17:15:17.759 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@45b9a632
17:15:17.759 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@45b9a632
17:15:17.759 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@45b9a632
17:15:17.760 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b26e945
17:15:17.760 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@3c9d0b9d
17:15:17.760 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c9d0b9d
17:15:17.761 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@d4342c2
17:15:17.761 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d4342c2
17:15:17.762 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@12b0404f
17:15:17.762 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12b0404f
17:15:17.763 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@647fd8ce
17:15:17.763 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@647fd8ce
17:15:17.764 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1677d1
17:15:17.764 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1677d1
17:15:17.765 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e316c74
17:15:17.766 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@7f010382
17:15:17.766 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@7f010382
17:15:17.766 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@7f010382
17:15:17.767 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:15:17.767 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:15:17.767 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:15:17.768 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@5ccddd20
17:15:17.768 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@59d016c9
17:15:17.769 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@59d016c9
17:15:17.769 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@59d016c9
17:15:17.770 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48aaecc3
17:15:17.770 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48aaecc3
17:15:17.770 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48aaecc3
17:15:17.771 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@5c909414
17:15:17.771 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@78e117e3
17:15:17.774 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@bef2d72
17:15:17.774 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bef2d72
17:15:17.774 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fe7aac8
17:15:17.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@63021689
17:15:17.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@63021689
17:15:17.779 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@a9cd3b1
17:15:17.779 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a9cd3b1
17:15:17.780 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9225652
17:15:17.780 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6580cfdd
17:15:17.781 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@48ae9b55
17:15:17.784 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@1817d444
17:15:17.784 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1817d444
17:15:17.785 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@31368b99
17:15:17.785 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1725dc0f
17:15:17.785 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3911c2a7
17:15:17.785 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4ac3c60d
17:15:17.785 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4facf68f
17:15:17.785 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76508ed1
17:15:17.785 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41e36e46
17:15:17.785 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15c43bd9
17:15:17.793 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
17:15:17.797 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mariadb://localhost:3306/pizzadb]
17:15:17.798 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=root}
17:15:17.798 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
17:15:17.801 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
17:15:17.802 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
17:15:17.843 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
17:15:17.843 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
17:15:17.844 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
17:15:17.853 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
17:15:17.868 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
17:15:17.885 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
17:15:17.903 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@5609159b
17:15:17.903 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5609159b
17:15:17.921 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@3943a2be
17:15:17.921 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3943a2be
17:15:17.921 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
17:15:17.921 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
17:15:17.922 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
17:15:17.922 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
17:15:17.923 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
17:15:17.923 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
17:15:17.924 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
17:15:17.924 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
17:15:17.925 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
17:15:17.926 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
17:15:17.929 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
17:15:17.929 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
17:15:17.983 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
17:15:17.984 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
17:15:17.984 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
17:15:17.984 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
17:15:17.985 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
17:15:17.986 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
17:15:17.987 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
17:15:17.988 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
17:15:17.989 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
17:15:17.990 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
17:15:17.990 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
17:15:17.991 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
17:15:17.991 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
17:15:17.992 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
17:15:18.018 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
17:15:18.029 [main] DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl -
				Encountered a non-categorized annotated class [fr.pizzeria.model.CategoriePizza]; ignoring
17:15:18.053 [main] DEBUG org.hibernate.cfg.AnnotationBinder -
				Binding entity from annotated class: fr.pizzeria.model.Pizza
17:15:18.068 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
17:15:18.072 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Import with entity name Pizza
17:15:18.076 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Bind entity fr.pizzeria.model.Pizza on table pizza
17:15:18.102 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=id, insertable=true, updatable=true, unique=false}
17:15:18.104 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property id with lazy=false
17:15:18.106 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:id]
17:15:18.107 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for id
17:15:18.109 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property id
17:15:18.112 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
17:15:18.117 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
17:15:18.118 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property categorie with lazy=false
17:15:18.118 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza.categoriePizza:categorie]
17:15:18.118 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for categorie
17:15:18.118 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categorie
17:15:18.118 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categoriePizza
17:15:18.118 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=code, insertable=true, updatable=true, unique=false}
17:15:18.118 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property code with lazy=false
17:15:18.119 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:code]
17:15:18.119 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for code
17:15:18.119 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property code
17:15:18.119 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=libelle, insertable=true, updatable=true, unique=false}
17:15:18.119 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property libelle with lazy=false
17:15:18.119 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:libelle]
17:15:18.119 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for libelle
17:15:18.119 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property libelle
17:15:18.120 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=prix, insertable=true, updatable=true, unique=false}
17:15:18.120 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property prix with lazy=false
17:15:18.120 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:prix]
17:15:18.120 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for prix
17:15:18.120 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property prix
17:15:18.121 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for id
17:15:18.121 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for categorie
17:15:18.121 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for code
17:15:18.121 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for libelle
17:15:18.121 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for prix
17:15:18.122 [main] DEBUG org.hibernate.mapping.PrimaryKey -
				Forcing column [id] to be non-null as it is part of the primary key for table [pizza]
17:15:18.158 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:15:18.166 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
17:15:18.167 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
17:15:18.168 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
17:15:18.168 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
17:15:18.168 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
17:15:18.168 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
17:15:18.168 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
17:15:18.168 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
17:15:18.168 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
17:15:18.169 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
17:15:18.169 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
17:15:18.169 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
17:15:18.169 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
17:15:18.169 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
17:15:18.169 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
17:15:18.169 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
17:15:18.169 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
17:15:18.170 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
17:15:18.170 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
17:15:18.170 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
17:15:18.170 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
17:15:18.170 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
17:15:18.170 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1ef6d34c
17:15:18.170 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
17:15:18.170 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
17:15:18.170 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
17:15:18.170 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
17:15:18.170 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
17:15:18.170 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
17:15:18.170 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
17:15:18.170 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
17:15:18.170 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
17:15:18.170 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
17:15:18.171 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
17:15:18.171 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
17:15:18.171 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
17:15:18.227 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
17:15:18.228 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_161\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e48362c, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY9\Documents\Pizzeria-console-object, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_161\lib\endorsed, java.io.tmpdir=C:\Users\ETY9\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mariadb://localhost:3306/pizzadb, java.library.path=C:\Program Files\Java\jre1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_161/bin/server;C:/Program Files/Java/jre1.8.0_161/bin;C:/Program Files/Java/jre1.8.0_161/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Users\ETY9\AppData\Local\Microsoft\WindowsApps;C:\Users\ETY9\AppData\Local\atom\bin;C:\Program Files\Maven\apache-maven-3.5.3\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_161\bin;;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY9, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=ETY9, java.class.path=C:\Users\ETY9\Documents\Pizzeria-console-object\target\classes;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.junit_4.12.0.v201504281640\junit.jar;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.hamcrest.core_1.3.0.v201303031735.jar;C:\Users\ETY9\.m2\repository\commons-io\commons-io\2.6\commons-io-2.6.jar;C:\Users\ETY9\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY9\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\ETY9\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY9\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY9\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY9\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY9\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY9\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY9\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY9\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-java8\5.1.0.Final\hibernate-java8-5.1.0.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_161, hibernate.connection.url=jdbc:mariadb://localhost:3306/pizzadb, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jre1.8.0_161\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_161\lib\resources.jar;C:\Program Files\Java\jre1.8.0_161\lib\rt.jar;C:\Program Files\Java\jre1.8.0_161\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_161\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_161\lib\jce.jar;C:\Program Files\Java\jre1.8.0_161\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_161\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_161\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
17:15:18.241 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
17:15:18.241 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
17:15:18.277 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
17:15:18.277 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
17:15:18.281 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:15:18.284 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:15:18.286 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
17:15:18.286 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
17:15:18.309 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:15:18.309 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:15:18.326 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				Static SQL for entity: fr.pizzeria.model.Pizza
17:15:18.326 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Version select: select id from pizza where id =?
17:15:18.326 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Snapshot select: select pizza_.id, pizza_.categorie as categori2_0_, pizza_.code as code3_0_, pizza_.libelle as libelle4_0_, pizza_.prix as prix5_0_ from pizza pizza_ where pizza_.id=?
17:15:18.326 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Insert 0: insert into pizza (categorie, code, libelle, prix, id) values (?, ?, ?, ?, ?)
17:15:18.326 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Update 0: update pizza set categorie=?, code=?, libelle=?, prix=? where id=?
17:15:18.326 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Delete 0: delete from pizza where id=?
17:15:18.326 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Identity insert: insert into pizza (categorie, code, libelle, prix) values (?, ?, ?, ?)
17:15:18.344 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fe1ce85]
17:15:18.345 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:15:18.347 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@23aa363a]
17:15:18.350 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:15:18.350 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:15:18.350 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:15:18.350 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:15:18.350 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:15:18.362 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:15:18.367 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:15:18.370 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [NONE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:15:18.370 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c62d71]
17:15:18.370 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:15:18.371 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@47f4e407]
17:15:18.371 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:15:18.371 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:15:18.371 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:15:18.371 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:15:18.371 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:15:18.371 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:15:18.372 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:15:18.372 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:15:18.372 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48d5f34e]
17:15:18.372 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:15:18.372 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6ff65192]
17:15:18.372 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:15:18.372 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:15:18.372 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:15:18.372 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:15:18.373 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:15:18.373 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:15:18.373 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:15:18.373 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:15:18.374 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af0df05]
17:15:18.374 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:15:18.374 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@acdb094]
17:15:18.374 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:15:18.374 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:15:18.374 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:15:18.374 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:15:18.374 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:15:18.374 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:15:18.375 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:15:18.375 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_NOWAIT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:15:18.375 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b0f373b]
17:15:18.375 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:15:18.375 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4b45dcb8]
17:15:18.375 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:15:18.375 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:15:18.375 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:15:18.375 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:15:18.375 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:15:18.375 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:15:18.376 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:15:18.376 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_SKIPLOCKED]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:15:18.376 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2072acb2]
17:15:18.376 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:15:18.376 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@35a9782c]
17:15:18.376 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:15:18.376 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:15:18.376 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:15:18.376 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:15:18.376 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:15:18.376 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:15:18.377 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:15:18.377 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [FORCE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:15:18.377 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45815ffc]
17:15:18.377 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:15:18.377 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@d3957fe]
17:15:18.377 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:15:18.377 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:15:18.377 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:15:18.377 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:15:18.377 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:15:18.377 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:15:18.378 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:15:18.378 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? lock in share mode
17:15:18.379 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@299321e2]
17:15:18.379 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:15:18.379 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@64ba3208]
17:15:18.379 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:15:18.380 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:15:18.381 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:15:18.381 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:15:18.381 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:15:18.382 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:15:18.383 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:15:18.384 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_WRITE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:15:18.384 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a6944c]
17:15:18.384 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:15:18.384 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6b00f608]
17:15:18.385 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:15:18.386 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:15:18.386 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:15:18.386 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:15:18.386 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:15:18.386 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:15:18.387 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:15:18.387 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:15:18.387 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e821657]
17:15:18.387 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:15:18.387 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@71cf1b07]
17:15:18.387 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:15:18.388 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:15:18.388 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:15:18.388 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:15:18.388 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:15:18.388 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:15:18.388 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:15:18.388 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:15:18.388 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fce136b]
17:15:18.389 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:15:18.389 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@43b6123e]
17:15:18.389 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:15:18.389 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:15:18.389 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:15:18.389 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:15:18.389 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:15:18.389 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:15:18.390 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:15:18.390 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:15:18.403 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_MERGE on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:15:18.403 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_REFRESH on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:15:18.403 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
17:15:18.406 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator -
				No actions specified; doing nothing
17:15:18.406 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
17:15:18.407 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
17:15:18.409 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
17:15:18.410 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
17:15:18.410 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
17:15:18.411 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c055c54
17:15:18.413 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: 28bfc291-b80f-4ed7-b64a-365fe3c817d9 (<unnamed>)
17:15:18.413 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
17:15:18.467 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:15:18.467 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:15:18.467 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:15:18.474 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@476b0ae6
17:15:18.474 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pizza 
17:15:47.844 [pool-1-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Connection pool now considered primed; min-size will be maintained
17:15:55.480 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
17:15:55.489 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@650eab8
17:15:55.489 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
17:15:55.515 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: SELECT p FROM fr.pizzeria.model.Pizza p
17:15:55.523 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'fr'
       |     |  |  |  \-[IDENT] Node: 'pizzeria'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Pizza'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

17:15:55.523 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:15:55.551 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
17:15:55.566 [main] DEBUG o.h.h.internal.ast.tree.FromElement -
				FromClause{level=1} : fr.pizzeria.model.Pizza (p) -> pizza0_
17:15:55.568 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode -
				Resolved : p -> pizza0_.id
17:15:55.570 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select : finishing up [level=1, statement=select]
17:15:55.570 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				processQuery() :  ( SELECT ( {select clause} pizza0_.id ) ( FromClause{level=1} pizza pizza0_ ) )
17:15:55.579 [main] DEBUG o.h.h.i.ast.util.JoinProcessor -
				Using FROM fragment [pizza pizza0_]
17:15:55.579 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select >> end [level=1, statement=select]
17:15:55.581 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (pizza)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'pizza0_.id as id1_0_' {alias=p, className=fr.pizzeria.model.Pizza, tableAlias=pizza0_}
    |  \-[SQL_TOKEN] SqlFragment: 'pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[pizza0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'pizza pizza0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=pizza,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}

17:15:55.581 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:15:55.591 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				HQL: SELECT p FROM fr.pizzeria.model.Pizza p
17:15:55.591 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				SQL: select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
17:15:55.591 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:15:55.613 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
17:15:55.627 [main] DEBUG o.h.e.jdbc.spi.SqlExceptionHelper -
				could not extract ResultSet [n/a]
java.sql.SQLSyntaxErrorException: Unknown column 'pizza0_.libelle' in 'field list'
	at org.mariadb.jdbc.internal.SQLExceptionMapper.get(SQLExceptionMapper.java:138)
	at org.mariadb.jdbc.internal.SQLExceptionMapper.throwException(SQLExceptionMapper.java:106)
	at org.mariadb.jdbc.MySQLStatement.executeQueryEpilog(MySQLStatement.java:264)
	at org.mariadb.jdbc.MySQLStatement.execute(MySQLStatement.java:288)
	at org.mariadb.jdbc.MySQLStatement.executeQuery(MySQLStatement.java:302)
	at org.mariadb.jdbc.MySQLPreparedStatement.executeQuery(MySQLPreparedStatement.java:112)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:70)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2115)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1898)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1874)
	at org.hibernate.loader.Loader.doQuery(Loader.java:919)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:336)
	at org.hibernate.loader.Loader.doList(Loader.java:2610)
	at org.hibernate.loader.Loader.doList(Loader.java:2593)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2422)
	at org.hibernate.loader.Loader.list(Loader.java:2417)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:501)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:371)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1339)
	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:87)
	at org.hibernate.jpa.internal.QueryImpl.list(QueryImpl.java:606)
	at org.hibernate.jpa.internal.QueryImpl.getResultList(QueryImpl.java:483)
	at fr.pizzeria.dao.PizzaJpaBase.findAllPizzas(PizzaJpaBase.java:21)
	at fr.pizzeria.console.PizzeriaAdminConsoleApp.main(PizzeriaAdminConsoleApp.java:41)
Caused by: org.mariadb.jdbc.internal.common.QueryException: Unknown column 'pizza0_.libelle' in 'field list'
	at org.mariadb.jdbc.internal.mysql.MySQLProtocol.getResult(MySQLProtocol.java:942)
	at org.mariadb.jdbc.internal.mysql.MySQLProtocol.executeQuery(MySQLProtocol.java:991)
	at org.mariadb.jdbc.MySQLStatement.execute(MySQLStatement.java:281)
	... 21 common frames omitted
17:15:55.627 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper -
				SQL Error: 1054, SQLState: 42S22
17:15:55.627 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper -
				Unknown column 'pizza0_.libelle' in 'field list'
17:15:55.629 [main] DEBUG o.h.j.spi.AbstractEntityManagerImpl -
				Mark transaction for rollback
17:16:17.845 [pool-1-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Adding 1 Connections to the pool
17:22:57.230 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
17:22:57.274 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
17:22:57.322 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
17:22:57.322 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pizza]
17:22:57.324 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
17:22:57.336 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY9/Documents/Pizzeria-console-object/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mariadb://localhost:3306/pizzadb
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
17:22:57.349 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
17:22:57.351 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
17:22:57.359 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
17:22:57.359 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
17:22:57.426 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
17:22:57.428 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
17:22:57.429 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
17:22:57.438 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
17:22:57.459 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
17:22:57.466 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
17:22:57.563 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
17:22:57.564 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
17:22:57.564 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37e547da
17:22:57.565 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15761df8
17:22:57.568 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@71c8becc
17:22:57.569 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@3bd40a57
17:22:57.571 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
17:22:57.571 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
17:22:57.572 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78047b92
17:22:57.573 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@4387b79e
17:22:57.574 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@4387b79e
17:22:57.574 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4387b79e
17:22:57.575 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
17:22:57.576 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
17:22:57.576 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@add0edd
17:22:57.577 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@1d76aeea
17:22:57.578 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@1d76aeea
17:22:57.578 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d76aeea
17:22:57.579 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
17:22:57.579 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
17:22:57.579 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@197d671
17:22:57.581 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
17:22:57.581 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
17:22:57.581 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7995092a
17:22:57.582 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
17:22:57.583 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
17:22:57.583 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23f7d05d
17:22:57.585 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f1302d6
17:22:57.586 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f1302d6
17:22:57.587 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@184cf7cf
17:22:57.587 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@184cf7cf
17:22:57.588 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@38c5cc4c
17:22:57.588 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@38c5cc4c
17:22:57.590 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ec756bd
17:22:57.590 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d121db3
17:22:57.591 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@12d4bf7e
17:22:57.591 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@12d4bf7e
17:22:57.593 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@2928854b
17:22:57.593 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@2928854b
17:22:57.594 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@124c278f
17:22:57.594 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@124c278f
17:22:57.595 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@229d10bd
17:22:57.595 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@229d10bd
17:22:57.595 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@229d10bd
17:22:57.596 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4ccb53
17:22:57.597 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@45b9a632
17:22:57.597 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@45b9a632
17:22:57.597 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@45b9a632
17:22:57.598 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b26e945
17:22:57.599 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@3c9d0b9d
17:22:57.599 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c9d0b9d
17:22:57.599 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@d4342c2
17:22:57.600 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d4342c2
17:22:57.601 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@12b0404f
17:22:57.601 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12b0404f
17:22:57.602 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@647fd8ce
17:22:57.602 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@647fd8ce
17:22:57.603 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1677d1
17:22:57.603 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1677d1
17:22:57.604 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e316c74
17:22:57.605 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@7f010382
17:22:57.605 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@7f010382
17:22:57.605 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@7f010382
17:22:57.606 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:22:57.606 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:22:57.606 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:22:57.606 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@5ccddd20
17:22:57.607 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@59d016c9
17:22:57.607 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@59d016c9
17:22:57.607 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@59d016c9
17:22:57.608 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48aaecc3
17:22:57.608 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48aaecc3
17:22:57.608 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48aaecc3
17:22:57.609 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@5c909414
17:22:57.609 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@78e117e3
17:22:57.612 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@bef2d72
17:22:57.612 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bef2d72
17:22:57.612 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fe7aac8
17:22:57.615 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@63021689
17:22:57.615 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@63021689
17:22:57.618 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@a9cd3b1
17:22:57.618 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a9cd3b1
17:22:57.618 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9225652
17:22:57.619 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6580cfdd
17:22:57.619 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@48ae9b55
17:22:57.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@1817d444
17:22:57.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1817d444
17:22:57.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@31368b99
17:22:57.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1725dc0f
17:22:57.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3911c2a7
17:22:57.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4ac3c60d
17:22:57.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4facf68f
17:22:57.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76508ed1
17:22:57.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41e36e46
17:22:57.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15c43bd9
17:22:57.630 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
17:22:57.635 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mariadb://localhost:3306/pizzadb]
17:22:57.635 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=root}
17:22:57.635 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
17:22:57.638 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
17:22:57.638 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
17:22:57.680 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
17:22:57.680 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
17:22:57.681 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
17:22:57.692 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
17:22:57.705 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
17:22:57.721 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
17:22:57.741 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@5609159b
17:22:57.741 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5609159b
17:22:57.763 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@3943a2be
17:22:57.763 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3943a2be
17:22:57.764 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
17:22:57.764 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
17:22:57.765 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
17:22:57.765 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
17:22:57.766 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
17:22:57.767 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
17:22:57.768 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
17:22:57.768 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
17:22:57.769 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
17:22:57.772 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
17:22:57.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
17:22:57.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
17:22:57.844 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
17:22:57.845 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
17:22:57.846 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
17:22:57.846 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
17:22:57.846 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
17:22:57.847 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
17:22:57.848 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
17:22:57.849 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
17:22:57.850 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
17:22:57.851 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
17:22:57.852 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
17:22:57.852 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
17:22:57.853 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
17:22:57.854 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
17:22:57.886 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
17:22:57.898 [main] DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl -
				Encountered a non-categorized annotated class [fr.pizzeria.model.CategoriePizza]; ignoring
17:22:57.924 [main] DEBUG org.hibernate.cfg.AnnotationBinder -
				Binding entity from annotated class: fr.pizzeria.model.Pizza
17:22:57.939 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
17:22:57.944 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Import with entity name Pizza
17:22:57.947 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Bind entity fr.pizzeria.model.Pizza on table pizza
17:22:57.973 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=id, insertable=true, updatable=true, unique=false}
17:22:57.975 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property id with lazy=false
17:22:57.977 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:id]
17:22:57.978 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for id
17:22:57.980 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property id
17:22:57.983 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
17:22:57.987 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
17:22:57.987 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property categorie with lazy=false
17:22:57.987 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza.categoriePizza:categorie]
17:22:57.987 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for categorie
17:22:57.987 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categorie
17:22:57.987 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categoriePizza
17:22:57.988 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=code, insertable=true, updatable=true, unique=false}
17:22:57.988 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property code with lazy=false
17:22:57.989 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:code]
17:22:57.989 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for code
17:22:57.989 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property code
17:22:57.989 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=libelle, insertable=true, updatable=true, unique=false}
17:22:57.989 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property libelle with lazy=false
17:22:57.989 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:libelle]
17:22:57.989 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for libelle
17:22:57.990 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property libelle
17:22:57.990 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=prix, insertable=true, updatable=true, unique=false}
17:22:57.990 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property prix with lazy=false
17:22:57.990 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:prix]
17:22:57.990 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for prix
17:22:57.990 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property prix
17:22:57.991 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for id
17:22:57.992 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for categorie
17:22:57.992 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for code
17:22:57.992 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for libelle
17:22:57.992 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for prix
17:22:57.993 [main] DEBUG org.hibernate.mapping.PrimaryKey -
				Forcing column [id] to be non-null as it is part of the primary key for table [pizza]
17:22:58.023 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:22:58.030 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
17:22:58.031 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
17:22:58.031 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
17:22:58.031 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
17:22:58.031 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
17:22:58.031 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
17:22:58.031 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
17:22:58.031 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
17:22:58.031 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1ef6d34c
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
17:22:58.032 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
17:22:58.033 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
17:22:58.033 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
17:22:58.033 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
17:22:58.033 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
17:22:58.033 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
17:22:58.079 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
17:22:58.079 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_161\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e48362c, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY9\Documents\Pizzeria-console-object, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_161\lib\endorsed, java.io.tmpdir=C:\Users\ETY9\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mariadb://localhost:3306/pizzadb, java.library.path=C:\Program Files\Java\jre1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_161/bin/server;C:/Program Files/Java/jre1.8.0_161/bin;C:/Program Files/Java/jre1.8.0_161/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Users\ETY9\AppData\Local\Microsoft\WindowsApps;C:\Users\ETY9\AppData\Local\atom\bin;C:\Program Files\Maven\apache-maven-3.5.3\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_161\bin;;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY9, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=ETY9, java.class.path=C:\Users\ETY9\Documents\Pizzeria-console-object\target\classes;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.junit_4.12.0.v201504281640\junit.jar;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.hamcrest.core_1.3.0.v201303031735.jar;C:\Users\ETY9\.m2\repository\commons-io\commons-io\2.6\commons-io-2.6.jar;C:\Users\ETY9\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY9\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\ETY9\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY9\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY9\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY9\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY9\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY9\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY9\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY9\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-java8\5.1.0.Final\hibernate-java8-5.1.0.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_161, hibernate.connection.url=jdbc:mariadb://localhost:3306/pizzadb, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jre1.8.0_161\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_161\lib\resources.jar;C:\Program Files\Java\jre1.8.0_161\lib\rt.jar;C:\Program Files\Java\jre1.8.0_161\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_161\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_161\lib\jce.jar;C:\Program Files\Java\jre1.8.0_161\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_161\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_161\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
17:22:58.089 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
17:22:58.090 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
17:22:58.127 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
17:22:58.127 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
17:22:58.132 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:22:58.134 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:22:58.135 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
17:22:58.135 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
17:22:58.160 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:22:58.160 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:22:58.177 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				Static SQL for entity: fr.pizzeria.model.Pizza
17:22:58.178 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Version select: select id from pizza where id =?
17:22:58.178 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Snapshot select: select pizza_.id, pizza_.categorie as categori2_0_, pizza_.code as code3_0_, pizza_.libelle as libelle4_0_, pizza_.prix as prix5_0_ from pizza pizza_ where pizza_.id=?
17:22:58.178 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Insert 0: insert into pizza (categorie, code, libelle, prix, id) values (?, ?, ?, ?, ?)
17:22:58.178 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Update 0: update pizza set categorie=?, code=?, libelle=?, prix=? where id=?
17:22:58.178 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Delete 0: delete from pizza where id=?
17:22:58.178 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Identity insert: insert into pizza (categorie, code, libelle, prix) values (?, ?, ?, ?)
17:22:58.199 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fe1ce85]
17:22:58.200 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:22:58.201 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@23aa363a]
17:22:58.204 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:22:58.205 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:22:58.205 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:22:58.205 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:22:58.205 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:22:58.218 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:22:58.225 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:22:58.228 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [NONE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:22:58.228 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c62d71]
17:22:58.228 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:22:58.228 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@47f4e407]
17:22:58.228 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:22:58.229 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:22:58.229 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:22:58.229 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:22:58.229 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:22:58.229 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:22:58.230 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:22:58.230 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:22:58.230 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48d5f34e]
17:22:58.231 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:22:58.231 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6ff65192]
17:22:58.231 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:22:58.231 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:22:58.231 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:22:58.231 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:22:58.231 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:22:58.232 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:22:58.232 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:22:58.232 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:22:58.233 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af0df05]
17:22:58.233 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:22:58.233 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@acdb094]
17:22:58.233 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:22:58.233 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:22:58.234 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:22:58.234 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:22:58.234 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:22:58.234 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:22:58.234 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:22:58.234 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_NOWAIT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:22:58.234 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b0f373b]
17:22:58.234 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:22:58.235 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4b45dcb8]
17:22:58.235 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:22:58.235 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:22:58.235 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:22:58.235 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:22:58.235 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:22:58.235 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:22:58.235 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:22:58.236 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_SKIPLOCKED]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:22:58.236 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2072acb2]
17:22:58.236 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:22:58.236 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@35a9782c]
17:22:58.236 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:22:58.236 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:22:58.236 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:22:58.236 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:22:58.236 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:22:58.236 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:22:58.237 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:22:58.237 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [FORCE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:22:58.237 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45815ffc]
17:22:58.237 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:22:58.237 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@d3957fe]
17:22:58.237 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:22:58.237 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:22:58.237 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:22:58.238 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:22:58.238 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:22:58.238 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:22:58.238 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:22:58.239 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? lock in share mode
17:22:58.239 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@299321e2]
17:22:58.239 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:22:58.239 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@64ba3208]
17:22:58.240 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:22:58.240 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:22:58.240 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:22:58.240 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:22:58.240 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:22:58.241 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:22:58.241 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:22:58.241 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_WRITE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:22:58.241 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a6944c]
17:22:58.242 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:22:58.242 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6b00f608]
17:22:58.242 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:22:58.242 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:22:58.242 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:22:58.242 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:22:58.242 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:22:58.242 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:22:58.243 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:22:58.243 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:22:58.243 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e821657]
17:22:58.243 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:22:58.243 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@71cf1b07]
17:22:58.243 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:22:58.244 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:22:58.244 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:22:58.244 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:22:58.244 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:22:58.244 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:22:58.244 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:22:58.245 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:22:58.245 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fce136b]
17:22:58.245 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:22:58.245 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@43b6123e]
17:22:58.245 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:22:58.245 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:22:58.245 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:22:58.246 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:22:58.246 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:22:58.246 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:22:58.247 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:22:58.247 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:22:58.260 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_MERGE on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:22:58.261 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_REFRESH on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:22:58.261 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
17:22:58.264 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator -
				No actions specified; doing nothing
17:22:58.264 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
17:22:58.264 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
17:22:58.266 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
17:22:58.267 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
17:22:58.267 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
17:22:58.269 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c055c54
17:22:58.271 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: a8e0c28f-f635-42c0-8547-4229764c5831 (<unnamed>)
17:22:58.271 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
17:22:58.326 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:22:58.327 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:22:58.327 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:22:58.336 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@476b0ae6
17:22:58.336 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pizza 
17:23:00.477 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
17:23:00.486 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@650eab8
17:23:00.486 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
17:23:00.511 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: SELECT p FROM fr.pizzeria.model.Pizza p
17:23:00.519 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'fr'
       |     |  |  |  \-[IDENT] Node: 'pizzeria'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Pizza'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

17:23:00.519 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:23:00.543 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
17:23:00.559 [main] DEBUG o.h.h.internal.ast.tree.FromElement -
				FromClause{level=1} : fr.pizzeria.model.Pizza (p) -> pizza0_
17:23:00.560 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode -
				Resolved : p -> pizza0_.id
17:23:00.562 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select : finishing up [level=1, statement=select]
17:23:00.562 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				processQuery() :  ( SELECT ( {select clause} pizza0_.id ) ( FromClause{level=1} pizza pizza0_ ) )
17:23:00.573 [main] DEBUG o.h.h.i.ast.util.JoinProcessor -
				Using FROM fragment [pizza pizza0_]
17:23:00.574 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select >> end [level=1, statement=select]
17:23:00.575 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (pizza)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'pizza0_.id as id1_0_' {alias=p, className=fr.pizzeria.model.Pizza, tableAlias=pizza0_}
    |  \-[SQL_TOKEN] SqlFragment: 'pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[pizza0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'pizza pizza0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=pizza,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}

17:23:00.575 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:23:00.582 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				HQL: SELECT p FROM fr.pizzeria.model.Pizza p
17:23:00.582 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				SQL: select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
17:23:00.582 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:23:00.600 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
17:23:00.611 [main] DEBUG o.h.e.jdbc.spi.SqlExceptionHelper -
				could not extract ResultSet [n/a]
java.sql.SQLSyntaxErrorException: Unknown column 'pizza0_.libelle' in 'field list'
	at org.mariadb.jdbc.internal.SQLExceptionMapper.get(SQLExceptionMapper.java:138)
	at org.mariadb.jdbc.internal.SQLExceptionMapper.throwException(SQLExceptionMapper.java:106)
	at org.mariadb.jdbc.MySQLStatement.executeQueryEpilog(MySQLStatement.java:264)
	at org.mariadb.jdbc.MySQLStatement.execute(MySQLStatement.java:288)
	at org.mariadb.jdbc.MySQLStatement.executeQuery(MySQLStatement.java:302)
	at org.mariadb.jdbc.MySQLPreparedStatement.executeQuery(MySQLPreparedStatement.java:112)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:70)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2115)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1898)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1874)
	at org.hibernate.loader.Loader.doQuery(Loader.java:919)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:336)
	at org.hibernate.loader.Loader.doList(Loader.java:2610)
	at org.hibernate.loader.Loader.doList(Loader.java:2593)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2422)
	at org.hibernate.loader.Loader.list(Loader.java:2417)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:501)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:371)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1339)
	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:87)
	at org.hibernate.jpa.internal.QueryImpl.list(QueryImpl.java:606)
	at org.hibernate.jpa.internal.QueryImpl.getResultList(QueryImpl.java:483)
	at fr.pizzeria.dao.PizzaJpaBase.findAllPizzas(PizzaJpaBase.java:21)
	at fr.pizzeria.console.PizzeriaAdminConsoleApp.main(PizzeriaAdminConsoleApp.java:41)
Caused by: org.mariadb.jdbc.internal.common.QueryException: Unknown column 'pizza0_.libelle' in 'field list'
	at org.mariadb.jdbc.internal.mysql.MySQLProtocol.getResult(MySQLProtocol.java:942)
	at org.mariadb.jdbc.internal.mysql.MySQLProtocol.executeQuery(MySQLProtocol.java:991)
	at org.mariadb.jdbc.MySQLStatement.execute(MySQLStatement.java:281)
	... 21 common frames omitted
17:23:00.612 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper -
				SQL Error: 1054, SQLState: 42S22
17:23:00.612 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper -
				Unknown column 'pizza0_.libelle' in 'field list'
17:23:00.613 [main] DEBUG o.h.j.spi.AbstractEntityManagerImpl -
				Mark transaction for rollback
17:29:29.810 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
17:29:29.852 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
17:29:29.902 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
17:29:29.902 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pizza]
17:29:29.904 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
17:29:29.915 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY9/Documents/Pizzeria-console-object/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mariadb://localhost:3306/pizzadb
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
17:29:29.927 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
17:29:29.928 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
17:29:29.938 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
17:29:29.939 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
17:29:30.019 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
17:29:30.020 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
17:29:30.022 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
17:29:30.035 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
17:29:30.058 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
17:29:30.064 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
17:29:30.162 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@5db45159
17:29:30.163 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@5db45159
17:29:30.163 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5db45159
17:29:30.164 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@327b636c
17:29:30.167 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@1a0dcaa
17:29:30.167 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@d83da2e
17:29:30.169 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@79ca92b9
17:29:30.169 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@79ca92b9
17:29:30.170 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@79ca92b9
17:29:30.170 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@7fc229ab
17:29:30.171 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@7fc229ab
17:29:30.171 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7fc229ab
17:29:30.172 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@7ea37dbf
17:29:30.172 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@7ea37dbf
17:29:30.172 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ea37dbf
17:29:30.173 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@10db82ae
17:29:30.173 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@10db82ae
17:29:30.173 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10db82ae
17:29:30.175 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@79ad8b2f
17:29:30.175 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@79ad8b2f
17:29:30.175 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@79ad8b2f
17:29:30.176 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@f8c1ddd
17:29:30.177 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@f8c1ddd
17:29:30.177 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f8c1ddd
17:29:30.178 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@7d3a22a9
17:29:30.178 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@7d3a22a9
17:29:30.178 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d3a22a9
17:29:30.180 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@23529fee
17:29:30.181 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@23529fee
17:29:30.182 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5bfa9431
17:29:30.182 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5bfa9431
17:29:30.183 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@78e94dcf
17:29:30.184 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@78e94dcf
17:29:30.184 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@60dcc9fe
17:29:30.185 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11a9e7c8
17:29:30.186 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@7b227d8d
17:29:30.186 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@7b227d8d
17:29:30.188 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@29176cc1
17:29:30.188 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@29176cc1
17:29:30.189 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@77167fb7
17:29:30.189 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77167fb7
17:29:30.190 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@33afa13b
17:29:30.190 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@33afa13b
17:29:30.190 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@33afa13b
17:29:30.191 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@56a6d5a6
17:29:30.192 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@4df50bcc
17:29:30.192 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4df50bcc
17:29:30.193 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4df50bcc
17:29:30.193 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@54c562f7
17:29:30.194 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@2f112965
17:29:30.194 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f112965
17:29:30.195 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@163e4e87
17:29:30.196 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@163e4e87
17:29:30.196 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@5276e6b0
17:29:30.196 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5276e6b0
17:29:30.197 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@78aab498
17:29:30.197 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78aab498
17:29:30.199 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6ac13091
17:29:30.199 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6ac13091
17:29:30.200 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@75329a49
17:29:30.201 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@2b6faea6
17:29:30.201 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@2b6faea6
17:29:30.201 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@2b6faea6
17:29:30.202 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@56528192
17:29:30.202 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@56528192
17:29:30.202 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@56528192
17:29:30.202 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@1f3f4916
17:29:30.203 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@20d28811
17:29:30.203 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@20d28811
17:29:30.203 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@20d28811
17:29:30.204 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7adda9cc
17:29:30.204 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7adda9cc
17:29:30.204 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7adda9cc
17:29:30.205 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@65466a6a
17:29:30.205 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@4386f16
17:29:30.208 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@22a637e7
17:29:30.208 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@22a637e7
17:29:30.208 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@659a969b
17:29:30.210 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@3e92efc3
17:29:30.211 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e92efc3
17:29:30.213 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@64cd705f
17:29:30.213 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64cd705f
17:29:30.213 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6a400542
17:29:30.213 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@63355449
17:29:30.214 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@21de60b4
17:29:30.217 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@50b472aa
17:29:30.217 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@50b472aa
17:29:30.217 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3911c2a7
17:29:30.217 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4ac3c60d
17:29:30.217 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4facf68f
17:29:30.217 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@76508ed1
17:29:30.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@41e36e46
17:29:30.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15c43bd9
17:29:30.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3d74bf60
17:29:30.218 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4f209819
17:29:30.225 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
17:29:30.230 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mariadb://localhost:3306/pizzadb]
17:29:30.230 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=root}
17:29:30.230 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
17:29:30.233 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
17:29:30.234 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
17:29:30.275 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
17:29:30.275 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
17:29:30.276 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
17:29:30.285 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
17:29:30.296 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
17:29:30.311 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
17:29:30.328 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@17a7f733
17:29:30.329 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17a7f733
17:29:30.351 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@157853da
17:29:30.351 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@157853da
17:29:30.352 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3cc1435c
17:29:30.352 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3cc1435c
17:29:30.352 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f16132a
17:29:30.352 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f16132a
17:29:30.353 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5552768b
17:29:30.354 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5552768b
17:29:30.354 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@55f616cf
17:29:30.354 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@55f616cf
17:29:30.355 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1329eff
17:29:30.355 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1329eff
17:29:30.357 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f381794
17:29:30.357 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f381794
17:29:30.416 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
17:29:30.417 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
17:29:30.417 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
17:29:30.417 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
17:29:30.418 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
17:29:30.418 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
17:29:30.419 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
17:29:30.420 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
17:29:30.421 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
17:29:30.421 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
17:29:30.422 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
17:29:30.422 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
17:29:30.422 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
17:29:30.423 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
17:29:30.454 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
17:29:30.465 [main] DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl -
				Encountered a non-categorized annotated class [fr.pizzeria.model.CategoriePizza]; ignoring
17:29:30.492 [main] DEBUG org.hibernate.cfg.AnnotationBinder -
				Binding entity from annotated class: fr.pizzeria.model.Pizza
17:29:30.508 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
17:29:30.513 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Import with entity name Pizza
17:29:30.515 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Bind entity fr.pizzeria.model.Pizza on table pizza
17:29:30.540 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=id, insertable=true, updatable=true, unique=false}
17:29:30.542 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property id with lazy=false
17:29:30.543 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:id]
17:29:30.545 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for id
17:29:30.546 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property id
17:29:30.550 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
17:29:30.554 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
17:29:30.554 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property categorie with lazy=false
17:29:30.554 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza.categoriePizza:categorie]
17:29:30.554 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for categorie
17:29:30.555 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categorie
17:29:30.555 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categoriePizza
17:29:30.555 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=code, insertable=true, updatable=true, unique=false}
17:29:30.556 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property code with lazy=false
17:29:30.556 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:code]
17:29:30.556 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for code
17:29:30.556 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property code
17:29:30.556 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=libelle, insertable=true, updatable=true, unique=false}
17:29:30.556 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property libelle with lazy=false
17:29:30.556 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:libelle]
17:29:30.556 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for libelle
17:29:30.557 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property libelle
17:29:30.557 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=prix, insertable=true, updatable=true, unique=false}
17:29:30.557 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property prix with lazy=false
17:29:30.557 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:prix]
17:29:30.557 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for prix
17:29:30.557 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property prix
17:29:30.559 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for id
17:29:30.559 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for categorie
17:29:30.559 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for code
17:29:30.559 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for libelle
17:29:30.559 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for prix
17:29:30.560 [main] DEBUG org.hibernate.mapping.PrimaryKey -
				Forcing column [id] to be non-null as it is part of the primary key for table [pizza]
17:29:30.590 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:29:30.598 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
17:29:30.599 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
17:29:30.600 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
17:29:30.600 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
17:29:30.600 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
17:29:30.600 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
17:29:30.600 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
17:29:30.600 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
17:29:30.600 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
17:29:30.600 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
17:29:30.600 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
17:29:30.600 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
17:29:30.600 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
17:29:30.600 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@11bb571c
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
17:29:30.601 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
17:29:30.645 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
17:29:30.645 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_161\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@be68757, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY9\Documents\Pizzeria-console-object, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_161\lib\endorsed, java.io.tmpdir=C:\Users\ETY9\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mariadb://localhost:3306/pizzadb, java.library.path=C:\Program Files\Java\jre1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_161/bin/server;C:/Program Files/Java/jre1.8.0_161/bin;C:/Program Files/Java/jre1.8.0_161/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Users\ETY9\AppData\Local\Microsoft\WindowsApps;C:\Users\ETY9\AppData\Local\atom\bin;C:\Program Files\Maven\apache-maven-3.5.3\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_161\bin;;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY9, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=ETY9, java.class.path=C:\Users\ETY9\Documents\Pizzeria-console-object\target\classes;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.junit_4.12.0.v201504281640\junit.jar;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.hamcrest.core_1.3.0.v201303031735.jar;C:\Users\ETY9\.m2\repository\commons-io\commons-io\2.6\commons-io-2.6.jar;C:\Users\ETY9\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY9\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\ETY9\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY9\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY9\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY9\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY9\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY9\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY9\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY9\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-java8\5.1.0.Final\hibernate-java8-5.1.0.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_161, hibernate.connection.url=jdbc:mariadb://localhost:3306/pizzadb, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jre1.8.0_161\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_161\lib\resources.jar;C:\Program Files\Java\jre1.8.0_161\lib\rt.jar;C:\Program Files\Java\jre1.8.0_161\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_161\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_161\lib\jce.jar;C:\Program Files\Java\jre1.8.0_161\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_161\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_161\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
17:29:30.656 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
17:29:30.656 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
17:29:30.698 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
17:29:30.698 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
17:29:30.702 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:29:30.703 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:29:30.705 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
17:29:30.705 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
17:29:30.728 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:29:30.729 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:29:30.742 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				Static SQL for entity: fr.pizzeria.model.Pizza
17:29:30.742 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Version select: select id from pizza where id =?
17:29:30.742 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Snapshot select: select pizza_.id, pizza_.categorie as categori2_0_, pizza_.code as code3_0_, pizza_.libelle as libelle4_0_, pizza_.prix as prix5_0_ from pizza pizza_ where pizza_.id=?
17:29:30.743 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Insert 0: insert into pizza (categorie, code, libelle, prix, id) values (?, ?, ?, ?, ?)
17:29:30.743 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Update 0: update pizza set categorie=?, code=?, libelle=?, prix=? where id=?
17:29:30.743 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Delete 0: delete from pizza where id=?
17:29:30.743 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Identity insert: insert into pizza (categorie, code, libelle, prix) values (?, ?, ?, ?)
17:29:30.764 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37091312]
17:29:30.766 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:29:30.768 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@55dfebeb]
17:29:30.772 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:29:30.774 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:29:30.774 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:29:30.774 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:29:30.774 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:29:30.792 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:29:30.798 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:29:30.801 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [NONE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:29:30.801 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47f4e407]
17:29:30.801 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:29:30.801 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@48d5f34e]
17:29:30.801 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:29:30.801 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:29:30.801 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:29:30.801 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:29:30.801 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:29:30.801 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:29:30.802 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:29:30.802 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:29:30.802 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ff65192]
17:29:30.802 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:29:30.802 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4af0df05]
17:29:30.802 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:29:30.802 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:29:30.802 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:29:30.802 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:29:30.802 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:29:30.803 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:29:30.803 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:29:30.803 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:29:30.803 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@acdb094]
17:29:30.803 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:29:30.803 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2b0f373b]
17:29:30.803 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:29:30.803 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:29:30.804 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:29:30.804 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:29:30.804 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:29:30.804 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:29:30.804 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:29:30.804 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_NOWAIT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:29:30.805 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b45dcb8]
17:29:30.805 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:29:30.805 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2072acb2]
17:29:30.805 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:29:30.805 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:29:30.805 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:29:30.805 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:29:30.805 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:29:30.805 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:29:30.806 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:29:30.806 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_SKIPLOCKED]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:29:30.806 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35a9782c]
17:29:30.806 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:29:30.806 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@45815ffc]
17:29:30.806 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:29:30.806 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:29:30.806 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:29:30.807 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:29:30.807 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:29:30.807 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:29:30.807 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:29:30.808 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [FORCE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:29:30.808 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d3957fe]
17:29:30.808 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:29:30.808 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@299321e2]
17:29:30.808 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:29:30.808 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:29:30.808 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:29:30.808 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:29:30.808 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:29:30.808 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:29:30.809 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:29:30.809 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? lock in share mode
17:29:30.809 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64ba3208]
17:29:30.809 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:29:30.809 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@25a6944c]
17:29:30.809 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:29:30.810 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:29:30.810 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:29:30.810 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:29:30.810 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:29:30.810 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:29:30.811 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:29:30.811 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_WRITE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:29:30.811 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b00f608]
17:29:30.811 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:29:30.812 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3e821657]
17:29:30.812 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:29:30.812 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:29:30.812 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:29:30.812 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:29:30.812 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:29:30.812 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:29:30.812 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:29:30.813 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:29:30.813 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71cf1b07]
17:29:30.813 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:29:30.813 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4fce136b]
17:29:30.813 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:29:30.813 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:29:30.813 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:29:30.813 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:29:30.813 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:29:30.813 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:29:30.814 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:29:30.814 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:29:30.814 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43b6123e]
17:29:30.814 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:29:30.814 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@19648c40]
17:29:30.814 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:29:30.814 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:29:30.814 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:29:30.814 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:29:30.814 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:29:30.815 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:29:30.816 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:29:30.816 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:29:30.828 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_MERGE on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:29:30.828 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_REFRESH on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:29:30.828 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
17:29:30.831 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator -
				No actions specified; doing nothing
17:29:30.831 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
17:29:30.832 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
17:29:30.834 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
17:29:30.834 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
17:29:30.835 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
17:29:30.836 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@35e5d0e5
17:29:30.837 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: 3e2e23c1-8bdf-4258-97df-c2b78a2b632b (<unnamed>)
17:29:30.837 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
17:29:30.898 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:29:30.898 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:29:30.898 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:29:30.905 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@655f7ea
17:29:30.906 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pizza 
17:29:33.368 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
17:29:33.378 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@650eab8
17:29:33.379 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
17:29:33.404 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: SELECT p FROM fr.pizzeria.model.Pizza p
17:29:33.410 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'fr'
       |     |  |  |  \-[IDENT] Node: 'pizzeria'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Pizza'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

17:29:33.411 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:29:33.441 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
17:29:33.458 [main] DEBUG o.h.h.internal.ast.tree.FromElement -
				FromClause{level=1} : fr.pizzeria.model.Pizza (p) -> pizza0_
17:29:33.459 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode -
				Resolved : p -> pizza0_.id
17:29:33.462 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select : finishing up [level=1, statement=select]
17:29:33.462 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				processQuery() :  ( SELECT ( {select clause} pizza0_.id ) ( FromClause{level=1} pizza pizza0_ ) )
17:29:33.471 [main] DEBUG o.h.h.i.ast.util.JoinProcessor -
				Using FROM fragment [pizza pizza0_]
17:29:33.472 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select >> end [level=1, statement=select]
17:29:33.472 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (pizza)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'pizza0_.id as id1_0_' {alias=p, className=fr.pizzeria.model.Pizza, tableAlias=pizza0_}
    |  \-[SQL_TOKEN] SqlFragment: 'pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[pizza0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'pizza pizza0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=pizza,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}

17:29:33.472 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:29:33.481 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				HQL: SELECT p FROM fr.pizzeria.model.Pizza p
17:29:33.481 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				SQL: select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
17:29:33.481 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:29:33.502 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
17:29:33.518 [main] DEBUG o.h.e.jdbc.spi.SqlExceptionHelper -
				could not extract ResultSet [n/a]
java.sql.SQLSyntaxErrorException: Unknown column 'pizza0_.libelle' in 'field list'
	at org.mariadb.jdbc.internal.SQLExceptionMapper.get(SQLExceptionMapper.java:138)
	at org.mariadb.jdbc.internal.SQLExceptionMapper.throwException(SQLExceptionMapper.java:106)
	at org.mariadb.jdbc.MySQLStatement.executeQueryEpilog(MySQLStatement.java:264)
	at org.mariadb.jdbc.MySQLStatement.execute(MySQLStatement.java:288)
	at org.mariadb.jdbc.MySQLStatement.executeQuery(MySQLStatement.java:302)
	at org.mariadb.jdbc.MySQLPreparedStatement.executeQuery(MySQLPreparedStatement.java:112)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:70)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2115)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1898)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1874)
	at org.hibernate.loader.Loader.doQuery(Loader.java:919)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:336)
	at org.hibernate.loader.Loader.doList(Loader.java:2610)
	at org.hibernate.loader.Loader.doList(Loader.java:2593)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2422)
	at org.hibernate.loader.Loader.list(Loader.java:2417)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:501)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:371)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1339)
	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:87)
	at org.hibernate.jpa.internal.QueryImpl.list(QueryImpl.java:606)
	at org.hibernate.jpa.internal.QueryImpl.getResultList(QueryImpl.java:483)
	at fr.pizzeria.dao.PizzaJpaBase.findAllPizzas(PizzaJpaBase.java:22)
	at fr.pizzeria.console.PizzeriaAdminConsoleApp.main(PizzeriaAdminConsoleApp.java:41)
Caused by: org.mariadb.jdbc.internal.common.QueryException: Unknown column 'pizza0_.libelle' in 'field list'
	at org.mariadb.jdbc.internal.mysql.MySQLProtocol.getResult(MySQLProtocol.java:942)
	at org.mariadb.jdbc.internal.mysql.MySQLProtocol.executeQuery(MySQLProtocol.java:991)
	at org.mariadb.jdbc.MySQLStatement.execute(MySQLStatement.java:281)
	... 21 common frames omitted
17:29:33.518 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper -
				SQL Error: 1054, SQLState: 42S22
17:29:33.519 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper -
				Unknown column 'pizza0_.libelle' in 'field list'
17:29:33.520 [main] DEBUG o.h.j.spi.AbstractEntityManagerImpl -
				Mark transaction for rollback
17:31:19.803 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
17:31:19.841 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
17:31:19.896 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
17:31:19.896 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pizza]
17:31:19.898 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
17:31:19.910 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY9/Documents/Pizzeria-console-object/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mariadb://localhost:3306/pizzadb
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
17:31:19.921 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
17:31:19.922 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
17:31:19.932 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
17:31:19.932 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
17:31:19.987 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
17:31:19.988 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
17:31:19.989 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
17:31:19.998 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
17:31:20.019 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
17:31:20.026 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
17:31:20.122 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
17:31:20.122 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
17:31:20.123 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37e547da
17:31:20.124 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15761df8
17:31:20.124 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@71c8becc
17:31:20.125 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@3bd40a57
17:31:20.126 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
17:31:20.127 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
17:31:20.128 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78047b92
17:31:20.130 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@4387b79e
17:31:20.130 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@4387b79e
17:31:20.130 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4387b79e
17:31:20.131 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
17:31:20.132 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
17:31:20.132 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@add0edd
17:31:20.133 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@1d76aeea
17:31:20.133 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@1d76aeea
17:31:20.133 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d76aeea
17:31:20.134 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
17:31:20.135 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
17:31:20.135 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@197d671
17:31:20.136 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
17:31:20.136 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
17:31:20.136 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7995092a
17:31:20.137 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
17:31:20.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
17:31:20.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23f7d05d
17:31:20.140 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f1302d6
17:31:20.140 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f1302d6
17:31:20.141 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@184cf7cf
17:31:20.141 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@184cf7cf
17:31:20.142 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@38c5cc4c
17:31:20.142 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@38c5cc4c
17:31:20.143 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ec756bd
17:31:20.144 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d121db3
17:31:20.145 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@12d4bf7e
17:31:20.146 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@12d4bf7e
17:31:20.147 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@2928854b
17:31:20.147 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@2928854b
17:31:20.149 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@124c278f
17:31:20.149 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@124c278f
17:31:20.150 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@229d10bd
17:31:20.150 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@229d10bd
17:31:20.150 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@229d10bd
17:31:20.152 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4ccb53
17:31:20.153 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@45b9a632
17:31:20.153 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@45b9a632
17:31:20.153 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@45b9a632
17:31:20.154 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b26e945
17:31:20.155 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@3c9d0b9d
17:31:20.155 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c9d0b9d
17:31:20.155 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@d4342c2
17:31:20.155 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d4342c2
17:31:20.156 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@12b0404f
17:31:20.156 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12b0404f
17:31:20.157 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@647fd8ce
17:31:20.157 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@647fd8ce
17:31:20.159 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1677d1
17:31:20.159 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1677d1
17:31:20.159 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e316c74
17:31:20.160 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@7f010382
17:31:20.160 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@7f010382
17:31:20.160 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@7f010382
17:31:20.161 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:31:20.161 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:31:20.162 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:31:20.162 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@5ccddd20
17:31:20.163 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@59d016c9
17:31:20.163 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@59d016c9
17:31:20.163 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@59d016c9
17:31:20.164 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48aaecc3
17:31:20.164 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48aaecc3
17:31:20.164 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48aaecc3
17:31:20.164 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@5c909414
17:31:20.165 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@78e117e3
17:31:20.167 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@bef2d72
17:31:20.168 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bef2d72
17:31:20.168 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fe7aac8
17:31:20.170 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@63021689
17:31:20.171 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@63021689
17:31:20.174 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@a9cd3b1
17:31:20.174 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a9cd3b1
17:31:20.174 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9225652
17:31:20.175 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6580cfdd
17:31:20.176 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@48ae9b55
17:31:20.178 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@1817d444
17:31:20.179 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1817d444
17:31:20.179 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@31368b99
17:31:20.179 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1725dc0f
17:31:20.179 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3911c2a7
17:31:20.179 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4ac3c60d
17:31:20.179 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4facf68f
17:31:20.180 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76508ed1
17:31:20.180 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41e36e46
17:31:20.180 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15c43bd9
17:31:20.187 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
17:31:20.190 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mariadb://localhost:3306/pizzadb]
17:31:20.190 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=root}
17:31:20.190 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
17:31:20.192 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
17:31:20.193 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
17:31:20.233 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
17:31:20.233 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
17:31:20.233 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
17:31:20.242 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
17:31:20.254 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
17:31:20.267 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
17:31:20.288 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@5609159b
17:31:20.288 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5609159b
17:31:20.307 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@3943a2be
17:31:20.308 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3943a2be
17:31:20.308 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
17:31:20.308 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
17:31:20.309 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
17:31:20.309 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
17:31:20.310 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
17:31:20.310 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
17:31:20.311 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
17:31:20.312 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
17:31:20.312 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
17:31:20.313 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
17:31:20.317 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
17:31:20.317 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
17:31:20.371 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
17:31:20.371 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
17:31:20.372 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
17:31:20.372 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
17:31:20.373 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
17:31:20.374 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
17:31:20.374 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
17:31:20.375 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
17:31:20.377 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
17:31:20.378 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
17:31:20.379 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
17:31:20.379 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
17:31:20.379 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
17:31:20.380 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
17:31:20.407 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
17:31:20.417 [main] DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl -
				Encountered a non-categorized annotated class [fr.pizzeria.model.CategoriePizza]; ignoring
17:31:20.441 [main] DEBUG org.hibernate.cfg.AnnotationBinder -
				Binding entity from annotated class: fr.pizzeria.model.Pizza
17:31:20.456 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
17:31:20.461 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Import with entity name Pizza
17:31:20.463 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Bind entity fr.pizzeria.model.Pizza on table pizza
17:31:20.489 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=id, insertable=true, updatable=true, unique=false}
17:31:20.492 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property id with lazy=false
17:31:20.494 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:id]
17:31:20.495 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for id
17:31:20.497 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property id
17:31:20.500 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
17:31:20.505 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
17:31:20.505 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property categorie with lazy=false
17:31:20.505 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza.categoriePizza:categorie]
17:31:20.505 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for categorie
17:31:20.505 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categorie
17:31:20.506 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categoriePizza
17:31:20.506 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=code, insertable=true, updatable=true, unique=false}
17:31:20.506 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property code with lazy=false
17:31:20.506 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:code]
17:31:20.506 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for code
17:31:20.506 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property code
17:31:20.507 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=libelle, insertable=true, updatable=true, unique=false}
17:31:20.507 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property libelle with lazy=false
17:31:20.507 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:libelle]
17:31:20.507 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for libelle
17:31:20.507 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property libelle
17:31:20.507 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=prix, insertable=true, updatable=true, unique=false}
17:31:20.507 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property prix with lazy=false
17:31:20.507 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:prix]
17:31:20.507 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for prix
17:31:20.507 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property prix
17:31:20.508 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for id
17:31:20.509 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for categorie
17:31:20.509 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for code
17:31:20.509 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for libelle
17:31:20.509 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for prix
17:31:20.510 [main] DEBUG org.hibernate.mapping.PrimaryKey -
				Forcing column [id] to be non-null as it is part of the primary key for table [pizza]
17:31:20.540 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:31:20.547 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
17:31:20.548 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
17:31:20.549 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
17:31:20.549 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
17:31:20.549 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
17:31:20.549 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
17:31:20.549 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
17:31:20.549 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
17:31:20.549 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
17:31:20.549 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
17:31:20.549 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
17:31:20.549 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
17:31:20.549 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
17:31:20.549 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
17:31:20.549 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
17:31:20.549 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
17:31:20.550 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
17:31:20.550 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
17:31:20.550 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
17:31:20.550 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
17:31:20.550 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
17:31:20.550 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
17:31:20.550 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1ef6d34c
17:31:20.550 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
17:31:20.550 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
17:31:20.550 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
17:31:20.550 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
17:31:20.550 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
17:31:20.550 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
17:31:20.550 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
17:31:20.552 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
17:31:20.552 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
17:31:20.552 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
17:31:20.552 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
17:31:20.552 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
17:31:20.552 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
17:31:20.596 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
17:31:20.596 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_161\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e48362c, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY9\Documents\Pizzeria-console-object, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_161\lib\endorsed, java.io.tmpdir=C:\Users\ETY9\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mariadb://localhost:3306/pizzadb, java.library.path=C:\Program Files\Java\jre1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_161/bin/server;C:/Program Files/Java/jre1.8.0_161/bin;C:/Program Files/Java/jre1.8.0_161/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Users\ETY9\AppData\Local\Microsoft\WindowsApps;C:\Users\ETY9\AppData\Local\atom\bin;C:\Program Files\Maven\apache-maven-3.5.3\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_161\bin;;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY9, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=ETY9, java.class.path=C:\Users\ETY9\Documents\Pizzeria-console-object\target\classes;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.junit_4.12.0.v201504281640\junit.jar;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.hamcrest.core_1.3.0.v201303031735.jar;C:\Users\ETY9\.m2\repository\commons-io\commons-io\2.6\commons-io-2.6.jar;C:\Users\ETY9\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY9\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\ETY9\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY9\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY9\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY9\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY9\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY9\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY9\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY9\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-java8\5.1.0.Final\hibernate-java8-5.1.0.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_161, hibernate.connection.url=jdbc:mariadb://localhost:3306/pizzadb, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jre1.8.0_161\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_161\lib\resources.jar;C:\Program Files\Java\jre1.8.0_161\lib\rt.jar;C:\Program Files\Java\jre1.8.0_161\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_161\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_161\lib\jce.jar;C:\Program Files\Java\jre1.8.0_161\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_161\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_161\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
17:31:20.608 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
17:31:20.608 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
17:31:20.648 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
17:31:20.648 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
17:31:20.652 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:31:20.653 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:31:20.656 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
17:31:20.656 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
17:31:20.681 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:31:20.681 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:31:20.698 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				Static SQL for entity: fr.pizzeria.model.Pizza
17:31:20.698 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Version select: select id from pizza where id =?
17:31:20.698 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Snapshot select: select pizza_.id, pizza_.categorie as categori2_0_, pizza_.code as code3_0_, pizza_.libelle as libelle4_0_, pizza_.prix as prix5_0_ from pizza pizza_ where pizza_.id=?
17:31:20.698 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Insert 0: insert into pizza (categorie, code, libelle, prix, id) values (?, ?, ?, ?, ?)
17:31:20.698 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Update 0: update pizza set categorie=?, code=?, libelle=?, prix=? where id=?
17:31:20.698 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Delete 0: delete from pizza where id=?
17:31:20.698 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Identity insert: insert into pizza (categorie, code, libelle, prix) values (?, ?, ?, ?)
17:31:20.717 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fe1ce85]
17:31:20.718 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:31:20.719 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@23aa363a]
17:31:20.722 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:31:20.722 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:31:20.722 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:31:20.722 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:31:20.723 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:31:20.736 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:31:20.742 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:31:20.746 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [NONE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:31:20.746 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c62d71]
17:31:20.746 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:31:20.746 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@47f4e407]
17:31:20.746 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:31:20.746 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:31:20.746 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:31:20.746 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:31:20.747 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:31:20.747 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:31:20.747 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:31:20.748 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:31:20.748 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48d5f34e]
17:31:20.748 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:31:20.748 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6ff65192]
17:31:20.748 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:31:20.748 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:31:20.748 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:31:20.748 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:31:20.748 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:31:20.749 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:31:20.749 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:31:20.749 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:31:20.749 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af0df05]
17:31:20.750 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:31:20.750 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@acdb094]
17:31:20.750 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:31:20.750 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:31:20.750 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:31:20.750 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:31:20.750 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:31:20.750 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:31:20.751 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:31:20.751 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_NOWAIT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:31:20.751 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b0f373b]
17:31:20.751 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:31:20.752 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4b45dcb8]
17:31:20.752 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:31:20.752 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:31:20.752 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:31:20.752 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:31:20.752 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:31:20.754 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:31:20.754 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:31:20.755 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_SKIPLOCKED]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:31:20.755 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2072acb2]
17:31:20.755 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:31:20.755 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@35a9782c]
17:31:20.755 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:31:20.755 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:31:20.755 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:31:20.755 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:31:20.755 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:31:20.756 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:31:20.756 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:31:20.756 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [FORCE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:31:20.756 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45815ffc]
17:31:20.756 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:31:20.756 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@d3957fe]
17:31:20.757 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:31:20.757 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:31:20.757 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:31:20.757 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:31:20.757 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:31:20.757 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:31:20.757 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:31:20.758 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? lock in share mode
17:31:20.758 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@299321e2]
17:31:20.758 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:31:20.758 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@64ba3208]
17:31:20.758 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:31:20.758 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:31:20.758 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:31:20.758 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:31:20.758 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:31:20.758 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:31:20.759 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:31:20.759 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_WRITE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:31:20.759 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a6944c]
17:31:20.759 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:31:20.759 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6b00f608]
17:31:20.759 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:31:20.759 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:31:20.759 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:31:20.759 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:31:20.759 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:31:20.760 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:31:20.760 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:31:20.761 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:31:20.761 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e821657]
17:31:20.761 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:31:20.761 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@71cf1b07]
17:31:20.761 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:31:20.761 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:31:20.761 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:31:20.761 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:31:20.761 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:31:20.761 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:31:20.762 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:31:20.762 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:31:20.762 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fce136b]
17:31:20.762 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:31:20.762 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@43b6123e]
17:31:20.762 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:31:20.762 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:31:20.762 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:31:20.762 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:31:20.762 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:31:20.763 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:31:20.763 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:31:20.763 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:31:20.777 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_MERGE on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:31:20.778 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_REFRESH on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:31:20.778 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
17:31:20.781 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator -
				No actions specified; doing nothing
17:31:20.781 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
17:31:20.782 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
17:31:20.783 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
17:31:20.784 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
17:31:20.785 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
17:31:20.786 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c055c54
17:31:20.787 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: 3cca73b0-c0c5-41c1-9044-c7569f61d7fd (<unnamed>)
17:31:20.787 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
17:31:20.843 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:31:20.844 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:31:20.844 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:31:20.851 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@476b0ae6
17:31:20.852 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pizza 
17:31:22.231 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
17:31:22.238 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@650eab8
17:31:22.239 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
17:31:22.273 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: SELECT p FROM fr.pizzeria.model.Pizza p
17:31:22.283 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'fr'
       |     |  |  |  \-[IDENT] Node: 'pizzeria'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Pizza'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

17:31:22.283 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:31:22.309 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
17:31:22.323 [main] DEBUG o.h.h.internal.ast.tree.FromElement -
				FromClause{level=1} : fr.pizzeria.model.Pizza (p) -> pizza0_
17:31:22.324 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode -
				Resolved : p -> pizza0_.id
17:31:22.325 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select : finishing up [level=1, statement=select]
17:31:22.325 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				processQuery() :  ( SELECT ( {select clause} pizza0_.id ) ( FromClause{level=1} pizza pizza0_ ) )
17:31:22.335 [main] DEBUG o.h.h.i.ast.util.JoinProcessor -
				Using FROM fragment [pizza pizza0_]
17:31:22.335 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select >> end [level=1, statement=select]
17:31:22.335 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (pizza)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'pizza0_.id as id1_0_' {alias=p, className=fr.pizzeria.model.Pizza, tableAlias=pizza0_}
    |  \-[SQL_TOKEN] SqlFragment: 'pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[pizza0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'pizza pizza0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=pizza,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}

17:31:22.335 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:31:22.342 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				HQL: SELECT p FROM fr.pizzeria.model.Pizza p
17:31:22.343 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				SQL: select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
17:31:22.343 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:31:22.359 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
17:31:22.372 [main] DEBUG o.h.e.jdbc.spi.SqlExceptionHelper -
				could not extract ResultSet [n/a]
java.sql.SQLSyntaxErrorException: Unknown column 'pizza0_.libelle' in 'field list'
	at org.mariadb.jdbc.internal.SQLExceptionMapper.get(SQLExceptionMapper.java:138)
	at org.mariadb.jdbc.internal.SQLExceptionMapper.throwException(SQLExceptionMapper.java:106)
	at org.mariadb.jdbc.MySQLStatement.executeQueryEpilog(MySQLStatement.java:264)
	at org.mariadb.jdbc.MySQLStatement.execute(MySQLStatement.java:288)
	at org.mariadb.jdbc.MySQLStatement.executeQuery(MySQLStatement.java:302)
	at org.mariadb.jdbc.MySQLPreparedStatement.executeQuery(MySQLPreparedStatement.java:112)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:70)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2115)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1898)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1874)
	at org.hibernate.loader.Loader.doQuery(Loader.java:919)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:336)
	at org.hibernate.loader.Loader.doList(Loader.java:2610)
	at org.hibernate.loader.Loader.doList(Loader.java:2593)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2422)
	at org.hibernate.loader.Loader.list(Loader.java:2417)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:501)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:371)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1339)
	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:87)
	at org.hibernate.jpa.internal.QueryImpl.list(QueryImpl.java:606)
	at org.hibernate.jpa.internal.QueryImpl.getResultList(QueryImpl.java:483)
	at fr.pizzeria.dao.PizzaJpaBase.findAllPizzas(PizzaJpaBase.java:21)
	at fr.pizzeria.console.PizzeriaAdminConsoleApp.main(PizzeriaAdminConsoleApp.java:41)
Caused by: org.mariadb.jdbc.internal.common.QueryException: Unknown column 'pizza0_.libelle' in 'field list'
	at org.mariadb.jdbc.internal.mysql.MySQLProtocol.getResult(MySQLProtocol.java:942)
	at org.mariadb.jdbc.internal.mysql.MySQLProtocol.executeQuery(MySQLProtocol.java:991)
	at org.mariadb.jdbc.MySQLStatement.execute(MySQLStatement.java:281)
	... 21 common frames omitted
17:31:22.373 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper -
				SQL Error: 1054, SQLState: 42S22
17:31:22.373 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper -
				Unknown column 'pizza0_.libelle' in 'field list'
17:31:22.374 [main] DEBUG o.h.j.spi.AbstractEntityManagerImpl -
				Mark transaction for rollback
17:32:26.386 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
17:32:26.429 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
17:32:26.479 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
17:32:26.479 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pizza]
17:32:26.481 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
17:32:26.489 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY9/Documents/Pizzeria-console-object/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mariadb://localhost:3306/pizzadb
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
17:32:26.501 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
17:32:26.503 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
17:32:26.510 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
17:32:26.511 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
17:32:26.567 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
17:32:26.568 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
17:32:26.570 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
17:32:26.578 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
17:32:26.598 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
17:32:26.607 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
17:32:26.710 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
17:32:26.710 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
17:32:26.711 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37e547da
17:32:26.712 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15761df8
17:32:26.713 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@71c8becc
17:32:26.714 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@3bd40a57
17:32:26.716 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
17:32:26.716 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
17:32:26.717 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78047b92
17:32:26.717 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@4387b79e
17:32:26.718 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@4387b79e
17:32:26.718 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4387b79e
17:32:26.719 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
17:32:26.719 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
17:32:26.719 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@add0edd
17:32:26.721 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@1d76aeea
17:32:26.722 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@1d76aeea
17:32:26.722 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d76aeea
17:32:26.723 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
17:32:26.724 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
17:32:26.724 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@197d671
17:32:26.725 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
17:32:26.726 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
17:32:26.726 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7995092a
17:32:26.727 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
17:32:26.727 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
17:32:26.728 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23f7d05d
17:32:26.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f1302d6
17:32:26.729 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f1302d6
17:32:26.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@184cf7cf
17:32:26.731 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@184cf7cf
17:32:26.732 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@38c5cc4c
17:32:26.732 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@38c5cc4c
17:32:26.733 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ec756bd
17:32:26.735 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d121db3
17:32:26.736 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@12d4bf7e
17:32:26.736 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@12d4bf7e
17:32:26.737 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@2928854b
17:32:26.738 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@2928854b
17:32:26.739 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@124c278f
17:32:26.739 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@124c278f
17:32:26.740 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@229d10bd
17:32:26.740 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@229d10bd
17:32:26.740 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@229d10bd
17:32:26.741 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4ccb53
17:32:26.743 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@45b9a632
17:32:26.743 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@45b9a632
17:32:26.743 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@45b9a632
17:32:26.743 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b26e945
17:32:26.744 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@3c9d0b9d
17:32:26.744 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c9d0b9d
17:32:26.745 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@d4342c2
17:32:26.745 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d4342c2
17:32:26.746 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@12b0404f
17:32:26.746 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12b0404f
17:32:26.746 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@647fd8ce
17:32:26.747 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@647fd8ce
17:32:26.748 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1677d1
17:32:26.748 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1677d1
17:32:26.748 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e316c74
17:32:26.749 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@7f010382
17:32:26.750 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@7f010382
17:32:26.750 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@7f010382
17:32:26.750 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:32:26.750 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:32:26.751 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:32:26.751 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@5ccddd20
17:32:26.752 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@59d016c9
17:32:26.752 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@59d016c9
17:32:26.752 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@59d016c9
17:32:26.753 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48aaecc3
17:32:26.753 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48aaecc3
17:32:26.753 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48aaecc3
17:32:26.754 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@5c909414
17:32:26.754 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@78e117e3
17:32:26.757 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@bef2d72
17:32:26.757 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bef2d72
17:32:26.757 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fe7aac8
17:32:26.760 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@63021689
17:32:26.760 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@63021689
17:32:26.762 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@a9cd3b1
17:32:26.762 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a9cd3b1
17:32:26.762 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9225652
17:32:26.763 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6580cfdd
17:32:26.763 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@48ae9b55
17:32:26.765 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@1817d444
17:32:26.766 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1817d444
17:32:26.766 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@31368b99
17:32:26.766 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1725dc0f
17:32:26.766 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3911c2a7
17:32:26.766 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4ac3c60d
17:32:26.766 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4facf68f
17:32:26.767 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76508ed1
17:32:26.767 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41e36e46
17:32:26.768 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15c43bd9
17:32:26.777 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
17:32:26.779 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mariadb://localhost:3306/pizzadb]
17:32:26.780 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=root}
17:32:26.780 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
17:32:26.783 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
17:32:26.783 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
17:32:26.821 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
17:32:26.822 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
17:32:26.822 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
17:32:26.831 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
17:32:26.842 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
17:32:26.857 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
17:32:26.878 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@5609159b
17:32:26.878 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5609159b
17:32:26.896 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@3943a2be
17:32:26.896 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3943a2be
17:32:26.897 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
17:32:26.897 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
17:32:26.898 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
17:32:26.898 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
17:32:26.899 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
17:32:26.899 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
17:32:26.900 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
17:32:26.900 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
17:32:26.900 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
17:32:26.900 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
17:32:26.903 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
17:32:26.903 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
17:32:26.960 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
17:32:26.960 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
17:32:26.961 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
17:32:26.961 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
17:32:26.962 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
17:32:26.962 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
17:32:26.963 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
17:32:26.963 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
17:32:26.964 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
17:32:26.965 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
17:32:26.965 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
17:32:26.966 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
17:32:26.966 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
17:32:26.967 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
17:32:26.998 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
17:32:27.010 [main] DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl -
				Encountered a non-categorized annotated class [fr.pizzeria.model.CategoriePizza]; ignoring
17:32:27.035 [main] DEBUG org.hibernate.cfg.AnnotationBinder -
				Binding entity from annotated class: fr.pizzeria.model.Pizza
17:32:27.051 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
17:32:27.055 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Import with entity name Pizza
17:32:27.058 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Bind entity fr.pizzeria.model.Pizza on table pizza
17:32:27.087 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=id, insertable=true, updatable=true, unique=false}
17:32:27.089 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property id with lazy=false
17:32:27.091 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:id]
17:32:27.092 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for id
17:32:27.094 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property id
17:32:27.098 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
17:32:27.103 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
17:32:27.103 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property categorie with lazy=false
17:32:27.103 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza.categoriePizza:categorie]
17:32:27.103 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for categorie
17:32:27.103 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categorie
17:32:27.103 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categoriePizza
17:32:27.104 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=code, insertable=true, updatable=true, unique=false}
17:32:27.104 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property code with lazy=false
17:32:27.104 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:code]
17:32:27.104 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for code
17:32:27.104 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property code
17:32:27.104 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=libelle, insertable=true, updatable=true, unique=false}
17:32:27.104 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property libelle with lazy=false
17:32:27.104 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:libelle]
17:32:27.105 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for libelle
17:32:27.105 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property libelle
17:32:27.105 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=prix, insertable=true, updatable=true, unique=false}
17:32:27.105 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property prix with lazy=false
17:32:27.105 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:prix]
17:32:27.105 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for prix
17:32:27.105 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property prix
17:32:27.106 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for id
17:32:27.106 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for categorie
17:32:27.106 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for code
17:32:27.106 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for libelle
17:32:27.106 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for prix
17:32:27.107 [main] DEBUG org.hibernate.mapping.PrimaryKey -
				Forcing column [id] to be non-null as it is part of the primary key for table [pizza]
17:32:27.136 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:32:27.144 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
17:32:27.145 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
17:32:27.145 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
17:32:27.145 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
17:32:27.145 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
17:32:27.145 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
17:32:27.145 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
17:32:27.145 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
17:32:27.145 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
17:32:27.145 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
17:32:27.145 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
17:32:27.145 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
17:32:27.145 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
17:32:27.146 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
17:32:27.146 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
17:32:27.146 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
17:32:27.146 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
17:32:27.146 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
17:32:27.146 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
17:32:27.146 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
17:32:27.146 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
17:32:27.146 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
17:32:27.146 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1ef6d34c
17:32:27.146 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
17:32:27.146 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
17:32:27.146 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
17:32:27.146 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
17:32:27.146 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
17:32:27.146 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
17:32:27.146 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
17:32:27.148 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
17:32:27.148 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
17:32:27.148 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
17:32:27.148 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
17:32:27.148 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
17:32:27.148 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
17:32:27.184 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
17:32:27.184 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_161\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e48362c, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY9\Documents\Pizzeria-console-object, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_161\lib\endorsed, java.io.tmpdir=C:\Users\ETY9\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mariadb://localhost:3306/pizzadb, java.library.path=C:\Program Files\Java\jre1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_161/bin/server;C:/Program Files/Java/jre1.8.0_161/bin;C:/Program Files/Java/jre1.8.0_161/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Users\ETY9\AppData\Local\Microsoft\WindowsApps;C:\Users\ETY9\AppData\Local\atom\bin;C:\Program Files\Maven\apache-maven-3.5.3\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_161\bin;;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY9, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=ETY9, java.class.path=C:\Users\ETY9\Documents\Pizzeria-console-object\target\classes;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.junit_4.12.0.v201504281640\junit.jar;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.hamcrest.core_1.3.0.v201303031735.jar;C:\Users\ETY9\.m2\repository\commons-io\commons-io\2.6\commons-io-2.6.jar;C:\Users\ETY9\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY9\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\ETY9\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY9\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY9\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY9\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY9\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY9\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY9\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY9\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-java8\5.1.0.Final\hibernate-java8-5.1.0.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_161, hibernate.connection.url=jdbc:mariadb://localhost:3306/pizzadb, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jre1.8.0_161\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_161\lib\resources.jar;C:\Program Files\Java\jre1.8.0_161\lib\rt.jar;C:\Program Files\Java\jre1.8.0_161\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_161\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_161\lib\jce.jar;C:\Program Files\Java\jre1.8.0_161\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_161\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_161\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
17:32:27.200 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
17:32:27.201 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
17:32:27.252 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
17:32:27.252 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
17:32:27.257 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:32:27.260 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:32:27.261 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
17:32:27.262 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
17:32:27.303 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:32:27.303 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:32:27.322 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				Static SQL for entity: fr.pizzeria.model.Pizza
17:32:27.322 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Version select: select id from pizza where id =?
17:32:27.322 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Snapshot select: select pizza_.id, pizza_.categorie as categori2_0_, pizza_.code as code3_0_, pizza_.libelle as libelle4_0_, pizza_.prix as prix5_0_ from pizza pizza_ where pizza_.id=?
17:32:27.322 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Insert 0: insert into pizza (categorie, code, libelle, prix, id) values (?, ?, ?, ?, ?)
17:32:27.322 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Update 0: update pizza set categorie=?, code=?, libelle=?, prix=? where id=?
17:32:27.322 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Delete 0: delete from pizza where id=?
17:32:27.322 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Identity insert: insert into pizza (categorie, code, libelle, prix) values (?, ?, ?, ?)
17:32:27.350 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fe1ce85]
17:32:27.352 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:32:27.356 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@23aa363a]
17:32:27.361 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:32:27.361 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:32:27.362 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:32:27.362 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:32:27.367 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:32:27.384 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:32:27.387 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:32:27.389 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [NONE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:32:27.390 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c62d71]
17:32:27.390 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:32:27.390 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@47f4e407]
17:32:27.390 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:32:27.390 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:32:27.390 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:32:27.390 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:32:27.390 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:32:27.390 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:32:27.391 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:32:27.392 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:32:27.392 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48d5f34e]
17:32:27.392 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:32:27.392 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6ff65192]
17:32:27.392 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:32:27.392 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:32:27.392 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:32:27.392 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:32:27.392 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:32:27.392 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:32:27.393 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:32:27.393 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:32:27.393 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af0df05]
17:32:27.394 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:32:27.394 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@acdb094]
17:32:27.394 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:32:27.394 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:32:27.394 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:32:27.394 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:32:27.394 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:32:27.394 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:32:27.394 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:32:27.395 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_NOWAIT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:32:27.395 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b0f373b]
17:32:27.395 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:32:27.395 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4b45dcb8]
17:32:27.395 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:32:27.395 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:32:27.395 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:32:27.395 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:32:27.395 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:32:27.395 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:32:27.396 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:32:27.396 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_SKIPLOCKED]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:32:27.396 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2072acb2]
17:32:27.396 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:32:27.396 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@35a9782c]
17:32:27.396 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:32:27.396 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:32:27.396 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:32:27.396 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:32:27.397 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:32:27.397 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:32:27.399 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:32:27.400 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [FORCE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:32:27.400 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45815ffc]
17:32:27.400 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:32:27.400 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@d3957fe]
17:32:27.400 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:32:27.400 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:32:27.400 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:32:27.400 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:32:27.401 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:32:27.401 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:32:27.401 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:32:27.401 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? lock in share mode
17:32:27.401 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@299321e2]
17:32:27.401 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:32:27.401 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@64ba3208]
17:32:27.402 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:32:27.402 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:32:27.402 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:32:27.402 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:32:27.402 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:32:27.402 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:32:27.402 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:32:27.402 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_WRITE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:32:27.403 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a6944c]
17:32:27.403 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:32:27.403 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6b00f608]
17:32:27.403 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:32:27.403 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:32:27.403 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:32:27.403 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:32:27.403 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:32:27.403 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:32:27.404 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:32:27.404 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:32:27.404 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e821657]
17:32:27.404 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:32:27.404 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@71cf1b07]
17:32:27.404 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:32:27.404 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:32:27.404 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:32:27.404 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:32:27.404 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:32:27.405 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:32:27.405 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:32:27.405 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:32:27.405 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fce136b]
17:32:27.405 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:32:27.405 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@43b6123e]
17:32:27.406 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:32:27.406 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:32:27.406 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:32:27.406 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:32:27.406 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:32:27.406 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:32:27.407 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:32:27.407 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:32:27.422 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_MERGE on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:32:27.423 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_REFRESH on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.libelle as libelle4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:32:27.423 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
17:32:27.428 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator -
				No actions specified; doing nothing
17:32:27.428 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
17:32:27.428 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
17:32:27.431 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
17:32:27.433 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
17:32:27.433 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
17:32:27.435 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c055c54
17:32:27.437 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: 048f7f63-d045-4c27-b4b7-0d4e4d4d9859 (<unnamed>)
17:32:27.437 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
17:32:27.518 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:32:27.519 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:32:27.519 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:32:27.528 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@476b0ae6
17:32:27.528 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pizza 
17:32:56.819 [pool-1-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Connection pool now considered primed; min-size will be maintained
17:33:12.699 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
17:33:12.708 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@650eab8
17:33:12.708 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
17:33:12.733 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: SELECT p FROM fr.pizzeria.model.Pizza p
17:33:12.741 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'fr'
       |     |  |  |  \-[IDENT] Node: 'pizzeria'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Pizza'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

17:33:12.741 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:33:12.768 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
17:33:12.785 [main] DEBUG o.h.h.internal.ast.tree.FromElement -
				FromClause{level=1} : fr.pizzeria.model.Pizza (p) -> pizza0_
17:33:12.786 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode -
				Resolved : p -> pizza0_.id
17:33:12.788 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select : finishing up [level=1, statement=select]
17:33:12.788 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				processQuery() :  ( SELECT ( {select clause} pizza0_.id ) ( FromClause{level=1} pizza pizza0_ ) )
17:33:12.797 [main] DEBUG o.h.h.i.ast.util.JoinProcessor -
				Using FROM fragment [pizza pizza0_]
17:33:12.797 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select >> end [level=1, statement=select]
17:33:12.798 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (pizza)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'pizza0_.id as id1_0_' {alias=p, className=fr.pizzeria.model.Pizza, tableAlias=pizza0_}
    |  \-[SQL_TOKEN] SqlFragment: 'pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[pizza0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'pizza pizza0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=pizza,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}

17:33:12.799 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:33:12.805 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				HQL: SELECT p FROM fr.pizzeria.model.Pizza p
17:33:12.805 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				SQL: select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
17:33:12.805 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:33:12.823 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.libelle as libelle4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
17:33:12.835 [main] DEBUG o.h.e.jdbc.spi.SqlExceptionHelper -
				could not extract ResultSet [n/a]
java.sql.SQLSyntaxErrorException: Unknown column 'pizza0_.libelle' in 'field list'
	at org.mariadb.jdbc.internal.SQLExceptionMapper.get(SQLExceptionMapper.java:138)
	at org.mariadb.jdbc.internal.SQLExceptionMapper.throwException(SQLExceptionMapper.java:106)
	at org.mariadb.jdbc.MySQLStatement.executeQueryEpilog(MySQLStatement.java:264)
	at org.mariadb.jdbc.MySQLStatement.execute(MySQLStatement.java:288)
	at org.mariadb.jdbc.MySQLStatement.executeQuery(MySQLStatement.java:302)
	at org.mariadb.jdbc.MySQLPreparedStatement.executeQuery(MySQLPreparedStatement.java:112)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:70)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2115)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1898)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1874)
	at org.hibernate.loader.Loader.doQuery(Loader.java:919)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:336)
	at org.hibernate.loader.Loader.doList(Loader.java:2610)
	at org.hibernate.loader.Loader.doList(Loader.java:2593)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2422)
	at org.hibernate.loader.Loader.list(Loader.java:2417)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:501)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:371)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1339)
	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:87)
	at org.hibernate.jpa.internal.QueryImpl.list(QueryImpl.java:606)
	at org.hibernate.jpa.internal.QueryImpl.getResultList(QueryImpl.java:483)
	at fr.pizzeria.dao.PizzaJpaBase.findAllPizzas(PizzaJpaBase.java:21)
	at fr.pizzeria.console.PizzeriaAdminConsoleApp.main(PizzeriaAdminConsoleApp.java:41)
Caused by: org.mariadb.jdbc.internal.common.QueryException: Unknown column 'pizza0_.libelle' in 'field list'
	at org.mariadb.jdbc.internal.mysql.MySQLProtocol.getResult(MySQLProtocol.java:942)
	at org.mariadb.jdbc.internal.mysql.MySQLProtocol.executeQuery(MySQLProtocol.java:991)
	at org.mariadb.jdbc.MySQLStatement.execute(MySQLStatement.java:281)
	... 21 common frames omitted
17:33:12.836 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper -
				SQL Error: 1054, SQLState: 42S22
17:33:12.836 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper -
				Unknown column 'pizza0_.libelle' in 'field list'
17:33:12.837 [main] DEBUG o.h.j.spi.AbstractEntityManagerImpl -
				Mark transaction for rollback
17:33:26.822 [pool-1-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Adding 1 Connections to the pool
17:35:11.734 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
17:35:11.781 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
17:35:11.831 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
17:35:11.831 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pizza]
17:35:11.833 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
17:35:11.845 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY9/Documents/Pizzeria-console-object/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mariadb://localhost:3306/pizzadb
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
17:35:11.857 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
17:35:11.858 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
17:35:11.865 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
17:35:11.866 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
17:35:11.924 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
17:35:11.926 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
17:35:11.927 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
17:35:11.936 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
17:35:11.958 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
17:35:11.964 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
17:35:12.057 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
17:35:12.057 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
17:35:12.057 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37e547da
17:35:12.059 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15761df8
17:35:12.060 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@71c8becc
17:35:12.061 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@3bd40a57
17:35:12.062 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
17:35:12.063 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
17:35:12.063 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78047b92
17:35:12.064 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@4387b79e
17:35:12.064 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@4387b79e
17:35:12.064 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4387b79e
17:35:12.066 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
17:35:12.066 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
17:35:12.066 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@add0edd
17:35:12.067 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@1d76aeea
17:35:12.068 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@1d76aeea
17:35:12.068 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d76aeea
17:35:12.070 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
17:35:12.070 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
17:35:12.070 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@197d671
17:35:12.071 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
17:35:12.071 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
17:35:12.071 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7995092a
17:35:12.073 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
17:35:12.073 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
17:35:12.073 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23f7d05d
17:35:12.075 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f1302d6
17:35:12.075 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f1302d6
17:35:12.076 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@184cf7cf
17:35:12.076 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@184cf7cf
17:35:12.077 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@38c5cc4c
17:35:12.077 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@38c5cc4c
17:35:12.078 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ec756bd
17:35:12.079 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d121db3
17:35:12.080 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@12d4bf7e
17:35:12.080 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@12d4bf7e
17:35:12.083 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@2928854b
17:35:12.083 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@2928854b
17:35:12.085 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@124c278f
17:35:12.085 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@124c278f
17:35:12.086 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@229d10bd
17:35:12.087 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@229d10bd
17:35:12.087 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@229d10bd
17:35:12.088 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4ccb53
17:35:12.089 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@45b9a632
17:35:12.089 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@45b9a632
17:35:12.089 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@45b9a632
17:35:12.090 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b26e945
17:35:12.090 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@3c9d0b9d
17:35:12.090 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c9d0b9d
17:35:12.091 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@d4342c2
17:35:12.091 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d4342c2
17:35:12.092 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@12b0404f
17:35:12.092 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12b0404f
17:35:12.092 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@647fd8ce
17:35:12.092 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@647fd8ce
17:35:12.094 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1677d1
17:35:12.094 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1677d1
17:35:12.094 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e316c74
17:35:12.095 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@7f010382
17:35:12.095 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@7f010382
17:35:12.095 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@7f010382
17:35:12.096 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:35:12.096 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:35:12.096 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:35:12.097 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@5ccddd20
17:35:12.097 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@59d016c9
17:35:12.098 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@59d016c9
17:35:12.098 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@59d016c9
17:35:12.098 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48aaecc3
17:35:12.099 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48aaecc3
17:35:12.099 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48aaecc3
17:35:12.099 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@5c909414
17:35:12.100 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@78e117e3
17:35:12.103 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@bef2d72
17:35:12.103 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bef2d72
17:35:12.103 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fe7aac8
17:35:12.106 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@63021689
17:35:12.106 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@63021689
17:35:12.108 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@a9cd3b1
17:35:12.108 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a9cd3b1
17:35:12.108 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9225652
17:35:12.109 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6580cfdd
17:35:12.110 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@48ae9b55
17:35:12.111 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@1817d444
17:35:12.112 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1817d444
17:35:12.112 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@31368b99
17:35:12.112 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1725dc0f
17:35:12.112 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3911c2a7
17:35:12.112 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4ac3c60d
17:35:12.113 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4facf68f
17:35:12.113 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76508ed1
17:35:12.113 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41e36e46
17:35:12.113 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15c43bd9
17:35:12.121 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
17:35:12.125 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mariadb://localhost:3306/pizzadb]
17:35:12.125 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=root}
17:35:12.126 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
17:35:12.128 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
17:35:12.128 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
17:35:12.165 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
17:35:12.166 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
17:35:12.166 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
17:35:12.177 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
17:35:12.188 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
17:35:12.203 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
17:35:12.224 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@5609159b
17:35:12.224 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5609159b
17:35:12.242 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@3943a2be
17:35:12.242 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3943a2be
17:35:12.243 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
17:35:12.243 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
17:35:12.244 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
17:35:12.244 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
17:35:12.245 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
17:35:12.246 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
17:35:12.246 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
17:35:12.246 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
17:35:12.247 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
17:35:12.247 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
17:35:12.250 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
17:35:12.250 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
17:35:12.307 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
17:35:12.308 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
17:35:12.309 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
17:35:12.309 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
17:35:12.309 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
17:35:12.310 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
17:35:12.310 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
17:35:12.311 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
17:35:12.312 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
17:35:12.313 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
17:35:12.313 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
17:35:12.314 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
17:35:12.314 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
17:35:12.315 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
17:35:12.343 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
17:35:12.354 [main] DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl -
				Encountered a non-categorized annotated class [fr.pizzeria.model.CategoriePizza]; ignoring
17:35:12.381 [main] DEBUG org.hibernate.cfg.AnnotationBinder -
				Binding entity from annotated class: fr.pizzeria.model.Pizza
17:35:12.398 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
17:35:12.403 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Import with entity name Pizza
17:35:12.405 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Bind entity fr.pizzeria.model.Pizza on table pizza
17:35:12.434 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=id, insertable=true, updatable=true, unique=false}
17:35:12.436 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property id with lazy=false
17:35:12.438 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:id]
17:35:12.439 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for id
17:35:12.441 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property id
17:35:12.444 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
17:35:12.450 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
17:35:12.450 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property categorie with lazy=false
17:35:12.450 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza.categoriePizza:categorie]
17:35:12.450 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for categorie
17:35:12.450 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categorie
17:35:12.451 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categoriePizza
17:35:12.451 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=code, insertable=true, updatable=true, unique=false}
17:35:12.451 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property code with lazy=false
17:35:12.452 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:code]
17:35:12.452 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for code
17:35:12.452 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property code
17:35:12.452 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=nom, insertable=true, updatable=true, unique=false}
17:35:12.452 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property libelle with lazy=false
17:35:12.452 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:libelle]
17:35:12.452 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for libelle
17:35:12.452 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property libelle
17:35:12.452 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=prix, insertable=true, updatable=true, unique=false}
17:35:12.452 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property prix with lazy=false
17:35:12.452 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:prix]
17:35:12.452 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for prix
17:35:12.452 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property prix
17:35:12.454 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for id
17:35:12.454 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for categorie
17:35:12.454 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for code
17:35:12.454 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for libelle
17:35:12.454 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for prix
17:35:12.456 [main] DEBUG org.hibernate.mapping.PrimaryKey -
				Forcing column [id] to be non-null as it is part of the primary key for table [pizza]
17:35:12.486 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:35:12.493 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
17:35:12.494 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
17:35:12.494 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
17:35:12.494 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
17:35:12.494 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
17:35:12.495 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
17:35:12.495 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
17:35:12.495 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
17:35:12.495 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
17:35:12.495 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
17:35:12.495 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
17:35:12.495 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
17:35:12.495 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
17:35:12.495 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
17:35:12.495 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
17:35:12.495 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
17:35:12.495 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
17:35:12.495 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
17:35:12.495 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
17:35:12.495 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
17:35:12.495 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
17:35:12.496 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
17:35:12.496 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1ef6d34c
17:35:12.496 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
17:35:12.496 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
17:35:12.496 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
17:35:12.496 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
17:35:12.496 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
17:35:12.496 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
17:35:12.496 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
17:35:12.496 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
17:35:12.496 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
17:35:12.496 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
17:35:12.496 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
17:35:12.496 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
17:35:12.496 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
17:35:12.539 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
17:35:12.540 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_161\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e48362c, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY9\Documents\Pizzeria-console-object, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_161\lib\endorsed, java.io.tmpdir=C:\Users\ETY9\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mariadb://localhost:3306/pizzadb, java.library.path=C:\Program Files\Java\jre1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_161/bin/server;C:/Program Files/Java/jre1.8.0_161/bin;C:/Program Files/Java/jre1.8.0_161/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Users\ETY9\AppData\Local\Microsoft\WindowsApps;C:\Users\ETY9\AppData\Local\atom\bin;C:\Program Files\Maven\apache-maven-3.5.3\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_161\bin;;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY9, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=ETY9, java.class.path=C:\Users\ETY9\Documents\Pizzeria-console-object\target\classes;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.junit_4.12.0.v201504281640\junit.jar;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.hamcrest.core_1.3.0.v201303031735.jar;C:\Users\ETY9\.m2\repository\commons-io\commons-io\2.6\commons-io-2.6.jar;C:\Users\ETY9\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY9\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\ETY9\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY9\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY9\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY9\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY9\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY9\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY9\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY9\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-java8\5.1.0.Final\hibernate-java8-5.1.0.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_161, hibernate.connection.url=jdbc:mariadb://localhost:3306/pizzadb, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jre1.8.0_161\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_161\lib\resources.jar;C:\Program Files\Java\jre1.8.0_161\lib\rt.jar;C:\Program Files\Java\jre1.8.0_161\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_161\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_161\lib\jce.jar;C:\Program Files\Java\jre1.8.0_161\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_161\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_161\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
17:35:12.549 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
17:35:12.550 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
17:35:12.590 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
17:35:12.590 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
17:35:12.594 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:35:12.595 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:35:12.597 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
17:35:12.597 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
17:35:12.620 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:35:12.620 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:35:12.636 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				Static SQL for entity: fr.pizzeria.model.Pizza
17:35:12.636 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Version select: select id from pizza where id =?
17:35:12.636 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Snapshot select: select pizza_.id, pizza_.categorie as categori2_0_, pizza_.code as code3_0_, pizza_.nom as nom4_0_, pizza_.prix as prix5_0_ from pizza pizza_ where pizza_.id=?
17:35:12.636 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Insert 0: insert into pizza (categorie, code, nom, prix, id) values (?, ?, ?, ?, ?)
17:35:12.636 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Update 0: update pizza set categorie=?, code=?, nom=?, prix=? where id=?
17:35:12.637 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Delete 0: delete from pizza where id=?
17:35:12.637 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Identity insert: insert into pizza (categorie, code, nom, prix) values (?, ?, ?, ?)
17:35:12.662 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fe1ce85]
17:35:12.663 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:12.665 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@23aa363a]
17:35:12.668 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:35:12.668 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:12.669 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:12.669 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:12.669 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:12.681 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:12.686 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:35:12.688 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [NONE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:35:12.688 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c62d71]
17:35:12.688 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:12.688 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@47f4e407]
17:35:12.688 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:35:12.688 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:12.688 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:12.688 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:12.689 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:12.689 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:12.689 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:35:12.689 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:35:12.689 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48d5f34e]
17:35:12.689 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:12.689 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6ff65192]
17:35:12.689 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:35:12.690 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:12.690 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:12.690 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:12.690 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:12.690 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:12.690 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:35:12.690 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:35:12.691 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af0df05]
17:35:12.691 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:12.691 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@acdb094]
17:35:12.691 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:35:12.691 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:12.691 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:12.691 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:12.691 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:12.692 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:12.692 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:35:12.692 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_NOWAIT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:35:12.692 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b0f373b]
17:35:12.692 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:12.693 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4b45dcb8]
17:35:12.693 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:35:12.693 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:12.693 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:12.693 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:12.693 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:12.693 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:12.694 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:35:12.694 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_SKIPLOCKED]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:35:12.694 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2072acb2]
17:35:12.694 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:12.694 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@35a9782c]
17:35:12.695 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:35:12.695 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:12.695 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:12.695 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:12.695 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:12.695 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:12.696 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:35:12.696 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [FORCE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:35:12.696 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45815ffc]
17:35:12.696 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:12.697 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@d3957fe]
17:35:12.697 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:35:12.697 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:12.697 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:12.697 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:12.697 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:12.697 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:12.698 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:35:12.698 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? lock in share mode
17:35:12.698 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@299321e2]
17:35:12.698 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:12.698 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@64ba3208]
17:35:12.699 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:35:12.699 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:12.699 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:12.699 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:12.699 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:12.700 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:12.700 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:35:12.700 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_WRITE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:35:12.700 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a6944c]
17:35:12.700 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:12.701 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6b00f608]
17:35:12.701 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:35:12.701 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:12.701 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:12.701 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:12.701 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:12.701 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:12.702 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:35:12.702 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:35:12.702 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e821657]
17:35:12.702 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:12.702 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@71cf1b07]
17:35:12.702 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:35:12.702 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:12.702 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:12.702 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:12.703 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:12.703 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:12.703 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:35:12.703 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:35:12.703 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fce136b]
17:35:12.703 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:12.703 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@43b6123e]
17:35:12.703 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza.categorie
17:35:12.703 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:12.704 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:12.704 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:12.704 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:12.704 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:12.704 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
          - CompositeAttributeFetchImpl(composite=fr.pizzeria.model.CategoriePizza, querySpaceUid=<gen:1>, path=fr.pizzeria.model.Pizza.categoriePizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(categoriePizza)) : <gen:0> -> <gen:1>
             - CompositeQuerySpaceImpl(uid=<gen:1>)
                - SQL table alias mapping - pizza0_

17:35:12.704 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:35:12.716 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_MERGE on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:35:12.716 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_REFRESH on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:35:12.716 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
17:35:12.719 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator -
				No actions specified; doing nothing
17:35:12.720 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
17:35:12.720 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
17:35:12.722 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
17:35:12.723 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
17:35:12.723 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
17:35:12.724 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c055c54
17:35:12.726 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: 7463d1f9-d9c9-4528-9d6b-1b434f1c13ef (<unnamed>)
17:35:12.726 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
17:35:12.783 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:35:12.784 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:35:12.784 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.CategoriePizza (class must be instantiated by Interceptor)
17:35:12.792 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@476b0ae6
17:35:12.792 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pizza 
17:35:14.225 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
17:35:14.233 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@650eab8
17:35:14.233 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
17:35:14.262 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: SELECT p FROM fr.pizzeria.model.Pizza p
17:35:14.272 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'fr'
       |     |  |  |  \-[IDENT] Node: 'pizzeria'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Pizza'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

17:35:14.272 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:35:14.301 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
17:35:14.318 [main] DEBUG o.h.h.internal.ast.tree.FromElement -
				FromClause{level=1} : fr.pizzeria.model.Pizza (p) -> pizza0_
17:35:14.320 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode -
				Resolved : p -> pizza0_.id
17:35:14.322 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select : finishing up [level=1, statement=select]
17:35:14.322 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				processQuery() :  ( SELECT ( {select clause} pizza0_.id ) ( FromClause{level=1} pizza pizza0_ ) )
17:35:14.331 [main] DEBUG o.h.h.i.ast.util.JoinProcessor -
				Using FROM fragment [pizza pizza0_]
17:35:14.332 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select >> end [level=1, statement=select]
17:35:14.332 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (pizza)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'pizza0_.id as id1_0_' {alias=p, className=fr.pizzeria.model.Pizza, tableAlias=pizza0_}
    |  \-[SQL_TOKEN] SqlFragment: 'pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.nom as nom4_0_, pizza0_.prix as prix5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[pizza0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'pizza pizza0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=pizza,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}

17:35:14.332 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:35:14.341 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				HQL: SELECT p FROM fr.pizzeria.model.Pizza p
17:35:14.342 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				SQL: select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.nom as nom4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
17:35:14.342 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:35:14.361 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.nom as nom4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
17:35:14.374 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 0
17:35:14.428 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#3]
17:35:14.436 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 1
17:35:14.436 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#4]
17:35:14.437 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 2
17:35:14.437 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#6]
17:35:14.437 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 3
17:35:14.437 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#7]
17:35:14.437 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 4
17:35:14.437 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#16]
17:35:14.439 [main] DEBUG o.h.engine.internal.TwoPhaseLoad -
				Resolving associations for [fr.pizzeria.model.Pizza#3]
17:35:14.441 [main] DEBUG o.h.j.spi.AbstractEntityManagerImpl -
				Mark transaction for rollback
17:35:55.630 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
17:35:55.674 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
17:35:55.726 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
17:35:55.726 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pizza]
17:35:55.727 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
17:35:55.739 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY9/Documents/Pizzeria-console-object/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mariadb://localhost:3306/pizzadb
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
17:35:55.751 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
17:35:55.753 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
17:35:55.760 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
17:35:55.760 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
17:35:55.821 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
17:35:55.823 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
17:35:55.824 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
17:35:55.832 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
17:35:55.852 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
17:35:55.859 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
17:35:55.951 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
17:35:55.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
17:35:55.952 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37e547da
17:35:55.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15761df8
17:35:55.955 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@71c8becc
17:35:55.956 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@3bd40a57
17:35:55.958 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
17:35:55.959 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
17:35:55.959 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78047b92
17:35:55.960 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@4387b79e
17:35:55.960 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@4387b79e
17:35:55.960 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4387b79e
17:35:55.961 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
17:35:55.961 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
17:35:55.961 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@add0edd
17:35:55.963 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@1d76aeea
17:35:55.963 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@1d76aeea
17:35:55.963 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d76aeea
17:35:55.965 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
17:35:55.965 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
17:35:55.965 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@197d671
17:35:55.967 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
17:35:55.967 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
17:35:55.967 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7995092a
17:35:55.969 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
17:35:55.969 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
17:35:55.969 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23f7d05d
17:35:55.971 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f1302d6
17:35:55.972 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f1302d6
17:35:55.973 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@184cf7cf
17:35:55.973 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@184cf7cf
17:35:55.974 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@38c5cc4c
17:35:55.974 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@38c5cc4c
17:35:55.975 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ec756bd
17:35:55.976 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d121db3
17:35:55.977 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@12d4bf7e
17:35:55.977 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@12d4bf7e
17:35:55.979 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@2928854b
17:35:55.979 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@2928854b
17:35:55.980 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@124c278f
17:35:55.980 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@124c278f
17:35:55.981 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@229d10bd
17:35:55.981 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@229d10bd
17:35:55.981 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@229d10bd
17:35:55.983 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4ccb53
17:35:55.984 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@45b9a632
17:35:55.984 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@45b9a632
17:35:55.984 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@45b9a632
17:35:55.984 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b26e945
17:35:55.985 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@3c9d0b9d
17:35:55.985 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c9d0b9d
17:35:55.986 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@d4342c2
17:35:55.986 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d4342c2
17:35:55.987 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@12b0404f
17:35:55.987 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12b0404f
17:35:55.987 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@647fd8ce
17:35:55.988 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@647fd8ce
17:35:55.989 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1677d1
17:35:55.989 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1677d1
17:35:55.990 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e316c74
17:35:55.991 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@7f010382
17:35:55.991 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@7f010382
17:35:55.991 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@7f010382
17:35:55.992 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:35:55.992 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:35:55.992 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:35:55.993 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@5ccddd20
17:35:55.994 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@59d016c9
17:35:55.994 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@59d016c9
17:35:55.994 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@59d016c9
17:35:55.995 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48aaecc3
17:35:55.995 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48aaecc3
17:35:55.995 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48aaecc3
17:35:55.996 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@5c909414
17:35:55.996 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@78e117e3
17:35:55.999 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@bef2d72
17:35:55.999 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bef2d72
17:35:56.000 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fe7aac8
17:35:56.003 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@63021689
17:35:56.003 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@63021689
17:35:56.006 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@a9cd3b1
17:35:56.006 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a9cd3b1
17:35:56.006 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9225652
17:35:56.007 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6580cfdd
17:35:56.007 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@48ae9b55
17:35:56.009 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@1817d444
17:35:56.009 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1817d444
17:35:56.010 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@31368b99
17:35:56.010 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1725dc0f
17:35:56.010 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3911c2a7
17:35:56.010 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4ac3c60d
17:35:56.010 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4facf68f
17:35:56.010 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76508ed1
17:35:56.010 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41e36e46
17:35:56.010 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15c43bd9
17:35:56.017 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
17:35:56.022 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mariadb://localhost:3306/pizzadb]
17:35:56.022 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=root}
17:35:56.022 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
17:35:56.024 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
17:35:56.024 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
17:35:56.064 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
17:35:56.064 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
17:35:56.064 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
17:35:56.073 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
17:35:56.085 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
17:35:56.099 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
17:35:56.116 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@5609159b
17:35:56.116 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5609159b
17:35:56.135 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@3943a2be
17:35:56.136 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3943a2be
17:35:56.136 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
17:35:56.136 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
17:35:56.137 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
17:35:56.137 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
17:35:56.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
17:35:56.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
17:35:56.139 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
17:35:56.139 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
17:35:56.139 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
17:35:56.139 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
17:35:56.141 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
17:35:56.142 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
17:35:56.196 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
17:35:56.197 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
17:35:56.197 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
17:35:56.197 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
17:35:56.198 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
17:35:56.198 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
17:35:56.199 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
17:35:56.199 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
17:35:56.200 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
17:35:56.201 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
17:35:56.201 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
17:35:56.202 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
17:35:56.202 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
17:35:56.203 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
17:35:56.230 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
17:35:56.261 [main] DEBUG org.hibernate.cfg.AnnotationBinder -
				Binding entity from annotated class: fr.pizzeria.model.Pizza
17:35:56.279 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
17:35:56.284 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Import with entity name Pizza
17:35:56.288 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Bind entity fr.pizzeria.model.Pizza on table pizza
17:35:56.312 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=id, insertable=true, updatable=true, unique=false}
17:35:56.314 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property id with lazy=false
17:35:56.315 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:id]
17:35:56.317 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for id
17:35:56.319 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property id
17:35:56.323 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
17:35:56.323 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property categoriePizza with lazy=false
17:35:56.323 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:categoriePizza]
17:35:56.325 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for categoriePizza
17:35:56.325 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categoriePizza
17:35:56.326 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=code, insertable=true, updatable=true, unique=false}
17:35:56.326 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property code with lazy=false
17:35:56.326 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:code]
17:35:56.326 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for code
17:35:56.326 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property code
17:35:56.327 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=nom, insertable=true, updatable=true, unique=false}
17:35:56.327 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property libelle with lazy=false
17:35:56.327 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:libelle]
17:35:56.327 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for libelle
17:35:56.327 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property libelle
17:35:56.327 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=prix, insertable=true, updatable=true, unique=false}
17:35:56.328 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property prix with lazy=false
17:35:56.328 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:prix]
17:35:56.328 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for prix
17:35:56.328 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property prix
17:35:56.330 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for id
17:35:56.330 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for categoriePizza
17:35:56.331 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for code
17:35:56.331 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for libelle
17:35:56.331 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for prix
17:35:56.332 [main] DEBUG org.hibernate.mapping.PrimaryKey -
				Forcing column [id] to be non-null as it is part of the primary key for table [pizza]
17:35:56.358 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
17:35:56.359 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
17:35:56.359 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
17:35:56.359 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
17:35:56.359 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
17:35:56.359 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
17:35:56.359 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
17:35:56.359 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
17:35:56.359 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
17:35:56.359 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
17:35:56.359 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
17:35:56.359 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
17:35:56.359 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
17:35:56.359 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
17:35:56.359 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
17:35:56.359 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@62833051
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
17:35:56.360 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
17:35:56.361 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
17:35:56.399 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
17:35:56.401 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_161\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3561c410, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY9\Documents\Pizzeria-console-object, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_161\lib\endorsed, java.io.tmpdir=C:\Users\ETY9\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mariadb://localhost:3306/pizzadb, java.library.path=C:\Program Files\Java\jre1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_161/bin/server;C:/Program Files/Java/jre1.8.0_161/bin;C:/Program Files/Java/jre1.8.0_161/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Users\ETY9\AppData\Local\Microsoft\WindowsApps;C:\Users\ETY9\AppData\Local\atom\bin;C:\Program Files\Maven\apache-maven-3.5.3\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_161\bin;;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY9, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=ETY9, java.class.path=C:\Users\ETY9\Documents\Pizzeria-console-object\target\classes;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.junit_4.12.0.v201504281640\junit.jar;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.hamcrest.core_1.3.0.v201303031735.jar;C:\Users\ETY9\.m2\repository\commons-io\commons-io\2.6\commons-io-2.6.jar;C:\Users\ETY9\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY9\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\ETY9\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY9\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY9\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY9\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY9\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY9\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY9\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY9\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-java8\5.1.0.Final\hibernate-java8-5.1.0.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_161, hibernate.connection.url=jdbc:mariadb://localhost:3306/pizzadb, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jre1.8.0_161\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_161\lib\resources.jar;C:\Program Files\Java\jre1.8.0_161\lib\rt.jar;C:\Program Files\Java\jre1.8.0_161\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_161\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_161\lib\jce.jar;C:\Program Files\Java\jre1.8.0_161\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_161\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_161\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
17:35:56.416 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
17:35:56.419 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
17:35:56.458 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
17:35:56.458 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
17:35:56.470 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
17:35:56.470 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
17:35:56.510 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				Static SQL for entity: fr.pizzeria.model.Pizza
17:35:56.510 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Version select: select id from pizza where id =?
17:35:56.510 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Snapshot select: select pizza_.id, pizza_.categorie as categori2_0_, pizza_.code as code3_0_, pizza_.nom as nom4_0_, pizza_.prix as prix5_0_ from pizza pizza_ where pizza_.id=?
17:35:56.510 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Insert 0: insert into pizza (categorie, code, nom, prix, id) values (?, ?, ?, ?, ?)
17:35:56.511 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Update 0: update pizza set categorie=?, code=?, nom=?, prix=? where id=?
17:35:56.511 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Delete 0: delete from pizza where id=?
17:35:56.511 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Identity insert: insert into pizza (categorie, code, nom, prix) values (?, ?, ?, ?)
17:35:56.532 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68be8808]
17:35:56.534 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:56.534 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:56.534 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:56.534 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:56.534 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:56.545 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:56.549 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:35:56.552 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [NONE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:35:56.552 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@626c44e7]
17:35:56.553 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:56.553 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:56.553 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:56.553 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:56.553 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:56.553 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:56.554 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:35:56.554 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:35:56.555 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d730606]
17:35:56.555 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:56.555 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:56.555 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:56.555 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:56.555 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:56.556 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:56.556 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:35:56.556 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:35:56.557 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b00856b]
17:35:56.557 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:56.557 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:56.557 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:56.558 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:56.558 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:56.558 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:56.559 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:35:56.559 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_NOWAIT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:35:56.559 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35d08e6c]
17:35:56.559 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:56.560 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:56.560 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:56.560 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:56.560 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:56.560 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:56.560 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:35:56.560 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_SKIPLOCKED]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:35:56.560 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c45ee6e]
17:35:56.561 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:56.561 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:56.561 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:56.561 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:56.561 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:56.561 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:56.561 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:35:56.561 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [FORCE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:35:56.561 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5aac4250]
17:35:56.561 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:56.561 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:56.561 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:56.561 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:56.562 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:56.562 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:56.562 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:35:56.562 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? lock in share mode
17:35:56.562 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42463763]
17:35:56.562 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:56.562 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:56.562 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:56.562 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:56.562 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:56.563 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:56.563 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:35:56.563 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_WRITE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:35:56.563 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61f05988]
17:35:56.564 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:56.564 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:56.564 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:56.564 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:56.564 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:56.564 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:56.564 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:35:56.564 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:35:56.564 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fade1fc]
17:35:56.564 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:56.564 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:56.564 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:56.564 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:56.565 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:56.565 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:56.565 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:35:56.565 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:35:56.565 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41dd05a]
17:35:56.565 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:35:56.565 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:35:56.565 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:35:56.565 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:35:56.565 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:35:56.565 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:35:56.566 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:35:56.566 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:35:56.576 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_MERGE on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:35:56.576 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_REFRESH on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:35:56.576 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
17:35:56.579 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator -
				No actions specified; doing nothing
17:35:56.580 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
17:35:56.580 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
17:35:56.582 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
17:35:56.583 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
17:35:56.583 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
17:35:56.584 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7a560583
17:35:56.586 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: 83ac6a71-1ede-4326-8997-442574c8870b (<unnamed>)
17:35:56.586 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
17:35:56.649 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@5d1659ea
17:35:56.650 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pizza 
17:35:58.143 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
17:35:58.151 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@666b83a4
17:35:58.151 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
17:35:58.179 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: SELECT p FROM fr.pizzeria.model.Pizza p
17:35:58.188 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'fr'
       |     |  |  |  \-[IDENT] Node: 'pizzeria'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Pizza'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

17:35:58.189 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:35:58.217 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
17:35:58.234 [main] DEBUG o.h.h.internal.ast.tree.FromElement -
				FromClause{level=1} : fr.pizzeria.model.Pizza (p) -> pizza0_
17:35:58.235 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode -
				Resolved : p -> pizza0_.id
17:35:58.238 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select : finishing up [level=1, statement=select]
17:35:58.238 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				processQuery() :  ( SELECT ( {select clause} pizza0_.id ) ( FromClause{level=1} pizza pizza0_ ) )
17:35:58.246 [main] DEBUG o.h.h.i.ast.util.JoinProcessor -
				Using FROM fragment [pizza pizza0_]
17:35:58.247 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select >> end [level=1, statement=select]
17:35:58.247 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (pizza)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'pizza0_.id as id1_0_' {alias=p, className=fr.pizzeria.model.Pizza, tableAlias=pizza0_}
    |  \-[SQL_TOKEN] SqlFragment: 'pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.nom as nom4_0_, pizza0_.prix as prix5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[pizza0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'pizza pizza0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=pizza,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}

17:35:58.247 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:35:58.256 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				HQL: SELECT p FROM fr.pizzeria.model.Pizza p
17:35:58.256 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				SQL: select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.nom as nom4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
17:35:58.256 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:35:58.278 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.nom as nom4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
17:35:58.288 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 0
17:35:58.291 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#3]
17:37:59.059 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
17:37:59.103 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
17:37:59.153 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
17:37:59.153 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pizza]
17:37:59.155 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
17:37:59.167 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY9/Documents/Pizzeria-console-object/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mariadb://localhost:3306/pizzadb
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
17:37:59.178 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
17:37:59.180 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
17:37:59.188 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
17:37:59.188 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
17:37:59.247 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
17:37:59.249 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
17:37:59.251 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
17:37:59.262 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
17:37:59.288 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
17:37:59.296 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
17:37:59.402 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
17:37:59.402 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@37e547da
17:37:59.403 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37e547da
17:37:59.403 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15761df8
17:37:59.404 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@71c8becc
17:37:59.405 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@3bd40a57
17:37:59.406 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
17:37:59.407 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@78047b92
17:37:59.407 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78047b92
17:37:59.408 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@4387b79e
17:37:59.408 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@4387b79e
17:37:59.408 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4387b79e
17:37:59.409 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
17:37:59.410 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@add0edd
17:37:59.410 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@add0edd
17:37:59.411 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@1d76aeea
17:37:59.411 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@1d76aeea
17:37:59.412 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d76aeea
17:37:59.413 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
17:37:59.413 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@197d671
17:37:59.413 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@197d671
17:37:59.415 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
17:37:59.415 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@7995092a
17:37:59.415 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7995092a
17:37:59.417 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
17:37:59.417 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@23f7d05d
17:37:59.417 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23f7d05d
17:37:59.419 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f1302d6
17:37:59.419 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f1302d6
17:37:59.420 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@184cf7cf
17:37:59.420 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@184cf7cf
17:37:59.421 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@38c5cc4c
17:37:59.421 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@38c5cc4c
17:37:59.422 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ec756bd
17:37:59.423 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d121db3
17:37:59.424 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@12d4bf7e
17:37:59.424 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@12d4bf7e
17:37:59.426 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@2928854b
17:37:59.426 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@2928854b
17:37:59.427 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@124c278f
17:37:59.427 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@124c278f
17:37:59.428 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@229d10bd
17:37:59.428 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@229d10bd
17:37:59.428 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@229d10bd
17:37:59.429 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4ccb53
17:37:59.430 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@45b9a632
17:37:59.431 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@45b9a632
17:37:59.431 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@45b9a632
17:37:59.431 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b26e945
17:37:59.432 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@3c9d0b9d
17:37:59.432 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c9d0b9d
17:37:59.433 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@d4342c2
17:37:59.433 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d4342c2
17:37:59.434 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@12b0404f
17:37:59.434 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12b0404f
17:37:59.435 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@647fd8ce
17:37:59.435 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@647fd8ce
17:37:59.436 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1677d1
17:37:59.437 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1677d1
17:37:59.437 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e316c74
17:37:59.438 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@7f010382
17:37:59.438 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@7f010382
17:37:59.438 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@7f010382
17:37:59.439 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:37:59.439 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:37:59.440 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f0f1111
17:37:59.440 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@5ccddd20
17:37:59.441 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@59d016c9
17:37:59.441 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@59d016c9
17:37:59.441 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@59d016c9
17:37:59.442 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48aaecc3
17:37:59.442 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48aaecc3
17:37:59.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48aaecc3
17:37:59.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@5c909414
17:37:59.444 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@78e117e3
17:37:59.447 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@bef2d72
17:37:59.447 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bef2d72
17:37:59.447 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fe7aac8
17:37:59.450 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@63021689
17:37:59.450 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@63021689
17:37:59.452 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@a9cd3b1
17:37:59.452 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a9cd3b1
17:37:59.453 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9225652
17:37:59.453 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6580cfdd
17:37:59.454 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@48ae9b55
17:37:59.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@1817d444
17:37:59.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1817d444
17:37:59.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@31368b99
17:37:59.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1725dc0f
17:37:59.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3911c2a7
17:37:59.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4ac3c60d
17:37:59.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4facf68f
17:37:59.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76508ed1
17:37:59.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41e36e46
17:37:59.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15c43bd9
17:37:59.466 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
17:37:59.472 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mariadb://localhost:3306/pizzadb]
17:37:59.472 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=root}
17:37:59.472 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
17:37:59.474 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
17:37:59.474 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
17:37:59.513 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
17:37:59.513 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
17:37:59.513 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
17:37:59.525 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
17:37:59.538 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
17:37:59.554 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
17:37:59.572 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@5609159b
17:37:59.572 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5609159b
17:37:59.591 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@3943a2be
17:37:59.591 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3943a2be
17:37:59.592 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
17:37:59.592 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71c3b41
17:37:59.592 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
17:37:59.593 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bf0219d
17:37:59.594 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
17:37:59.594 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@87a85e1
17:37:59.594 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
17:37:59.594 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c947bc5
17:37:59.595 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
17:37:59.595 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1356d4d4
17:37:59.598 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
17:37:59.598 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f27a732
17:37:59.656 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
17:37:59.656 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
17:37:59.657 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
17:37:59.657 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
17:37:59.657 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
17:37:59.658 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
17:37:59.658 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
17:37:59.659 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
17:37:59.660 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
17:37:59.660 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
17:37:59.661 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
17:37:59.662 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
17:37:59.662 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
17:37:59.663 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
17:37:59.690 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
17:37:59.720 [main] DEBUG org.hibernate.cfg.AnnotationBinder -
				Binding entity from annotated class: fr.pizzeria.model.Pizza
17:37:59.739 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
17:37:59.743 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Import with entity name Pizza
17:37:59.746 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Bind entity fr.pizzeria.model.Pizza on table pizza
17:37:59.776 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=id, insertable=true, updatable=true, unique=false}
17:37:59.778 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property id with lazy=false
17:37:59.780 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:id]
17:37:59.781 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for id
17:37:59.783 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property id
17:37:59.787 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=categorie, insertable=true, updatable=true, unique=false}
17:37:59.787 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property categoriePizza with lazy=false
17:37:59.787 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:categoriePizza]
17:37:59.789 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for categoriePizza
17:37:59.789 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categoriePizza
17:37:59.790 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=code, insertable=true, updatable=true, unique=false}
17:37:59.790 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property code with lazy=false
17:37:59.790 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:code]
17:37:59.790 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for code
17:37:59.790 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property code
17:37:59.790 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=nom, insertable=true, updatable=true, unique=false}
17:37:59.791 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property libelle with lazy=false
17:37:59.791 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:libelle]
17:37:59.791 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for libelle
17:37:59.791 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property libelle
17:37:59.791 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(pizza), mappingColumn=prix, insertable=true, updatable=true, unique=false}
17:37:59.791 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property prix with lazy=false
17:37:59.791 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:prix]
17:37:59.791 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for prix
17:37:59.791 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property prix
17:37:59.793 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for id
17:37:59.793 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for categoriePizza
17:37:59.794 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for code
17:37:59.794 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for libelle
17:37:59.794 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for prix
17:37:59.795 [main] DEBUG org.hibernate.mapping.PrimaryKey -
				Forcing column [id] to be non-null as it is part of the primary key for table [pizza]
17:37:59.824 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
17:37:59.825 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
17:37:59.825 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
17:37:59.825 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
17:37:59.825 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
17:37:59.825 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
17:37:59.825 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
17:37:59.825 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
17:37:59.825 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
17:37:59.825 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
17:37:59.826 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
17:37:59.826 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
17:37:59.826 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
17:37:59.826 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
17:37:59.826 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
17:37:59.826 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
17:37:59.826 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
17:37:59.826 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
17:37:59.826 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
17:37:59.826 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
17:37:59.826 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
17:37:59.826 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
17:37:59.826 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@62833051
17:37:59.826 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
17:37:59.827 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
17:37:59.827 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
17:37:59.827 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
17:37:59.827 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
17:37:59.827 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
17:37:59.827 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
17:37:59.827 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
17:37:59.827 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
17:37:59.827 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
17:37:59.827 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
17:37:59.827 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
17:37:59.827 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
17:37:59.862 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
17:37:59.863 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_161\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3561c410, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY9\Documents\Pizzeria-console-object, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_161\lib\endorsed, java.io.tmpdir=C:\Users\ETY9\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mariadb://localhost:3306/pizzadb, java.library.path=C:\Program Files\Java\jre1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_161/bin/server;C:/Program Files/Java/jre1.8.0_161/bin;C:/Program Files/Java/jre1.8.0_161/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Users\ETY9\AppData\Local\Microsoft\WindowsApps;C:\Users\ETY9\AppData\Local\atom\bin;C:\Program Files\Maven\apache-maven-3.5.3\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_161\bin;;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY9, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=ETY9, java.class.path=C:\Users\ETY9\Documents\Pizzeria-console-object\target\classes;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.junit_4.12.0.v201504281640\junit.jar;C:\Users\ETY9\Documents\sts\sts-bundle\sts-3.8.4.RELEASE\plugins\org.hamcrest.core_1.3.0.v201303031735.jar;C:\Users\ETY9\.m2\repository\commons-io\commons-io\2.6\commons-io-2.6.jar;C:\Users\ETY9\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY9\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY9\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\ETY9\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\ETY9\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY9\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY9\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY9\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY9\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY9\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY9\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY9\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY9\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY9\.m2\repository\org\hibernate\hibernate-java8\5.1.0.Final\hibernate-java8-5.1.0.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_161, hibernate.connection.url=jdbc:mariadb://localhost:3306/pizzadb, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jre1.8.0_161\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_161\lib\resources.jar;C:\Program Files\Java\jre1.8.0_161\lib\rt.jar;C:\Program Files\Java\jre1.8.0_161\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_161\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_161\lib\jce.jar;C:\Program Files\Java\jre1.8.0_161\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_161\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_161\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
17:37:59.876 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
17:37:59.882 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
17:37:59.923 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
17:37:59.923 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
17:37:59.934 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
17:37:59.935 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
17:37:59.973 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				Static SQL for entity: fr.pizzeria.model.Pizza
17:37:59.973 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Version select: select id from pizza where id =?
17:37:59.973 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Snapshot select: select pizza_.id, pizza_.categorie as categori2_0_, pizza_.code as code3_0_, pizza_.nom as nom4_0_, pizza_.prix as prix5_0_ from pizza pizza_ where pizza_.id=?
17:37:59.973 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Insert 0: insert into pizza (categorie, code, nom, prix, id) values (?, ?, ?, ?, ?)
17:37:59.973 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Update 0: update pizza set categorie=?, code=?, nom=?, prix=? where id=?
17:37:59.973 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Delete 0: delete from pizza where id=?
17:37:59.973 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Identity insert: insert into pizza (categorie, code, nom, prix) values (?, ?, ?, ?)
17:37:59.999 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68be8808]
17:38:00.000 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:38:00.000 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:38:00.000 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:38:00.000 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:38:00.000 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:38:00.017 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:38:00.022 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:38:00.023 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [NONE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:38:00.023 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@626c44e7]
17:38:00.023 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:38:00.023 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:38:00.023 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:38:00.023 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:38:00.024 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:38:00.024 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:38:00.024 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:38:00.024 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:38:00.024 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d730606]
17:38:00.024 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:38:00.024 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:38:00.024 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:38:00.024 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:38:00.024 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:38:00.025 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:38:00.025 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:38:00.025 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:38:00.025 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b00856b]
17:38:00.025 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:38:00.025 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:38:00.026 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:38:00.026 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:38:00.026 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:38:00.026 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:38:00.026 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:38:00.026 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_NOWAIT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:38:00.026 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35d08e6c]
17:38:00.026 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:38:00.027 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:38:00.027 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:38:00.027 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:38:00.027 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:38:00.027 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:38:00.027 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:38:00.027 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_SKIPLOCKED]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:38:00.027 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c45ee6e]
17:38:00.027 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:38:00.027 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:38:00.027 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:38:00.027 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:38:00.027 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:38:00.027 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:38:00.027 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:38:00.028 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [FORCE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:38:00.028 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5aac4250]
17:38:00.028 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:38:00.028 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:38:00.028 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:38:00.028 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:38:00.028 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:38:00.028 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:38:00.028 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:38:00.028 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_READ]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? lock in share mode
17:38:00.029 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42463763]
17:38:00.029 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:38:00.029 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:38:00.029 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:38:00.029 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:38:00.029 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:38:00.029 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:38:00.029 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:38:00.030 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_WRITE]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:38:00.030 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61f05988]
17:38:00.030 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:38:00.030 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:38:00.030 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:38:00.030 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:38:00.030 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:38:00.030 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:38:00.030 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:38:00.031 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=? for update
17:38:00.031 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fade1fc]
17:38:00.031 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:38:00.031 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:38:00.031 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:38:00.031 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:38:00.031 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:38:00.031 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:38:00.031 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:38:00.031 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:38:00.032 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41dd05a]
17:38:00.032 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categoriePizza
17:38:00.032 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
17:38:00.032 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : libelle
17:38:00.032 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
17:38:00.032 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
17:38:00.032 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
17:38:00.032 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

17:38:00.032 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:38:00.043 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_MERGE on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:38:00.043 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_REFRESH on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.categorie as categori2_0_0_, pizza0_.code as code3_0_0_, pizza0_.nom as nom4_0_0_, pizza0_.prix as prix5_0_0_ from pizza pizza0_ where pizza0_.id=?
17:38:00.043 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
17:38:00.047 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator -
				No actions specified; doing nothing
17:38:00.047 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
17:38:00.047 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
17:38:00.049 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
17:38:00.050 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
17:38:00.051 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
17:38:00.052 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7a560583
17:38:00.055 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: 1c65d236-6e68-4ef2-8693-106ac77ade04 (<unnamed>)
17:38:00.055 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
17:38:00.085 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@5d1659ea
17:38:00.085 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pizza 
17:38:01.809 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
17:38:01.819 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@666b83a4
17:38:01.819 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
17:38:01.842 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: SELECT p FROM fr.pizzeria.model.Pizza p
17:38:01.850 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'fr'
       |     |  |  |  \-[IDENT] Node: 'pizzeria'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Pizza'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

17:38:01.851 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:38:01.872 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
17:38:01.886 [main] DEBUG o.h.h.internal.ast.tree.FromElement -
				FromClause{level=1} : fr.pizzeria.model.Pizza (p) -> pizza0_
17:38:01.887 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode -
				Resolved : p -> pizza0_.id
17:38:01.890 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select : finishing up [level=1, statement=select]
17:38:01.890 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				processQuery() :  ( SELECT ( {select clause} pizza0_.id ) ( FromClause{level=1} pizza pizza0_ ) )
17:38:01.897 [main] DEBUG o.h.h.i.ast.util.JoinProcessor -
				Using FROM fragment [pizza pizza0_]
17:38:01.898 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select >> end [level=1, statement=select]
17:38:01.898 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (pizza)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'pizza0_.id as id1_0_' {alias=p, className=fr.pizzeria.model.Pizza, tableAlias=pizza0_}
    |  \-[SQL_TOKEN] SqlFragment: 'pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.nom as nom4_0_, pizza0_.prix as prix5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[pizza0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'pizza pizza0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=pizza,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}

17:38:01.898 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:38:01.904 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				HQL: SELECT p FROM fr.pizzeria.model.Pizza p
17:38:01.904 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				SQL: select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.nom as nom4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
17:38:01.904 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
17:38:01.920 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.categorie as categori2_0_, pizza0_.code as code3_0_, pizza0_.nom as nom4_0_, pizza0_.prix as prix5_0_ from pizza pizza0_
17:38:01.933 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 0
17:38:01.936 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#3]
17:38:01.944 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 1
17:38:01.944 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#4]
17:38:01.944 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 2
17:38:01.944 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#6]
17:38:01.945 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 3
17:38:01.945 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#7]
17:38:01.945 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 4
17:38:01.945 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#16]
17:38:01.946 [main] DEBUG o.h.engine.internal.TwoPhaseLoad -
				Resolving associations for [fr.pizzeria.model.Pizza#3]
17:38:01.950 [main] DEBUG o.h.engine.internal.TwoPhaseLoad -
				Done materializing entity [fr.pizzeria.model.Pizza#3]
17:38:01.950 [main] DEBUG o.h.engine.internal.TwoPhaseLoad -
				Resolving associations for [fr.pizzeria.model.Pizza#4]
17:38:01.950 [main] DEBUG o.h.engine.internal.TwoPhaseLoad -
				Done materializing entity [fr.pizzeria.model.Pizza#4]
17:38:01.950 [main] DEBUG o.h.engine.internal.TwoPhaseLoad -
				Resolving associations for [fr.pizzeria.model.Pizza#6]
17:38:01.950 [main] DEBUG o.h.engine.internal.TwoPhaseLoad -
				Done materializing entity [fr.pizzeria.model.Pizza#6]
17:38:01.950 [main] DEBUG o.h.engine.internal.TwoPhaseLoad -
				Resolving associations for [fr.pizzeria.model.Pizza#7]
17:38:01.950 [main] DEBUG o.h.engine.internal.TwoPhaseLoad -
				Done materializing entity [fr.pizzeria.model.Pizza#7]
17:38:01.950 [main] DEBUG o.h.engine.internal.TwoPhaseLoad -
				Resolving associations for [fr.pizzeria.model.Pizza#16]
17:38:01.950 [main] DEBUG o.h.engine.internal.TwoPhaseLoad -
				Done materializing entity [fr.pizzeria.model.Pizza#16]
17:38:29.510 [pool-1-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Connection pool now considered primed; min-size will be maintained
